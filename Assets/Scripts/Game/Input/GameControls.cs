//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Game/Input/GameControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Game.Input
{
    public partial class @GameControls : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @GameControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameControls"",
    ""maps"": [
        {
            ""name"": ""Default"",
            ""id"": ""c41f9937-9315-4165-88aa-1fc394e73bc4"",
            ""actions"": [
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""02363b07-061a-460a-98c1-869866ee10e2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Press"",
                    ""type"": ""Button"",
                    ""id"": ""9f3fb404-5007-48f1-91ce-3d11fd199f70"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""71071efd-7e69-439b-af75-cffa3b4cb0fa"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""f0d9061e-837f-4876-9820-9e4d14c9ce7c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ZoomReset"",
                    ""type"": ""Button"",
                    ""id"": ""3f526289-87c4-4967-89a1-fefa86248a22"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""58446fc1-def9-4ab3-9276-b50d5782182f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""f2a377e5-261f-4c3f-ad85-c3f6e4d96263"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""VirtualPadLeft"",
                    ""type"": ""Value"",
                    ""id"": ""ac465d1d-71bd-4698-a74c-dbc13e304edd"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""VirtualPadRight"",
                    ""type"": ""Value"",
                    ""id"": ""b180314d-9366-455a-a9ec-e62853ab5f0d"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""91790740-81fd-469d-8d95-925402e65307"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d691b44-2948-4a28-ab15-e49f91b0b76b"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""831fc2e9-ef7f-492f-b076-184e04ec93d1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79d40d53-1ddc-492d-9d1a-3623b666f77a"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.01,y=0.01),InvertVector2(invertX=false)"",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7ef2a33-f5b1-499b-b061-6f087e4b1664"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomReset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WSAD"",
                    ""id"": ""3e106f6c-b81b-4f85-89e6-54989c124ef0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""da89da08-2d54-4138-8c54-4061c72e93d1"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""aa42f354-b5d0-4250-aa23-325e9f065e56"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""92d953f2-6b5b-4317-986f-2fa37ce28004"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0940f1f9-ee54-4ff0-9cf7-b589f21b1661"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d0d0e0bf-0e28-46ee-b16f-c1e23483ebaa"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb45ffca-6970-4759-9776-751565fc8d89"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VirtualPadLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96345868-5f88-4988-9cdc-e81ead4deade"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VirtualPadRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Default
            m_Default = asset.FindActionMap("Default", throwIfNotFound: true);
            m_Default_Escape = m_Default.FindAction("Escape", throwIfNotFound: true);
            m_Default_Press = m_Default.FindAction("Press", throwIfNotFound: true);
            m_Default_Look = m_Default.FindAction("Look", throwIfNotFound: true);
            m_Default_Zoom = m_Default.FindAction("Zoom", throwIfNotFound: true);
            m_Default_ZoomReset = m_Default.FindAction("ZoomReset", throwIfNotFound: true);
            m_Default_Move = m_Default.FindAction("Move", throwIfNotFound: true);
            m_Default_MousePosition = m_Default.FindAction("MousePosition", throwIfNotFound: true);
            m_Default_VirtualPadLeft = m_Default.FindAction("VirtualPadLeft", throwIfNotFound: true);
            m_Default_VirtualPadRight = m_Default.FindAction("VirtualPadRight", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Default
        private readonly InputActionMap m_Default;
        private IDefaultActions m_DefaultActionsCallbackInterface;
        private readonly InputAction m_Default_Escape;
        private readonly InputAction m_Default_Press;
        private readonly InputAction m_Default_Look;
        private readonly InputAction m_Default_Zoom;
        private readonly InputAction m_Default_ZoomReset;
        private readonly InputAction m_Default_Move;
        private readonly InputAction m_Default_MousePosition;
        private readonly InputAction m_Default_VirtualPadLeft;
        private readonly InputAction m_Default_VirtualPadRight;
        public struct DefaultActions
        {
            private @GameControls m_Wrapper;
            public DefaultActions(@GameControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Escape => m_Wrapper.m_Default_Escape;
            public InputAction @Press => m_Wrapper.m_Default_Press;
            public InputAction @Look => m_Wrapper.m_Default_Look;
            public InputAction @Zoom => m_Wrapper.m_Default_Zoom;
            public InputAction @ZoomReset => m_Wrapper.m_Default_ZoomReset;
            public InputAction @Move => m_Wrapper.m_Default_Move;
            public InputAction @MousePosition => m_Wrapper.m_Default_MousePosition;
            public InputAction @VirtualPadLeft => m_Wrapper.m_Default_VirtualPadLeft;
            public InputAction @VirtualPadRight => m_Wrapper.m_Default_VirtualPadRight;
            public InputActionMap Get() { return m_Wrapper.m_Default; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(DefaultActions set) { return set.Get(); }
            public void SetCallbacks(IDefaultActions instance)
            {
                if (m_Wrapper.m_DefaultActionsCallbackInterface != null)
                {
                    @Escape.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnEscape;
                    @Escape.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnEscape;
                    @Escape.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnEscape;
                    @Press.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnPress;
                    @Press.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnPress;
                    @Press.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnPress;
                    @Look.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnLook;
                    @Look.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnLook;
                    @Look.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnLook;
                    @Zoom.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnZoom;
                    @Zoom.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnZoom;
                    @Zoom.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnZoom;
                    @ZoomReset.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnZoomReset;
                    @ZoomReset.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnZoomReset;
                    @ZoomReset.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnZoomReset;
                    @Move.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMove;
                    @MousePosition.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMousePosition;
                    @MousePosition.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMousePosition;
                    @MousePosition.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMousePosition;
                    @VirtualPadLeft.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnVirtualPadLeft;
                    @VirtualPadLeft.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnVirtualPadLeft;
                    @VirtualPadLeft.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnVirtualPadLeft;
                    @VirtualPadRight.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnVirtualPadRight;
                    @VirtualPadRight.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnVirtualPadRight;
                    @VirtualPadRight.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnVirtualPadRight;
                }
                m_Wrapper.m_DefaultActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Escape.started += instance.OnEscape;
                    @Escape.performed += instance.OnEscape;
                    @Escape.canceled += instance.OnEscape;
                    @Press.started += instance.OnPress;
                    @Press.performed += instance.OnPress;
                    @Press.canceled += instance.OnPress;
                    @Look.started += instance.OnLook;
                    @Look.performed += instance.OnLook;
                    @Look.canceled += instance.OnLook;
                    @Zoom.started += instance.OnZoom;
                    @Zoom.performed += instance.OnZoom;
                    @Zoom.canceled += instance.OnZoom;
                    @ZoomReset.started += instance.OnZoomReset;
                    @ZoomReset.performed += instance.OnZoomReset;
                    @ZoomReset.canceled += instance.OnZoomReset;
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @MousePosition.started += instance.OnMousePosition;
                    @MousePosition.performed += instance.OnMousePosition;
                    @MousePosition.canceled += instance.OnMousePosition;
                    @VirtualPadLeft.started += instance.OnVirtualPadLeft;
                    @VirtualPadLeft.performed += instance.OnVirtualPadLeft;
                    @VirtualPadLeft.canceled += instance.OnVirtualPadLeft;
                    @VirtualPadRight.started += instance.OnVirtualPadRight;
                    @VirtualPadRight.performed += instance.OnVirtualPadRight;
                    @VirtualPadRight.canceled += instance.OnVirtualPadRight;
                }
            }
        }
        public DefaultActions @Default => new DefaultActions(this);
        public interface IDefaultActions
        {
            void OnEscape(InputAction.CallbackContext context);
            void OnPress(InputAction.CallbackContext context);
            void OnLook(InputAction.CallbackContext context);
            void OnZoom(InputAction.CallbackContext context);
            void OnZoomReset(InputAction.CallbackContext context);
            void OnMove(InputAction.CallbackContext context);
            void OnMousePosition(InputAction.CallbackContext context);
            void OnVirtualPadLeft(InputAction.CallbackContext context);
            void OnVirtualPadRight(InputAction.CallbackContext context);
        }
    }
}
