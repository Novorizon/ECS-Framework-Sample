// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: req.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cspb {

  /// <summary>Holder for reflection information generated from req.proto</summary>
  public static partial class ReqReflection {

    #region Descriptor
    /// <summary>File descriptor for req.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReqReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglyZXEucHJvdG8SBGNzcGIaCWRlZi5wcm90bxoLbG9naW4ucHJvdG8aDHN0",
            "cnVjdC5wcm90byIzCgpNYXBWaWV3UmVxEhMKC2ZldGNoX2dyaWRzGAEgAygF",
            "EhAKCG9iX2dyaWRzGAIgAygFIm8KCE1hcmNoUmVxEhAKCHRyb29wX2lkGAEg",
            "ASgDEhAKCGRlc3RfcG9zGAIgASgFEisKC2FjdGlvbl90eXBlGAMgASgOMhYu",
            "Y3NwYi5USUxFX0FDVElPTl9UWVBFEhIKCmFjdGlvbl9jbnQYBCABKAUiHAoN",
            "R2l2ZXVwVGlsZVJlcRILCgNwb3MYASABKAUiIAoRVW5kb0dpdmV1cFRpbGVS",
            "ZXESCwoDcG9zGAEgASgFIhoKC1RpbGVJbmZvUmVxEgsKA3BvcxgBIAEoBSIg",
            "CgxNYXJjaEluZm9SZXESEAoIbWFyY2hfaWQYASABKAMiDQoLSGVyb0xpc3RS",
            "ZXEiLAoLSGVyb1dpdGhQb3MSEAoIaGVyb19yaWQYASABKAMSCwoDcG9zGAIg",
            "ASgFIk8KC05ld1Ryb29wUmVxEg8KB2NpdHlfaWQYASABKAMSEAoIdHJvb3Bf",
            "bm8YAiABKAUSEAoIaGVyb19yaWQYAyABKAMSCwoDcG9zGAQgASgFIjMKDURl",
            "bEZpZ2h0ZXJSZXESEAoIdHJvb3BfaWQYASABKAMSEAoIaGVyb19yaWQYAiAB",
            "KAMiQQoOU3dhcEZpZ2h0ZXJSZXESEAoIdHJvb3BfaWQYASABKAMSEAoIaGVy",
            "b19yaWQYAiABKAMSCwoDcG9zGAMgASgFIlMKD0YyRW1wdHlUcm9vcFJlcRIP",
            "CgdjaXR5X2lkGAEgASgDEhAKCHRyb29wX25vGAIgASgFEhAKCGhlcm9fcmlk",
            "GAMgASgDEgsKA3BvcxgEIAEoBSJACg1IZXJvMlRyb29wUmVxEhAKCHRyb29w",
            "X2lkGAEgASgDEhAKCGhlcm9fcmlkGAIgASgDEgsKA3BvcxgDIAEoBSIOCgxU",
            "cm9vcExpc3RSZXEiDgoMU2tpbGxMaXN0UmVxIjcKEFJlc2VhcmNoU2tpbGxS",
            "ZXESEQoJaGVyb19yaWRzGAEgAygDEhAKCHNraWxsX2lkGAIgASgFIkIKDUxl",
            "YXJuU2tpbGxSZXESEAoIaGVyb19yaWQYASABKAMSEAoIc2tpbGxfaWQYAiAB",
            "KAUSDQoFaW5kZXgYAyABKAUiMQoORm9yZ2V0U2tpbGxSZXESEAoIaGVyb19y",
            "aWQYASABKAMSDQoFaW5kZXgYAiABKAUiDQoLUmVzb3VyY2VSZXEiEAoOUGxh",
            "eWVyTGFuZHNSZXEiHgoPRGVmZW5kZXJJbmZvUmVxEgsKA3BvcxgBIAEoBSIh",
            "CgtCUmVwb3J0c1JlcRISCgpyZXBvcnRfaWRzGAEgAygDIhEKD0JSZXBvcnRC",
            "YXNpY1JlcSIjCg5SZWFkQlJlcG9ydFJlcRIRCglyZXBvcnRfaWQYASABKAMi",
            "JQoQQlJlcG9ydERldGFpbFJlcRIRCglyZXBvcnRfaWQYASABKAMiSgoURmln",
            "aHRlcldpdGhDb25zY3JpcHQSEwoLZmlnaHRlcl9yaWQYASABKAMSDgoGbm9y",
            "bWFsGAIgASgFEg0KBXJlZGlmGAMgASgFIk4KDENvbnNjcmlwdFJlcRIQCgh0",
            "cm9vcF9pZBgBIAEoAxIsCghmaWdodGVycxgCIAMoCzIaLmNzcGIuRmlnaHRl",
            "cldpdGhDb25zY3JpcHQiNgoQVW5kb0NvbnNjcmlwdFJlcRIQCgh0cm9vcF9p",
            "ZBgBIAEoAxIQCghmaWdodGVycxgCIAMoAyIyCg5GaWdodGVyV2l0aENudBIT",
            "CgtmaWdodGVyX3JpZBgBIAEoAxILCgNjbnQYAiABKAUiVAoYUmVkaWZTcGVl",
            "ZFVwQ29uc2NyaXB0UmVxEhAKCHRyb29wX2lkGAEgASgDEiYKCGZpZ2h0ZXJz",
            "GAIgAygLMhQuY3NwYi5GaWdodGVyV2l0aENudCI0Cg9VcGdyYWRlQnVpbGRS",
            "ZXESDwoHY2l0eV9pZBgBIAEoAxIQCghidWlsZF9pZBgCIAEoBSI6ChVVcGdy",
            "YWRlQnVpbGRBdE9uY2VSZXESDwoHY2l0eV9pZBgBIAEoAxIQCghidWlsZF9p",
            "ZBgCIAEoBSI6ChVDYW5jZWxVcGdyYWRlQnVpbGRSZXESDwoHY2l0eV9pZBgB",
            "IAEoAxIQCghidWlsZF9pZBgCIAEoBSIhCgxIZWFydEJlYXRSZXESEQoJY2xp",
            "ZW50X3RzGAEgASgDIiQKFFVwZGF0ZU5iR3VpZGVTdGVwUmVxEgwKBHN0ZXAY",
            "ASADKAkiEgoQRmluaXNoTmJHdWlkZVJlcSImChVVcGRhdGVVbmZyb2NlR3Vp",
            "ZGVSZXESDQoFZmxhZ3MYASABKAMiFQoFR21SZXESDAoEYXJncxgBIAMoCSJB",
            "ChFDb2xsZWN0QlJlcG9ydFJlcRIYChB0YXJnZXRfcGxheWVyX2lkGAEgASgD",
            "EhIKCmJyZXBvcnRfaWQYAiABKAMiKwoVVW5kb0NvbGxlY3RCUmVwb3J0UmVx",
            "EhIKCmJyZXBvcnRfaWQYASABKAMiRAoOUmV0dXJuVHJvb3BSZXESEAoIdHJv",
            "b3BfaWQYASABKAMSIAoFc3RhdGUYAiABKA4yES5jc3BiLlRST09QX1NUQVRF",
            "IkUKDkhlcm9Qcm9tb3RlUmVxEhgKEHByb21vdGVfaGVyb19yaWQYASABKAMS",
            "GQoRY29uc3VtZV9oZXJvX3JpZHMYAiADKAMiQQoMSGVyb0F3YWtlUmVxEhYK",
            "DmF3YWtlX2hlcm9fcmlkGAEgASgDEhkKEWNvbnN1bWVfaGVyb19yaWRzGAIg",
            "AygDIlgKDEFsbG90QXNnblJlcRIQCghoZXJvX3JpZBgBIAEoAxILCgNhdGsY",
            "AiABKAUSDAoEcGRlZhgDIAEoBRIMCgRpbnRlGAQgASgFEg0KBXNwZWVkGAUg",
            "ASgFIjEKDFJlc2V0QXNnblJlcRIQCghoZXJvX3JpZBgBIAEoAxIPCgdpc19m",
            "cmVlGAIgASgIIjoKEUhlcm9zMlNraWxsRXhwUmVxEhEKCWhlcm9fcmlkcxgB",
            "IAMoAxISCgppc19kaWFtb25kGAIgASgIIkkKE0hlcm9Ta2lsbFVwZ3JhZGVS",
            "ZXESEAoIaGVyb19yaWQYASABKAMSEAoIc2tpbGxfaWQYAiABKAUSDgoGY3Vy",
            "X2x2GAMgASgFIh8KC0xvY2tIZXJvUmVxEhAKCGhlcm9fcmlkGAEgASgDIiEK",
            "DVVuTG9ja0hlcm9SZXESEAoIaGVyb19yaWQYASABKAMiEQoPQ29sbGVjdFRh",
            "eGVzUmVxIjUKC1RyYW5zUmVzUmVxEgsKA3NyYxgBIAEoBRIMCgRkZXN0GAIg",
            "ASgFEgsKA2NudBgDIAEoBSJQCgtTZW5kTWFpbFJlcRIhCglyZWNlaXZlcnMY",
            "ASADKAsyDi5jc3BiLk1haWxBZGRyEg0KBXRpdGxlGAIgASgJEg8KB2NvbnRl",
            "bnQYAyABKAkiPwoOR2V0TWFpbExpc3RSZXESDgoGYm94X2lkGAEgASgFEhAK",
            "CHN0YXJ0X2lkGAIgASgDEgsKA2FzYxgDIAEoCCI3CgtSZWFkTWFpbFJlcRIQ",
            "CghtYWlsX2lkcxgBIAMoAxIWCg5nZXRfYXR0YWNobWVudBgCIAEoCCIkChBH",
            "ZXRBdHRhY2htZW50UmVxEhAKCG1haWxfaWRzGAEgAygDIh4KC1N0YXJNYWls",
            "UmVxEg8KB21haWxfaWQYASABKAMiIQoNVW5zdGFyTWFpbFJlcRIQCghtYWls",
            "X2lkcxgBIAMoAyIhCg1EZWxldGVNYWlsUmVxEhAKCG1haWxfaWRzGAEgAygD",
            "IisKB0NoYXRSZXESDwoHY2hhbm5lbBgBIAEoBRIPCgdjb250ZW50GAIgASgJ",
            "Ig0KC0NoYXRMaXN0UmVxIh0KDkNvbGxlY3RMYW5kUmVxEgsKA3BvcxgBIAEo",
            "BSIhChJVbmRvQ29sbGVjdExhbmRSZXESCwoDcG9zGAEgASgFIj0KCEdhY2hh",
            "UmVxEhIKCnBhY2thZ2VfaWQYASABKAMSEAoIcHJpY2VfaWQYAiABKAUSCwoD",
            "Y250GAMgASgFIg4KDEdhY2hhTGlzdFJlcSIpChVUcm9vcEFycml2ZWRBdE9u",
            "Y2VSZXESEAoIdHJvb3BfaWQYASABKAMiIgoPR2V0VGFza0F3YXJkUmVxEg8K",
            "B3Rhc2tfaWQYASABKAUiDQoLVGFza0xpc3RSZXEiCAoGVGF4UmVxIi4KCk1h",
            "cmtldHNSZXESCgoCaWQYASABKAUSFAoMcmVmcmVzaF90aW1lGAIgASgDIjUK",
            "EU1hcmtldEJ1eVRpbWVzUmVxEgoKAmlkGAEgASgFEhQKDHJlZnJlc2hfdGlt",
            "ZRgCIAEoAyJBChBNYXJrZXRCdXlJdGVtUmVxEgoKAmlkGAEgASgFEgsKA2lk",
            "eBgCIAEoBRIUCgxyZWZyZXNoX3RpbWUYAyABKAMiQwoRVXBHdWFyZGlhbkhl",
            "cm9SZXESDwoHY2l0eV9pZBgBIAEoAxIQCghoZXJvX3JpZBgCIAEoAxILCgNw",
            "b3MYAyABKAUiOAoTRG93bkd1YXJkaWFuSGVyb1JlcRIPCgdjaXR5X2lkGAEg",
            "ASgDEhAKCGhlcm9fcmlkGAIgASgDIkgKE1N3YXBHdWFyZGlhbkhlcm9SZXES",
            "DwoHY2l0eV9pZBgBIAEoAxIPCgdzcmNfcG9zGAIgASgFEg8KB2RzdF9wb3MY",
            "AyABKAUiVwoMQnVpbGRDaXR5UmVxEiIKCWNpdHlfdHlwZRgBIAEoDjIPLmNz",
            "cGIuQ0lUWV9UWVBFEhEKCWNpdHlfbmFtZRgCIAEoCRIQCghjaXR5X3BvcxgD",
            "IAEoBSJHChBEaXNtYW50bGVDaXR5UmVxEiIKCWNpdHlfdHlwZRgBIAEoDjIP",
            "LmNzcGIuQ0lUWV9UWVBFEg8KB2NpdHlfaWQYAiABKAMiHwoNVGFza0FjdGl2",
            "ZVJlcRIOCgZ0YXNrSWQYASABKAUiVQoMRmlsdGVyUG9zUmVxEg4KBmNlbnRl",
            "chgBIAEoBRIOCgZyYWRpdXMYAiABKAUSFAoMb2NjdXB5X3N0YXRlGAMgASgF",
            "Eg8KB2xhbmRfbHYYBCABKAUiGgoLSXNOZWFyYnlSZXESCwoDcG9zGAEgASgF",
            "IjYKDVZpc2lvblZpZXdSZXESEwoLZmV0Y2hfZ3JpZHMYASADKAUSEAoIb2Jf",
            "Z3JpZHMYAiADKAUiFgoURm9yY2VDb2xsZWN0VGF4ZXNSZXEiDgoMR2V0QWxs",
            "VGF4UmVxIhAKDkdldERlYWxJbmZvUmVxIiQKD0NoYW5nZUF2YXRhclJlcRIR",
            "CglhdmF0YXJfaWQYASABKAUiHwoOQ2hhbmdlSW50cm9SZXESDQoFaW50cm8Y",
            "ASABKAkiDwoNTGFuZHNCYXNpY1JlcSIcCgxGaW5kVW5pb25SZXESDAoEbmFt",
            "ZRgBIAEoCSIVChNHZXRVbmlvbkluZm9MaXN0UmVxIl4KDkNyZWF0ZVVuaW9u",
            "UmVxEgwKBG5hbWUYASABKAkSEQoJbmlja19uYW1lGAIgASgJEgwKBGRlc2MY",
            "AyABKAkSHQoEZmxhZxgEIAEoCzIPLmNzcGIuVW5pb25GbGFnIiEKDUFwcGx5",
            "VW5pb25SZXESEAoIdW5pb25faWQYASABKAMiIwoTQXBwbHlVbmlvbkJ5TmFt",
            "ZVJlcRIMCgRuYW1lGAEgASgJIiAKDEpvaW5VbmlvblJlcRIQCgh1bmlvbl9p",
            "ZBgBIAEoAyIiChJKb2luVW5pb25CeU5hbWVSZXESDAoEbmFtZRgBIAEoCSIn",
            "ChNDYW5jZWxBcHBseVVuaW9uUmVxEhAKCHVuaW9uX2lkGAEgASgDIhEKD0dl",
            "dFVuaW9uSW5mb1JlcSISChBEaXNzb2x2ZVVuaW9uUmVxIjAKFERlbWlzZVVu",
            "aW9uTGVhZGVyUmVxEhgKEHRhcmdldF9wbGF5ZXJfaWQYASABKAMiEQoPQ2Fu",
            "Y2VsRGVtaXNlUmVxIkEKFEFwcHJvdmVBcHBseVVuaW9uUmVxEhcKD2FwcGx5",
            "X3BsYXllcl9pZBgBIAEoAxIQCghpc19hZ3JlZRgCIAEoCCIwChRSZW1vdmVV",
            "bmlvbk1lbWJlclJlcRIYChB0YXJnZXRfcGxheWVyX2lkGAEgASgDIkgKGkFw",
            "cG9pbnRVbmlvbk1lbWJlclRpdGxlUmVxEhgKEHRhcmdldF9wbGF5ZXJfaWQY",
            "ASABKAMSEAoIdGl0bGVfaWQYAiABKAUiFQoTR2l2ZXVwVW5pb25UaXRsZVJl",
            "cSIOCgxRdWl0VW5pb25SZXEiLgoSSW52aXRlSm9pblVuaW9uUmVxEhgKEElu",
            "dml0ZV9wbGF5ZXJfaWQYASABKAMiLwoYSW52aXRlSm9pblVuaW9uQnlOYW1l",
            "UmVxEhMKC3BsYXllcl9uYW1lGAEgASgJIjgKEkRlYWxVbmlvbkludml0ZVJl",
            "cRIQCgh1bmlvbl9pZBgBIAEoAxIQCghpc19hZ3JlZRgCIAEoCCIqChRTZXRV",
            "bmlvbkpvaW5MaW1pdFJlcRISCgpsaW1pdF90eXBlGAEgASgFIh8KD1NldFVu",
            "aW9uRGVzY1JlcRIMCgRkZXNjGAEgASgJIjEKEERvbmF0ZVRvVW5pb25SZXES",
            "HQoJcmVzb3VyY2VzGAEgAygLMgouY3NwYi5JdGVtIjkKE1NldFVuaW9uUmVs",
            "YXRpb25SZXESEAoIdW5pb25faWQYASABKAMSEAoIcmVsYXRpb24YAiABKAUi",
            "PQoPQWRkVW5pb25NYXJrUmVxEgsKA3BvcxgBIAEoBRIMCgRuYW1lGAIgASgJ",
            "Eg8KB2NvbnRlbnQYAyABKAkiHgoPRGVsVW5pb25NYXJrUmVxEgsKA3BvcxgB",
            "IAEoBSJEChFTd2FwVW5pb25UaXRsZVJlcRIVCg1zcmNfcGxheWVyX2lkGAEg",
            "ASgDEhgKEHRhcmdldF9wbGF5ZXJfaWQYAiABKAMiDgoMTUNpdHlMaXN0UmVx",
            "IhsKCFBDaXR5UmVxEg8KB2NpdHlfaWQYASABKAMiNgoVRmFsbGVuUGF5UmV2",
            "b2x0UmVzUmVxEh0KCXJlc291cmNlcxgBIAMoCzIKLmNzcGIuSXRlbSIOCgxU",
            "ZXN0VW5pb25SZXEiEQoPQ29uZmxpY3RMaXN0UmVxIg4KDE5DaXR5TGlzdFJl",
            "cSISChBQdXNoRXZlbnRMaXN0UmVxIiUKE1VwZGF0ZVB1c2hFdmVudHNSZXES",
            "DgoGZXZlbnRzGAEgAygJIikKDVBsYXllckluZm9SZXESGAoQdGFyZ2V0X3Bs",
            "YXllcl9pZBgBIAEoAyIwChRQbGF5ZXJDaGF0QWNjb3VudFJlcRIYChB0YXJn",
            "ZXRfcGxheWVyX2lkGAEgASgDIgoKCERyaWxsUmVxIjAKCkRyaWxsSURSZXES",
            "EAoIZHJpbGxfaWQYASABKAUSEAoIaXNfcmVzZXQYAiABKAgiRwoSRHJpbGxB",
            "dHRhY2tUaWxlUmVxEhAKCGRyaWxsX2lkGAEgASgFEhAKCHRpbGVfcG9zGAIg",
            "ASgFEg0KBWhlcm9zGAMgAygDIigKFURyaWxsU2tpcEFuaW1hdGlvblJlcRIP",
            "Cgdpc19za2lwGAEgASgIIhMKEURyaWxsU3RhdGlzdGljUmVxIjQKD01vdmVN",
            "YWluQ2l0eVJlcRIPCgdjaXR5X2lkGAEgASgDEhAKCGRlc3RfcG9zGAIgASgF",
            "IhMKEUNpdHlJbnZpbmNpYmxlUmVxIjMKDUhlcm8yU2tpbGxSZXESEAoIaGVy",
            "b19yaWQYASABKAMSEAoIc2tpbGxfaWQYAiABKAUiDgoMUm9ib3RUYXNrUmVx",
            "IiMKEVJvYm90VGFza0ZpbnNoUmVxEg4KBnRhc2tJZBgBIAEoAyIQCg5MZWFk",
            "ZXJCb2FyZFJlcSIfCgxFcGljQXdhcmRSZXESDwoHZXBpY19pZBgBIAEoBSIQ",
            "Cg5HZXRFcGljSW5mb1JlcSIkChFUYXNrRXZlbnRBd2FyZFJlcRIPCgd0YXNr",
            "X2lkGAEgASgFIjYKDVBOUmVnaXN0ZXJSZXESEQoJcHVzaF90eXBlGAEgASgJ",
            "EhIKCnB1c2hfdG9rZW4YAiABKAkiDQoLUGF5VG9rZW5SZXEiIgoSQ2hhbmdl",
            "TmFtZUNoZWNrUmVxEgwKBG5hbWUYASABKAkiHQoNQ2hhbmdlTmFtZVJlcRIM",
            "CgRuYW1lGAEgASgJIhIKEE5wY0NpdHlPY2N1cHlSZXEiOgoVUXVlc3Rpb25O",
            "YWlyZUF3YXJkUmVxEhAKCGZpbl90eXBlGAEgASgFEg8KB3Rhc2tfaWQYAiAB",
            "KAUiJQoVUXVlcnlQbGF5ZXJzQnlOYW1lUmVxEgwKBG5hbWUYASABKAkiHgoO",
            "UXVlcnlQbGF5ZXJSZXESDAoEbmFtZRgBIAEoCSIUChJMb2dpbkV2ZW50QXdh",
            "cmRSZXFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Cspb.DefReflection.Descriptor, global::Cspb.LoginReflection.Descriptor, global::Cspb.StructReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.MapViewReq), global::Cspb.MapViewReq.Parser, new[]{ "FetchGrids", "ObGrids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.MarchReq), global::Cspb.MarchReq.Parser, new[]{ "TroopId", "DestPos", "ActionType", "ActionCnt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.GiveupTileReq), global::Cspb.GiveupTileReq.Parser, new[]{ "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.UndoGiveupTileReq), global::Cspb.UndoGiveupTileReq.Parser, new[]{ "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.TileInfoReq), global::Cspb.TileInfoReq.Parser, new[]{ "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.MarchInfoReq), global::Cspb.MarchInfoReq.Parser, new[]{ "MarchId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.HeroListReq), global::Cspb.HeroListReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.HeroWithPos), global::Cspb.HeroWithPos.Parser, new[]{ "HeroRid", "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.NewTroopReq), global::Cspb.NewTroopReq.Parser, new[]{ "CityId", "TroopNo", "HeroRid", "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.DelFighterReq), global::Cspb.DelFighterReq.Parser, new[]{ "TroopId", "HeroRid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.SwapFighterReq), global::Cspb.SwapFighterReq.Parser, new[]{ "TroopId", "HeroRid", "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.F2EmptyTroopReq), global::Cspb.F2EmptyTroopReq.Parser, new[]{ "CityId", "TroopNo", "HeroRid", "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.Hero2TroopReq), global::Cspb.Hero2TroopReq.Parser, new[]{ "TroopId", "HeroRid", "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.TroopListReq), global::Cspb.TroopListReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.SkillListReq), global::Cspb.SkillListReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ResearchSkillReq), global::Cspb.ResearchSkillReq.Parser, new[]{ "HeroRids", "SkillId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.LearnSkillReq), global::Cspb.LearnSkillReq.Parser, new[]{ "HeroRid", "SkillId", "Index" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ForgetSkillReq), global::Cspb.ForgetSkillReq.Parser, new[]{ "HeroRid", "Index" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ResourceReq), global::Cspb.ResourceReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.PlayerLandsReq), global::Cspb.PlayerLandsReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.DefenderInfoReq), global::Cspb.DefenderInfoReq.Parser, new[]{ "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.BReportsReq), global::Cspb.BReportsReq.Parser, new[]{ "ReportIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.BReportBasicReq), global::Cspb.BReportBasicReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ReadBReportReq), global::Cspb.ReadBReportReq.Parser, new[]{ "ReportId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.BReportDetailReq), global::Cspb.BReportDetailReq.Parser, new[]{ "ReportId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.FighterWithConscript), global::Cspb.FighterWithConscript.Parser, new[]{ "FighterRid", "Normal", "Redif" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ConscriptReq), global::Cspb.ConscriptReq.Parser, new[]{ "TroopId", "Fighters" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.UndoConscriptReq), global::Cspb.UndoConscriptReq.Parser, new[]{ "TroopId", "Fighters" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.FighterWithCnt), global::Cspb.FighterWithCnt.Parser, new[]{ "FighterRid", "Cnt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.RedifSpeedUpConscriptReq), global::Cspb.RedifSpeedUpConscriptReq.Parser, new[]{ "TroopId", "Fighters" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.UpgradeBuildReq), global::Cspb.UpgradeBuildReq.Parser, new[]{ "CityId", "BuildId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.UpgradeBuildAtOnceReq), global::Cspb.UpgradeBuildAtOnceReq.Parser, new[]{ "CityId", "BuildId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.CancelUpgradeBuildReq), global::Cspb.CancelUpgradeBuildReq.Parser, new[]{ "CityId", "BuildId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.HeartBeatReq), global::Cspb.HeartBeatReq.Parser, new[]{ "ClientTs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.UpdateNbGuideStepReq), global::Cspb.UpdateNbGuideStepReq.Parser, new[]{ "Step" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.FinishNbGuideReq), global::Cspb.FinishNbGuideReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.UpdateUnfroceGuideReq), global::Cspb.UpdateUnfroceGuideReq.Parser, new[]{ "Flags" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.GmReq), global::Cspb.GmReq.Parser, new[]{ "Args" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.CollectBReportReq), global::Cspb.CollectBReportReq.Parser, new[]{ "TargetPlayerId", "BreportId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.UndoCollectBReportReq), global::Cspb.UndoCollectBReportReq.Parser, new[]{ "BreportId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ReturnTroopReq), global::Cspb.ReturnTroopReq.Parser, new[]{ "TroopId", "State" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.HeroPromoteReq), global::Cspb.HeroPromoteReq.Parser, new[]{ "PromoteHeroRid", "ConsumeHeroRids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.HeroAwakeReq), global::Cspb.HeroAwakeReq.Parser, new[]{ "AwakeHeroRid", "ConsumeHeroRids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.AllotAsgnReq), global::Cspb.AllotAsgnReq.Parser, new[]{ "HeroRid", "Atk", "Pdef", "Inte", "Speed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ResetAsgnReq), global::Cspb.ResetAsgnReq.Parser, new[]{ "HeroRid", "IsFree" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.Heros2SkillExpReq), global::Cspb.Heros2SkillExpReq.Parser, new[]{ "HeroRids", "IsDiamond" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.HeroSkillUpgradeReq), global::Cspb.HeroSkillUpgradeReq.Parser, new[]{ "HeroRid", "SkillId", "CurLv" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.LockHeroReq), global::Cspb.LockHeroReq.Parser, new[]{ "HeroRid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.UnLockHeroReq), global::Cspb.UnLockHeroReq.Parser, new[]{ "HeroRid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.CollectTaxesReq), global::Cspb.CollectTaxesReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.TransResReq), global::Cspb.TransResReq.Parser, new[]{ "Src", "Dest", "Cnt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.SendMailReq), global::Cspb.SendMailReq.Parser, new[]{ "Receivers", "Title", "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.GetMailListReq), global::Cspb.GetMailListReq.Parser, new[]{ "BoxId", "StartId", "Asc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ReadMailReq), global::Cspb.ReadMailReq.Parser, new[]{ "MailIds", "GetAttachment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.GetAttachmentReq), global::Cspb.GetAttachmentReq.Parser, new[]{ "MailIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.StarMailReq), global::Cspb.StarMailReq.Parser, new[]{ "MailId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.UnstarMailReq), global::Cspb.UnstarMailReq.Parser, new[]{ "MailIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.DeleteMailReq), global::Cspb.DeleteMailReq.Parser, new[]{ "MailIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ChatReq), global::Cspb.ChatReq.Parser, new[]{ "Channel", "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ChatListReq), global::Cspb.ChatListReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.CollectLandReq), global::Cspb.CollectLandReq.Parser, new[]{ "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.UndoCollectLandReq), global::Cspb.UndoCollectLandReq.Parser, new[]{ "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.GachaReq), global::Cspb.GachaReq.Parser, new[]{ "PackageId", "PriceId", "Cnt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.GachaListReq), global::Cspb.GachaListReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.TroopArrivedAtOnceReq), global::Cspb.TroopArrivedAtOnceReq.Parser, new[]{ "TroopId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.GetTaskAwardReq), global::Cspb.GetTaskAwardReq.Parser, new[]{ "TaskId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.TaskListReq), global::Cspb.TaskListReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.TaxReq), global::Cspb.TaxReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.MarketsReq), global::Cspb.MarketsReq.Parser, new[]{ "Id", "RefreshTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.MarketBuyTimesReq), global::Cspb.MarketBuyTimesReq.Parser, new[]{ "Id", "RefreshTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.MarketBuyItemReq), global::Cspb.MarketBuyItemReq.Parser, new[]{ "Id", "Idx", "RefreshTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.UpGuardianHeroReq), global::Cspb.UpGuardianHeroReq.Parser, new[]{ "CityId", "HeroRid", "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.DownGuardianHeroReq), global::Cspb.DownGuardianHeroReq.Parser, new[]{ "CityId", "HeroRid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.SwapGuardianHeroReq), global::Cspb.SwapGuardianHeroReq.Parser, new[]{ "CityId", "SrcPos", "DstPos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.BuildCityReq), global::Cspb.BuildCityReq.Parser, new[]{ "CityType", "CityName", "CityPos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.DismantleCityReq), global::Cspb.DismantleCityReq.Parser, new[]{ "CityType", "CityId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.TaskActiveReq), global::Cspb.TaskActiveReq.Parser, new[]{ "TaskId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.FilterPosReq), global::Cspb.FilterPosReq.Parser, new[]{ "Center", "Radius", "OccupyState", "LandLv" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.IsNearbyReq), global::Cspb.IsNearbyReq.Parser, new[]{ "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.VisionViewReq), global::Cspb.VisionViewReq.Parser, new[]{ "FetchGrids", "ObGrids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ForceCollectTaxesReq), global::Cspb.ForceCollectTaxesReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.GetAllTaxReq), global::Cspb.GetAllTaxReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.GetDealInfoReq), global::Cspb.GetDealInfoReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ChangeAvatarReq), global::Cspb.ChangeAvatarReq.Parser, new[]{ "AvatarId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ChangeIntroReq), global::Cspb.ChangeIntroReq.Parser, new[]{ "Intro" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.LandsBasicReq), global::Cspb.LandsBasicReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.FindUnionReq), global::Cspb.FindUnionReq.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.GetUnionInfoListReq), global::Cspb.GetUnionInfoListReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.CreateUnionReq), global::Cspb.CreateUnionReq.Parser, new[]{ "Name", "NickName", "Desc", "Flag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ApplyUnionReq), global::Cspb.ApplyUnionReq.Parser, new[]{ "UnionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ApplyUnionByNameReq), global::Cspb.ApplyUnionByNameReq.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.JoinUnionReq), global::Cspb.JoinUnionReq.Parser, new[]{ "UnionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.JoinUnionByNameReq), global::Cspb.JoinUnionByNameReq.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.CancelApplyUnionReq), global::Cspb.CancelApplyUnionReq.Parser, new[]{ "UnionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.GetUnionInfoReq), global::Cspb.GetUnionInfoReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.DissolveUnionReq), global::Cspb.DissolveUnionReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.DemiseUnionLeaderReq), global::Cspb.DemiseUnionLeaderReq.Parser, new[]{ "TargetPlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.CancelDemiseReq), global::Cspb.CancelDemiseReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ApproveApplyUnionReq), global::Cspb.ApproveApplyUnionReq.Parser, new[]{ "ApplyPlayerId", "IsAgree" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.RemoveUnionMemberReq), global::Cspb.RemoveUnionMemberReq.Parser, new[]{ "TargetPlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.AppointUnionMemberTitleReq), global::Cspb.AppointUnionMemberTitleReq.Parser, new[]{ "TargetPlayerId", "TitleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.GiveupUnionTitleReq), global::Cspb.GiveupUnionTitleReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.QuitUnionReq), global::Cspb.QuitUnionReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.InviteJoinUnionReq), global::Cspb.InviteJoinUnionReq.Parser, new[]{ "InvitePlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.InviteJoinUnionByNameReq), global::Cspb.InviteJoinUnionByNameReq.Parser, new[]{ "PlayerName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.DealUnionInviteReq), global::Cspb.DealUnionInviteReq.Parser, new[]{ "UnionId", "IsAgree" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.SetUnionJoinLimitReq), global::Cspb.SetUnionJoinLimitReq.Parser, new[]{ "LimitType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.SetUnionDescReq), global::Cspb.SetUnionDescReq.Parser, new[]{ "Desc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.DonateToUnionReq), global::Cspb.DonateToUnionReq.Parser, new[]{ "Resources" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.SetUnionRelationReq), global::Cspb.SetUnionRelationReq.Parser, new[]{ "UnionId", "Relation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.AddUnionMarkReq), global::Cspb.AddUnionMarkReq.Parser, new[]{ "Pos", "Name", "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.DelUnionMarkReq), global::Cspb.DelUnionMarkReq.Parser, new[]{ "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.SwapUnionTitleReq), global::Cspb.SwapUnionTitleReq.Parser, new[]{ "SrcPlayerId", "TargetPlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.MCityListReq), global::Cspb.MCityListReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.PCityReq), global::Cspb.PCityReq.Parser, new[]{ "CityId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.FallenPayRevoltResReq), global::Cspb.FallenPayRevoltResReq.Parser, new[]{ "Resources" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.TestUnionReq), global::Cspb.TestUnionReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ConflictListReq), global::Cspb.ConflictListReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.NCityListReq), global::Cspb.NCityListReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.PushEventListReq), global::Cspb.PushEventListReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.UpdatePushEventsReq), global::Cspb.UpdatePushEventsReq.Parser, new[]{ "Events" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.PlayerInfoReq), global::Cspb.PlayerInfoReq.Parser, new[]{ "TargetPlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.PlayerChatAccountReq), global::Cspb.PlayerChatAccountReq.Parser, new[]{ "TargetPlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.DrillReq), global::Cspb.DrillReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.DrillIDReq), global::Cspb.DrillIDReq.Parser, new[]{ "DrillId", "IsReset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.DrillAttackTileReq), global::Cspb.DrillAttackTileReq.Parser, new[]{ "DrillId", "TilePos", "Heros" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.DrillSkipAnimationReq), global::Cspb.DrillSkipAnimationReq.Parser, new[]{ "IsSkip" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.DrillStatisticReq), global::Cspb.DrillStatisticReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.MoveMainCityReq), global::Cspb.MoveMainCityReq.Parser, new[]{ "CityId", "DestPos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.CityInvincibleReq), global::Cspb.CityInvincibleReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.Hero2SkillReq), global::Cspb.Hero2SkillReq.Parser, new[]{ "HeroRid", "SkillId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.RobotTaskReq), global::Cspb.RobotTaskReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.RobotTaskFinshReq), global::Cspb.RobotTaskFinshReq.Parser, new[]{ "TaskId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.LeaderBoardReq), global::Cspb.LeaderBoardReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.EpicAwardReq), global::Cspb.EpicAwardReq.Parser, new[]{ "EpicId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.GetEpicInfoReq), global::Cspb.GetEpicInfoReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.TaskEventAwardReq), global::Cspb.TaskEventAwardReq.Parser, new[]{ "TaskId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.PNRegisterReq), global::Cspb.PNRegisterReq.Parser, new[]{ "PushType", "PushToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.PayTokenReq), global::Cspb.PayTokenReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ChangeNameCheckReq), global::Cspb.ChangeNameCheckReq.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.ChangeNameReq), global::Cspb.ChangeNameReq.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.NpcCityOccupyReq), global::Cspb.NpcCityOccupyReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.QuestionNaireAwardReq), global::Cspb.QuestionNaireAwardReq.Parser, new[]{ "FinType", "TaskId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.QueryPlayersByNameReq), global::Cspb.QueryPlayersByNameReq.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.QueryPlayerReq), global::Cspb.QueryPlayerReq.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cspb.LoginEventAwardReq), global::Cspb.LoginEventAwardReq.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MapViewReq : pb::IMessage<MapViewReq> {
    private static readonly pb::MessageParser<MapViewReq> _parser = new pb::MessageParser<MapViewReq>(() => new MapViewReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapViewReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapViewReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapViewReq(MapViewReq other) : this() {
      fetchGrids_ = other.fetchGrids_.Clone();
      obGrids_ = other.obGrids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapViewReq Clone() {
      return new MapViewReq(this);
    }

    /// <summary>Field number for the "fetch_grids" field.</summary>
    public const int FetchGridsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_fetchGrids_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> fetchGrids_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 需要获取视野的grid pos
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FetchGrids {
      get { return fetchGrids_; }
    }

    /// <summary>Field number for the "ob_grids" field.</summary>
    public const int ObGridsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_obGrids_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> obGrids_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 需要挂载视野的grid pos
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ObGrids {
      get { return obGrids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapViewReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapViewReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fetchGrids_.Equals(other.fetchGrids_)) return false;
      if(!obGrids_.Equals(other.obGrids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fetchGrids_.GetHashCode();
      hash ^= obGrids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fetchGrids_.WriteTo(output, _repeated_fetchGrids_codec);
      obGrids_.WriteTo(output, _repeated_obGrids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fetchGrids_.CalculateSize(_repeated_fetchGrids_codec);
      size += obGrids_.CalculateSize(_repeated_obGrids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapViewReq other) {
      if (other == null) {
        return;
      }
      fetchGrids_.Add(other.fetchGrids_);
      obGrids_.Add(other.obGrids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            fetchGrids_.AddEntriesFrom(input, _repeated_fetchGrids_codec);
            break;
          }
          case 18:
          case 16: {
            obGrids_.AddEntriesFrom(input, _repeated_obGrids_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MarchReq : pb::IMessage<MarchReq> {
    private static readonly pb::MessageParser<MarchReq> _parser = new pb::MessageParser<MarchReq>(() => new MarchReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarchReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarchReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarchReq(MarchReq other) : this() {
      troopId_ = other.troopId_;
      destPos_ = other.destPos_;
      actionType_ = other.actionType_;
      actionCnt_ = other.actionCnt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarchReq Clone() {
      return new MarchReq(this);
    }

    /// <summary>Field number for the "troop_id" field.</summary>
    public const int TroopIdFieldNumber = 1;
    private long troopId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TroopId {
      get { return troopId_; }
      set {
        troopId_ = value;
      }
    }

    /// <summary>Field number for the "dest_pos" field.</summary>
    public const int DestPosFieldNumber = 2;
    private int destPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DestPos {
      get { return destPos_; }
      set {
        destPos_ = value;
      }
    }

    /// <summary>Field number for the "action_type" field.</summary>
    public const int ActionTypeFieldNumber = 3;
    private global::Cspb.TILE_ACTION_TYPE actionType_ = 0;
    /// <summary>
    /// 行军到达之后行动类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cspb.TILE_ACTION_TYPE ActionType {
      get { return actionType_; }
      set {
        actionType_ = value;
      }
    }

    /// <summary>Field number for the "action_cnt" field.</summary>
    public const int ActionCntFieldNumber = 4;
    private int actionCnt_;
    /// <summary>
    /// 行军到达之后行动次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActionCnt {
      get { return actionCnt_; }
      set {
        actionCnt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarchReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarchReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TroopId != other.TroopId) return false;
      if (DestPos != other.DestPos) return false;
      if (ActionType != other.ActionType) return false;
      if (ActionCnt != other.ActionCnt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TroopId != 0L) hash ^= TroopId.GetHashCode();
      if (DestPos != 0) hash ^= DestPos.GetHashCode();
      if (ActionType != 0) hash ^= ActionType.GetHashCode();
      if (ActionCnt != 0) hash ^= ActionCnt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TroopId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TroopId);
      }
      if (DestPos != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DestPos);
      }
      if (ActionType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ActionType);
      }
      if (ActionCnt != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ActionCnt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TroopId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TroopId);
      }
      if (DestPos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DestPos);
      }
      if (ActionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActionType);
      }
      if (ActionCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionCnt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarchReq other) {
      if (other == null) {
        return;
      }
      if (other.TroopId != 0L) {
        TroopId = other.TroopId;
      }
      if (other.DestPos != 0) {
        DestPos = other.DestPos;
      }
      if (other.ActionType != 0) {
        ActionType = other.ActionType;
      }
      if (other.ActionCnt != 0) {
        ActionCnt = other.ActionCnt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TroopId = input.ReadInt64();
            break;
          }
          case 16: {
            DestPos = input.ReadInt32();
            break;
          }
          case 24: {
            actionType_ = (global::Cspb.TILE_ACTION_TYPE) input.ReadEnum();
            break;
          }
          case 32: {
            ActionCnt = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 放弃占领的格子
  /// </summary>
  public sealed partial class GiveupTileReq : pb::IMessage<GiveupTileReq> {
    private static readonly pb::MessageParser<GiveupTileReq> _parser = new pb::MessageParser<GiveupTileReq>(() => new GiveupTileReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GiveupTileReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiveupTileReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiveupTileReq(GiveupTileReq other) : this() {
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiveupTileReq Clone() {
      return new GiveupTileReq(this);
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 1;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GiveupTileReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GiveupTileReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GiveupTileReq other) {
      if (other == null) {
        return;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 取消放弃
  /// </summary>
  public sealed partial class UndoGiveupTileReq : pb::IMessage<UndoGiveupTileReq> {
    private static readonly pb::MessageParser<UndoGiveupTileReq> _parser = new pb::MessageParser<UndoGiveupTileReq>(() => new UndoGiveupTileReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UndoGiveupTileReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UndoGiveupTileReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UndoGiveupTileReq(UndoGiveupTileReq other) : this() {
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UndoGiveupTileReq Clone() {
      return new UndoGiveupTileReq(this);
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 1;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UndoGiveupTileReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UndoGiveupTileReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UndoGiveupTileReq other) {
      if (other == null) {
        return;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求指定位置的格子信息
  /// </summary>
  public sealed partial class TileInfoReq : pb::IMessage<TileInfoReq> {
    private static readonly pb::MessageParser<TileInfoReq> _parser = new pb::MessageParser<TileInfoReq>(() => new TileInfoReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TileInfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TileInfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TileInfoReq(TileInfoReq other) : this() {
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TileInfoReq Clone() {
      return new TileInfoReq(this);
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 1;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TileInfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TileInfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TileInfoReq other) {
      if (other == null) {
        return;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求指定行军信息
  /// </summary>
  public sealed partial class MarchInfoReq : pb::IMessage<MarchInfoReq> {
    private static readonly pb::MessageParser<MarchInfoReq> _parser = new pb::MessageParser<MarchInfoReq>(() => new MarchInfoReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarchInfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarchInfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarchInfoReq(MarchInfoReq other) : this() {
      marchId_ = other.marchId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarchInfoReq Clone() {
      return new MarchInfoReq(this);
    }

    /// <summary>Field number for the "march_id" field.</summary>
    public const int MarchIdFieldNumber = 1;
    private long marchId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MarchId {
      get { return marchId_; }
      set {
        marchId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarchInfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarchInfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MarchId != other.MarchId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MarchId != 0L) hash ^= MarchId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MarchId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MarchId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MarchId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MarchId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarchInfoReq other) {
      if (other == null) {
        return;
      }
      if (other.MarchId != 0L) {
        MarchId = other.MarchId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MarchId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 获取英雄列表
  /// </summary>
  public sealed partial class HeroListReq : pb::IMessage<HeroListReq> {
    private static readonly pb::MessageParser<HeroListReq> _parser = new pb::MessageParser<HeroListReq>(() => new HeroListReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroListReq(HeroListReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroListReq Clone() {
      return new HeroListReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroListReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 英雄及其阵容位置信息
  /// </summary>
  public sealed partial class HeroWithPos : pb::IMessage<HeroWithPos> {
    private static readonly pb::MessageParser<HeroWithPos> _parser = new pb::MessageParser<HeroWithPos>(() => new HeroWithPos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroWithPos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroWithPos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroWithPos(HeroWithPos other) : this() {
      heroRid_ = other.heroRid_;
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroWithPos Clone() {
      return new HeroWithPos(this);
    }

    /// <summary>Field number for the "hero_rid" field.</summary>
    public const int HeroRidFieldNumber = 1;
    private long heroRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroRid {
      get { return heroRid_; }
      set {
        heroRid_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private int pos_;
    /// <summary>
    /// x*10000+y 以左上角为(0,0) 二维数组坐标系 x,y>0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroWithPos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroWithPos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroRid != other.HeroRid) return false;
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroRid != 0L) hash ^= HeroRid.GetHashCode();
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeroRid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(HeroRid);
      }
      if (Pos != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroRid);
      }
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroWithPos other) {
      if (other == null) {
        return;
      }
      if (other.HeroRid != 0L) {
        HeroRid = other.HeroRid;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HeroRid = input.ReadInt64();
            break;
          }
          case 16: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 创建一支部队
  /// </summary>
  public sealed partial class NewTroopReq : pb::IMessage<NewTroopReq> {
    private static readonly pb::MessageParser<NewTroopReq> _parser = new pb::MessageParser<NewTroopReq>(() => new NewTroopReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewTroopReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewTroopReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewTroopReq(NewTroopReq other) : this() {
      cityId_ = other.cityId_;
      troopNo_ = other.troopNo_;
      heroRid_ = other.heroRid_;
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewTroopReq Clone() {
      return new NewTroopReq(this);
    }

    /// <summary>Field number for the "city_id" field.</summary>
    public const int CityIdFieldNumber = 1;
    private long cityId_;
    /// <summary>
    /// Team所属城池
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "troop_no" field.</summary>
    public const int TroopNoFieldNumber = 2;
    private int troopNo_;
    /// <summary>
    /// Team位置 即阵容编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TroopNo {
      get { return troopNo_; }
      set {
        troopNo_ = value;
      }
    }

    /// <summary>Field number for the "hero_rid" field.</summary>
    public const int HeroRidFieldNumber = 3;
    private long heroRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroRid {
      get { return heroRid_; }
      set {
        heroRid_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 4;
    private int pos_;
    /// <summary>
    /// 英雄在队伍中的位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewTroopReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewTroopReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CityId != other.CityId) return false;
      if (TroopNo != other.TroopNo) return false;
      if (HeroRid != other.HeroRid) return false;
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CityId != 0L) hash ^= CityId.GetHashCode();
      if (TroopNo != 0) hash ^= TroopNo.GetHashCode();
      if (HeroRid != 0L) hash ^= HeroRid.GetHashCode();
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CityId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CityId);
      }
      if (TroopNo != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TroopNo);
      }
      if (HeroRid != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(HeroRid);
      }
      if (Pos != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CityId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CityId);
      }
      if (TroopNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TroopNo);
      }
      if (HeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroRid);
      }
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewTroopReq other) {
      if (other == null) {
        return;
      }
      if (other.CityId != 0L) {
        CityId = other.CityId;
      }
      if (other.TroopNo != 0) {
        TroopNo = other.TroopNo;
      }
      if (other.HeroRid != 0L) {
        HeroRid = other.HeroRid;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CityId = input.ReadInt64();
            break;
          }
          case 16: {
            TroopNo = input.ReadInt32();
            break;
          }
          case 24: {
            HeroRid = input.ReadInt64();
            break;
          }
          case 32: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 将fighter从部队移除
  /// </summary>
  public sealed partial class DelFighterReq : pb::IMessage<DelFighterReq> {
    private static readonly pb::MessageParser<DelFighterReq> _parser = new pb::MessageParser<DelFighterReq>(() => new DelFighterReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelFighterReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelFighterReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelFighterReq(DelFighterReq other) : this() {
      troopId_ = other.troopId_;
      heroRid_ = other.heroRid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelFighterReq Clone() {
      return new DelFighterReq(this);
    }

    /// <summary>Field number for the "troop_id" field.</summary>
    public const int TroopIdFieldNumber = 1;
    private long troopId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TroopId {
      get { return troopId_; }
      set {
        troopId_ = value;
      }
    }

    /// <summary>Field number for the "hero_rid" field.</summary>
    public const int HeroRidFieldNumber = 2;
    private long heroRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroRid {
      get { return heroRid_; }
      set {
        heroRid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelFighterReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelFighterReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TroopId != other.TroopId) return false;
      if (HeroRid != other.HeroRid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TroopId != 0L) hash ^= TroopId.GetHashCode();
      if (HeroRid != 0L) hash ^= HeroRid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TroopId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TroopId);
      }
      if (HeroRid != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HeroRid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TroopId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TroopId);
      }
      if (HeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroRid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelFighterReq other) {
      if (other == null) {
        return;
      }
      if (other.TroopId != 0L) {
        TroopId = other.TroopId;
      }
      if (other.HeroRid != 0L) {
        HeroRid = other.HeroRid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TroopId = input.ReadInt64();
            break;
          }
          case 16: {
            HeroRid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 交换在队伍中的英雄
  ///// 将hero_rid的fighter与troop_id的index位置的fighter交换
  ///// troop_id的index位置的fighter可以不存在
  /// </summary>
  public sealed partial class SwapFighterReq : pb::IMessage<SwapFighterReq> {
    private static readonly pb::MessageParser<SwapFighterReq> _parser = new pb::MessageParser<SwapFighterReq>(() => new SwapFighterReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SwapFighterReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SwapFighterReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SwapFighterReq(SwapFighterReq other) : this() {
      troopId_ = other.troopId_;
      heroRid_ = other.heroRid_;
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SwapFighterReq Clone() {
      return new SwapFighterReq(this);
    }

    /// <summary>Field number for the "troop_id" field.</summary>
    public const int TroopIdFieldNumber = 1;
    private long troopId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TroopId {
      get { return troopId_; }
      set {
        troopId_ = value;
      }
    }

    /// <summary>Field number for the "hero_rid" field.</summary>
    public const int HeroRidFieldNumber = 2;
    private long heroRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroRid {
      get { return heroRid_; }
      set {
        heroRid_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 3;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SwapFighterReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SwapFighterReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TroopId != other.TroopId) return false;
      if (HeroRid != other.HeroRid) return false;
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TroopId != 0L) hash ^= TroopId.GetHashCode();
      if (HeroRid != 0L) hash ^= HeroRid.GetHashCode();
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TroopId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TroopId);
      }
      if (HeroRid != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HeroRid);
      }
      if (Pos != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TroopId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TroopId);
      }
      if (HeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroRid);
      }
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SwapFighterReq other) {
      if (other == null) {
        return;
      }
      if (other.TroopId != 0L) {
        TroopId = other.TroopId;
      }
      if (other.HeroRid != 0L) {
        HeroRid = other.HeroRid;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TroopId = input.ReadInt64();
            break;
          }
          case 16: {
            HeroRid = input.ReadInt64();
            break;
          }
          case 24: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 移动fighter到一个没有队伍的位置
  /// </summary>
  public sealed partial class F2EmptyTroopReq : pb::IMessage<F2EmptyTroopReq> {
    private static readonly pb::MessageParser<F2EmptyTroopReq> _parser = new pb::MessageParser<F2EmptyTroopReq>(() => new F2EmptyTroopReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<F2EmptyTroopReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public F2EmptyTroopReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public F2EmptyTroopReq(F2EmptyTroopReq other) : this() {
      cityId_ = other.cityId_;
      troopNo_ = other.troopNo_;
      heroRid_ = other.heroRid_;
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public F2EmptyTroopReq Clone() {
      return new F2EmptyTroopReq(this);
    }

    /// <summary>Field number for the "city_id" field.</summary>
    public const int CityIdFieldNumber = 1;
    private long cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "troop_no" field.</summary>
    public const int TroopNoFieldNumber = 2;
    private int troopNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TroopNo {
      get { return troopNo_; }
      set {
        troopNo_ = value;
      }
    }

    /// <summary>Field number for the "hero_rid" field.</summary>
    public const int HeroRidFieldNumber = 3;
    private long heroRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroRid {
      get { return heroRid_; }
      set {
        heroRid_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 4;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as F2EmptyTroopReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(F2EmptyTroopReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CityId != other.CityId) return false;
      if (TroopNo != other.TroopNo) return false;
      if (HeroRid != other.HeroRid) return false;
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CityId != 0L) hash ^= CityId.GetHashCode();
      if (TroopNo != 0) hash ^= TroopNo.GetHashCode();
      if (HeroRid != 0L) hash ^= HeroRid.GetHashCode();
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CityId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CityId);
      }
      if (TroopNo != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TroopNo);
      }
      if (HeroRid != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(HeroRid);
      }
      if (Pos != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CityId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CityId);
      }
      if (TroopNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TroopNo);
      }
      if (HeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroRid);
      }
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(F2EmptyTroopReq other) {
      if (other == null) {
        return;
      }
      if (other.CityId != 0L) {
        CityId = other.CityId;
      }
      if (other.TroopNo != 0) {
        TroopNo = other.TroopNo;
      }
      if (other.HeroRid != 0L) {
        HeroRid = other.HeroRid;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CityId = input.ReadInt64();
            break;
          }
          case 16: {
            TroopNo = input.ReadInt32();
            break;
          }
          case 24: {
            HeroRid = input.ReadInt64();
            break;
          }
          case 32: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 新加一个hero到troop, 会删除原来位置的fighter
  /// </summary>
  public sealed partial class Hero2TroopReq : pb::IMessage<Hero2TroopReq> {
    private static readonly pb::MessageParser<Hero2TroopReq> _parser = new pb::MessageParser<Hero2TroopReq>(() => new Hero2TroopReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hero2TroopReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hero2TroopReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hero2TroopReq(Hero2TroopReq other) : this() {
      troopId_ = other.troopId_;
      heroRid_ = other.heroRid_;
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hero2TroopReq Clone() {
      return new Hero2TroopReq(this);
    }

    /// <summary>Field number for the "troop_id" field.</summary>
    public const int TroopIdFieldNumber = 1;
    private long troopId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TroopId {
      get { return troopId_; }
      set {
        troopId_ = value;
      }
    }

    /// <summary>Field number for the "hero_rid" field.</summary>
    public const int HeroRidFieldNumber = 2;
    private long heroRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroRid {
      get { return heroRid_; }
      set {
        heroRid_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 3;
    private int pos_;
    /// <summary>
    ///英雄在战场站位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hero2TroopReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hero2TroopReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TroopId != other.TroopId) return false;
      if (HeroRid != other.HeroRid) return false;
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TroopId != 0L) hash ^= TroopId.GetHashCode();
      if (HeroRid != 0L) hash ^= HeroRid.GetHashCode();
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TroopId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TroopId);
      }
      if (HeroRid != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HeroRid);
      }
      if (Pos != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TroopId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TroopId);
      }
      if (HeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroRid);
      }
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hero2TroopReq other) {
      if (other == null) {
        return;
      }
      if (other.TroopId != 0L) {
        TroopId = other.TroopId;
      }
      if (other.HeroRid != 0L) {
        HeroRid = other.HeroRid;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TroopId = input.ReadInt64();
            break;
          }
          case 16: {
            HeroRid = input.ReadInt64();
            break;
          }
          case 24: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 拉取所有部队详细信息
  /// </summary>
  public sealed partial class TroopListReq : pb::IMessage<TroopListReq> {
    private static readonly pb::MessageParser<TroopListReq> _parser = new pb::MessageParser<TroopListReq>(() => new TroopListReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TroopListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TroopListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TroopListReq(TroopListReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TroopListReq Clone() {
      return new TroopListReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TroopListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TroopListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TroopListReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///获得技能列表
  /// </summary>
  public sealed partial class SkillListReq : pb::IMessage<SkillListReq> {
    private static readonly pb::MessageParser<SkillListReq> _parser = new pb::MessageParser<SkillListReq>(() => new SkillListReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkillListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillListReq(SkillListReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillListReq Clone() {
      return new SkillListReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkillListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkillListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkillListReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///研究技能
  /// </summary>
  public sealed partial class ResearchSkillReq : pb::IMessage<ResearchSkillReq> {
    private static readonly pb::MessageParser<ResearchSkillReq> _parser = new pb::MessageParser<ResearchSkillReq>(() => new ResearchSkillReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResearchSkillReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResearchSkillReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResearchSkillReq(ResearchSkillReq other) : this() {
      heroRids_ = other.heroRids_.Clone();
      skillId_ = other.skillId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResearchSkillReq Clone() {
      return new ResearchSkillReq(this);
    }

    /// <summary>Field number for the "hero_rids" field.</summary>
    public const int HeroRidsFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_heroRids_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> heroRids_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 消耗的英雄
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> HeroRids {
      get { return heroRids_; }
    }

    /// <summary>Field number for the "skill_id" field.</summary>
    public const int SkillIdFieldNumber = 2;
    private int skillId_;
    /// <summary>
    /// 需要研究的技能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillId {
      get { return skillId_; }
      set {
        skillId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResearchSkillReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResearchSkillReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!heroRids_.Equals(other.heroRids_)) return false;
      if (SkillId != other.SkillId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= heroRids_.GetHashCode();
      if (SkillId != 0) hash ^= SkillId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      heroRids_.WriteTo(output, _repeated_heroRids_codec);
      if (SkillId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SkillId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += heroRids_.CalculateSize(_repeated_heroRids_codec);
      if (SkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResearchSkillReq other) {
      if (other == null) {
        return;
      }
      heroRids_.Add(other.heroRids_);
      if (other.SkillId != 0) {
        SkillId = other.SkillId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            heroRids_.AddEntriesFrom(input, _repeated_heroRids_codec);
            break;
          }
          case 16: {
            SkillId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///学习技能
  /// </summary>
  public sealed partial class LearnSkillReq : pb::IMessage<LearnSkillReq> {
    private static readonly pb::MessageParser<LearnSkillReq> _parser = new pb::MessageParser<LearnSkillReq>(() => new LearnSkillReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LearnSkillReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LearnSkillReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LearnSkillReq(LearnSkillReq other) : this() {
      heroRid_ = other.heroRid_;
      skillId_ = other.skillId_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LearnSkillReq Clone() {
      return new LearnSkillReq(this);
    }

    /// <summary>Field number for the "hero_rid" field.</summary>
    public const int HeroRidFieldNumber = 1;
    private long heroRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroRid {
      get { return heroRid_; }
      set {
        heroRid_ = value;
      }
    }

    /// <summary>Field number for the "skill_id" field.</summary>
    public const int SkillIdFieldNumber = 2;
    private int skillId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillId {
      get { return skillId_; }
      set {
        skillId_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private int index_;
    /// <summary>
    /// 英雄技能位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LearnSkillReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LearnSkillReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroRid != other.HeroRid) return false;
      if (SkillId != other.SkillId) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroRid != 0L) hash ^= HeroRid.GetHashCode();
      if (SkillId != 0) hash ^= SkillId.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeroRid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(HeroRid);
      }
      if (SkillId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SkillId);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroRid);
      }
      if (SkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LearnSkillReq other) {
      if (other == null) {
        return;
      }
      if (other.HeroRid != 0L) {
        HeroRid = other.HeroRid;
      }
      if (other.SkillId != 0) {
        SkillId = other.SkillId;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HeroRid = input.ReadInt64();
            break;
          }
          case 16: {
            SkillId = input.ReadInt32();
            break;
          }
          case 24: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///遗忘技能
  /// </summary>
  public sealed partial class ForgetSkillReq : pb::IMessage<ForgetSkillReq> {
    private static readonly pb::MessageParser<ForgetSkillReq> _parser = new pb::MessageParser<ForgetSkillReq>(() => new ForgetSkillReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ForgetSkillReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForgetSkillReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForgetSkillReq(ForgetSkillReq other) : this() {
      heroRid_ = other.heroRid_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForgetSkillReq Clone() {
      return new ForgetSkillReq(this);
    }

    /// <summary>Field number for the "hero_rid" field.</summary>
    public const int HeroRidFieldNumber = 1;
    private long heroRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroRid {
      get { return heroRid_; }
      set {
        heroRid_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ForgetSkillReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ForgetSkillReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroRid != other.HeroRid) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroRid != 0L) hash ^= HeroRid.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeroRid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(HeroRid);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroRid);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ForgetSkillReq other) {
      if (other == null) {
        return;
      }
      if (other.HeroRid != 0L) {
        HeroRid = other.HeroRid;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HeroRid = input.ReadInt64();
            break;
          }
          case 16: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResourceReq : pb::IMessage<ResourceReq> {
    private static readonly pb::MessageParser<ResourceReq> _parser = new pb::MessageParser<ResourceReq>(() => new ResourceReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResourceReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceReq(ResourceReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceReq Clone() {
      return new ResourceReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResourceReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResourceReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResourceReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 请求玩家土地信息, 占领土地, 收藏的土地
  /// </summary>
  public sealed partial class PlayerLandsReq : pb::IMessage<PlayerLandsReq> {
    private static readonly pb::MessageParser<PlayerLandsReq> _parser = new pb::MessageParser<PlayerLandsReq>(() => new PlayerLandsReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerLandsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerLandsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerLandsReq(PlayerLandsReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerLandsReq Clone() {
      return new PlayerLandsReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerLandsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerLandsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerLandsReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class DefenderInfoReq : pb::IMessage<DefenderInfoReq> {
    private static readonly pb::MessageParser<DefenderInfoReq> _parser = new pb::MessageParser<DefenderInfoReq>(() => new DefenderInfoReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DefenderInfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefenderInfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefenderInfoReq(DefenderInfoReq other) : this() {
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefenderInfoReq Clone() {
      return new DefenderInfoReq(this);
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 1;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DefenderInfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DefenderInfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DefenderInfoReq other) {
      if (other == null) {
        return;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 战报
  /// </summary>
  public sealed partial class BReportsReq : pb::IMessage<BReportsReq> {
    private static readonly pb::MessageParser<BReportsReq> _parser = new pb::MessageParser<BReportsReq>(() => new BReportsReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BReportsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BReportsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BReportsReq(BReportsReq other) : this() {
      reportIds_ = other.reportIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BReportsReq Clone() {
      return new BReportsReq(this);
    }

    /// <summary>Field number for the "report_ids" field.</summary>
    public const int ReportIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_reportIds_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> reportIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///上限50个, 超过截取前50个
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> ReportIds {
      get { return reportIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BReportsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BReportsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reportIds_.Equals(other.reportIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reportIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      reportIds_.WriteTo(output, _repeated_reportIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reportIds_.CalculateSize(_repeated_reportIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BReportsReq other) {
      if (other == null) {
        return;
      }
      reportIds_.Add(other.reportIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            reportIds_.AddEntriesFrom(input, _repeated_reportIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BReportBasicReq : pb::IMessage<BReportBasicReq> {
    private static readonly pb::MessageParser<BReportBasicReq> _parser = new pb::MessageParser<BReportBasicReq>(() => new BReportBasicReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BReportBasicReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BReportBasicReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BReportBasicReq(BReportBasicReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BReportBasicReq Clone() {
      return new BReportBasicReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BReportBasicReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BReportBasicReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BReportBasicReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ReadBReportReq : pb::IMessage<ReadBReportReq> {
    private static readonly pb::MessageParser<ReadBReportReq> _parser = new pb::MessageParser<ReadBReportReq>(() => new ReadBReportReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadBReportReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadBReportReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadBReportReq(ReadBReportReq other) : this() {
      reportId_ = other.reportId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadBReportReq Clone() {
      return new ReadBReportReq(this);
    }

    /// <summary>Field number for the "report_id" field.</summary>
    public const int ReportIdFieldNumber = 1;
    private long reportId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReportId {
      get { return reportId_; }
      set {
        reportId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadBReportReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadBReportReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReportId != other.ReportId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReportId != 0L) hash ^= ReportId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReportId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ReportId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReportId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReportId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadBReportReq other) {
      if (other == null) {
        return;
      }
      if (other.ReportId != 0L) {
        ReportId = other.ReportId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReportId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BReportDetailReq : pb::IMessage<BReportDetailReq> {
    private static readonly pb::MessageParser<BReportDetailReq> _parser = new pb::MessageParser<BReportDetailReq>(() => new BReportDetailReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BReportDetailReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BReportDetailReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BReportDetailReq(BReportDetailReq other) : this() {
      reportId_ = other.reportId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BReportDetailReq Clone() {
      return new BReportDetailReq(this);
    }

    /// <summary>Field number for the "report_id" field.</summary>
    public const int ReportIdFieldNumber = 1;
    private long reportId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReportId {
      get { return reportId_; }
      set {
        reportId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BReportDetailReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BReportDetailReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReportId != other.ReportId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReportId != 0L) hash ^= ReportId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReportId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ReportId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReportId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReportId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BReportDetailReq other) {
      if (other == null) {
        return;
      }
      if (other.ReportId != 0L) {
        ReportId = other.ReportId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReportId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 英雄征兵
  /// </summary>
  public sealed partial class FighterWithConscript : pb::IMessage<FighterWithConscript> {
    private static readonly pb::MessageParser<FighterWithConscript> _parser = new pb::MessageParser<FighterWithConscript>(() => new FighterWithConscript());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FighterWithConscript> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FighterWithConscript() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FighterWithConscript(FighterWithConscript other) : this() {
      fighterRid_ = other.fighterRid_;
      normal_ = other.normal_;
      redif_ = other.redif_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FighterWithConscript Clone() {
      return new FighterWithConscript(this);
    }

    /// <summary>Field number for the "fighter_rid" field.</summary>
    public const int FighterRidFieldNumber = 1;
    private long fighterRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FighterRid {
      get { return fighterRid_; }
      set {
        fighterRid_ = value;
      }
    }

    /// <summary>Field number for the "normal" field.</summary>
    public const int NormalFieldNumber = 2;
    private int normal_;
    /// <summary>
    /// 普通征兵数量, 会消耗时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Normal {
      get { return normal_; }
      set {
        normal_ = value;
      }
    }

    /// <summary>Field number for the "redif" field.</summary>
    public const int RedifFieldNumber = 3;
    private int redif_;
    /// <summary>
    /// 预备兵征兵数量, 会消耗预备兵
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Redif {
      get { return redif_; }
      set {
        redif_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FighterWithConscript);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FighterWithConscript other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FighterRid != other.FighterRid) return false;
      if (Normal != other.Normal) return false;
      if (Redif != other.Redif) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FighterRid != 0L) hash ^= FighterRid.GetHashCode();
      if (Normal != 0) hash ^= Normal.GetHashCode();
      if (Redif != 0) hash ^= Redif.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FighterRid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FighterRid);
      }
      if (Normal != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Normal);
      }
      if (Redif != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Redif);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FighterRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FighterRid);
      }
      if (Normal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Normal);
      }
      if (Redif != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Redif);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FighterWithConscript other) {
      if (other == null) {
        return;
      }
      if (other.FighterRid != 0L) {
        FighterRid = other.FighterRid;
      }
      if (other.Normal != 0) {
        Normal = other.Normal;
      }
      if (other.Redif != 0) {
        Redif = other.Redif;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FighterRid = input.ReadInt64();
            break;
          }
          case 16: {
            Normal = input.ReadInt32();
            break;
          }
          case 24: {
            Redif = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConscriptReq : pb::IMessage<ConscriptReq> {
    private static readonly pb::MessageParser<ConscriptReq> _parser = new pb::MessageParser<ConscriptReq>(() => new ConscriptReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConscriptReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConscriptReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConscriptReq(ConscriptReq other) : this() {
      troopId_ = other.troopId_;
      fighters_ = other.fighters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConscriptReq Clone() {
      return new ConscriptReq(this);
    }

    /// <summary>Field number for the "troop_id" field.</summary>
    public const int TroopIdFieldNumber = 1;
    private long troopId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TroopId {
      get { return troopId_; }
      set {
        troopId_ = value;
      }
    }

    /// <summary>Field number for the "fighters" field.</summary>
    public const int FightersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Cspb.FighterWithConscript> _repeated_fighters_codec
        = pb::FieldCodec.ForMessage(18, global::Cspb.FighterWithConscript.Parser);
    private readonly pbc::RepeatedField<global::Cspb.FighterWithConscript> fighters_ = new pbc::RepeatedField<global::Cspb.FighterWithConscript>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Cspb.FighterWithConscript> Fighters {
      get { return fighters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConscriptReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConscriptReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TroopId != other.TroopId) return false;
      if(!fighters_.Equals(other.fighters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TroopId != 0L) hash ^= TroopId.GetHashCode();
      hash ^= fighters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TroopId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TroopId);
      }
      fighters_.WriteTo(output, _repeated_fighters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TroopId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TroopId);
      }
      size += fighters_.CalculateSize(_repeated_fighters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConscriptReq other) {
      if (other == null) {
        return;
      }
      if (other.TroopId != 0L) {
        TroopId = other.TroopId;
      }
      fighters_.Add(other.fighters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TroopId = input.ReadInt64();
            break;
          }
          case 18: {
            fighters_.AddEntriesFrom(input, _repeated_fighters_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UndoConscriptReq : pb::IMessage<UndoConscriptReq> {
    private static readonly pb::MessageParser<UndoConscriptReq> _parser = new pb::MessageParser<UndoConscriptReq>(() => new UndoConscriptReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UndoConscriptReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UndoConscriptReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UndoConscriptReq(UndoConscriptReq other) : this() {
      troopId_ = other.troopId_;
      fighters_ = other.fighters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UndoConscriptReq Clone() {
      return new UndoConscriptReq(this);
    }

    /// <summary>Field number for the "troop_id" field.</summary>
    public const int TroopIdFieldNumber = 1;
    private long troopId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TroopId {
      get { return troopId_; }
      set {
        troopId_ = value;
      }
    }

    /// <summary>Field number for the "fighters" field.</summary>
    public const int FightersFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_fighters_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> fighters_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Fighters {
      get { return fighters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UndoConscriptReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UndoConscriptReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TroopId != other.TroopId) return false;
      if(!fighters_.Equals(other.fighters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TroopId != 0L) hash ^= TroopId.GetHashCode();
      hash ^= fighters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TroopId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TroopId);
      }
      fighters_.WriteTo(output, _repeated_fighters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TroopId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TroopId);
      }
      size += fighters_.CalculateSize(_repeated_fighters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UndoConscriptReq other) {
      if (other == null) {
        return;
      }
      if (other.TroopId != 0L) {
        TroopId = other.TroopId;
      }
      fighters_.Add(other.fighters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TroopId = input.ReadInt64();
            break;
          }
          case 18:
          case 16: {
            fighters_.AddEntriesFrom(input, _repeated_fighters_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FighterWithCnt : pb::IMessage<FighterWithCnt> {
    private static readonly pb::MessageParser<FighterWithCnt> _parser = new pb::MessageParser<FighterWithCnt>(() => new FighterWithCnt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FighterWithCnt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FighterWithCnt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FighterWithCnt(FighterWithCnt other) : this() {
      fighterRid_ = other.fighterRid_;
      cnt_ = other.cnt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FighterWithCnt Clone() {
      return new FighterWithCnt(this);
    }

    /// <summary>Field number for the "fighter_rid" field.</summary>
    public const int FighterRidFieldNumber = 1;
    private long fighterRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FighterRid {
      get { return fighterRid_; }
      set {
        fighterRid_ = value;
      }
    }

    /// <summary>Field number for the "cnt" field.</summary>
    public const int CntFieldNumber = 2;
    private int cnt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cnt {
      get { return cnt_; }
      set {
        cnt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FighterWithCnt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FighterWithCnt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FighterRid != other.FighterRid) return false;
      if (Cnt != other.Cnt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FighterRid != 0L) hash ^= FighterRid.GetHashCode();
      if (Cnt != 0) hash ^= Cnt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FighterRid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FighterRid);
      }
      if (Cnt != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cnt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FighterRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FighterRid);
      }
      if (Cnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cnt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FighterWithCnt other) {
      if (other == null) {
        return;
      }
      if (other.FighterRid != 0L) {
        FighterRid = other.FighterRid;
      }
      if (other.Cnt != 0) {
        Cnt = other.Cnt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FighterRid = input.ReadInt64();
            break;
          }
          case 16: {
            Cnt = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 预备兵加速征兵
  /// </summary>
  public sealed partial class RedifSpeedUpConscriptReq : pb::IMessage<RedifSpeedUpConscriptReq> {
    private static readonly pb::MessageParser<RedifSpeedUpConscriptReq> _parser = new pb::MessageParser<RedifSpeedUpConscriptReq>(() => new RedifSpeedUpConscriptReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedifSpeedUpConscriptReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedifSpeedUpConscriptReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedifSpeedUpConscriptReq(RedifSpeedUpConscriptReq other) : this() {
      troopId_ = other.troopId_;
      fighters_ = other.fighters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedifSpeedUpConscriptReq Clone() {
      return new RedifSpeedUpConscriptReq(this);
    }

    /// <summary>Field number for the "troop_id" field.</summary>
    public const int TroopIdFieldNumber = 1;
    private long troopId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TroopId {
      get { return troopId_; }
      set {
        troopId_ = value;
      }
    }

    /// <summary>Field number for the "fighters" field.</summary>
    public const int FightersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Cspb.FighterWithCnt> _repeated_fighters_codec
        = pb::FieldCodec.ForMessage(18, global::Cspb.FighterWithCnt.Parser);
    private readonly pbc::RepeatedField<global::Cspb.FighterWithCnt> fighters_ = new pbc::RepeatedField<global::Cspb.FighterWithCnt>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Cspb.FighterWithCnt> Fighters {
      get { return fighters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedifSpeedUpConscriptReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedifSpeedUpConscriptReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TroopId != other.TroopId) return false;
      if(!fighters_.Equals(other.fighters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TroopId != 0L) hash ^= TroopId.GetHashCode();
      hash ^= fighters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TroopId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TroopId);
      }
      fighters_.WriteTo(output, _repeated_fighters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TroopId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TroopId);
      }
      size += fighters_.CalculateSize(_repeated_fighters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedifSpeedUpConscriptReq other) {
      if (other == null) {
        return;
      }
      if (other.TroopId != 0L) {
        TroopId = other.TroopId;
      }
      fighters_.Add(other.fighters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TroopId = input.ReadInt64();
            break;
          }
          case 18: {
            fighters_.AddEntriesFrom(input, _repeated_fighters_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 城建升级
  /// </summary>
  public sealed partial class UpgradeBuildReq : pb::IMessage<UpgradeBuildReq> {
    private static readonly pb::MessageParser<UpgradeBuildReq> _parser = new pb::MessageParser<UpgradeBuildReq>(() => new UpgradeBuildReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpgradeBuildReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeBuildReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeBuildReq(UpgradeBuildReq other) : this() {
      cityId_ = other.cityId_;
      buildId_ = other.buildId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeBuildReq Clone() {
      return new UpgradeBuildReq(this);
    }

    /// <summary>Field number for the "city_id" field.</summary>
    public const int CityIdFieldNumber = 1;
    private long cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "build_id" field.</summary>
    public const int BuildIdFieldNumber = 2;
    private int buildId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildId {
      get { return buildId_; }
      set {
        buildId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpgradeBuildReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpgradeBuildReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CityId != other.CityId) return false;
      if (BuildId != other.BuildId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CityId != 0L) hash ^= CityId.GetHashCode();
      if (BuildId != 0) hash ^= BuildId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CityId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CityId);
      }
      if (BuildId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuildId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CityId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CityId);
      }
      if (BuildId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpgradeBuildReq other) {
      if (other == null) {
        return;
      }
      if (other.CityId != 0L) {
        CityId = other.CityId;
      }
      if (other.BuildId != 0) {
        BuildId = other.BuildId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CityId = input.ReadInt64();
            break;
          }
          case 16: {
            BuildId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 城建立刻升级
  /// </summary>
  public sealed partial class UpgradeBuildAtOnceReq : pb::IMessage<UpgradeBuildAtOnceReq> {
    private static readonly pb::MessageParser<UpgradeBuildAtOnceReq> _parser = new pb::MessageParser<UpgradeBuildAtOnceReq>(() => new UpgradeBuildAtOnceReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpgradeBuildAtOnceReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeBuildAtOnceReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeBuildAtOnceReq(UpgradeBuildAtOnceReq other) : this() {
      cityId_ = other.cityId_;
      buildId_ = other.buildId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeBuildAtOnceReq Clone() {
      return new UpgradeBuildAtOnceReq(this);
    }

    /// <summary>Field number for the "city_id" field.</summary>
    public const int CityIdFieldNumber = 1;
    private long cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "build_id" field.</summary>
    public const int BuildIdFieldNumber = 2;
    private int buildId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildId {
      get { return buildId_; }
      set {
        buildId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpgradeBuildAtOnceReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpgradeBuildAtOnceReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CityId != other.CityId) return false;
      if (BuildId != other.BuildId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CityId != 0L) hash ^= CityId.GetHashCode();
      if (BuildId != 0) hash ^= BuildId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CityId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CityId);
      }
      if (BuildId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuildId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CityId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CityId);
      }
      if (BuildId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpgradeBuildAtOnceReq other) {
      if (other == null) {
        return;
      }
      if (other.CityId != 0L) {
        CityId = other.CityId;
      }
      if (other.BuildId != 0) {
        BuildId = other.BuildId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CityId = input.ReadInt64();
            break;
          }
          case 16: {
            BuildId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 取消城建升级
  /// </summary>
  public sealed partial class CancelUpgradeBuildReq : pb::IMessage<CancelUpgradeBuildReq> {
    private static readonly pb::MessageParser<CancelUpgradeBuildReq> _parser = new pb::MessageParser<CancelUpgradeBuildReq>(() => new CancelUpgradeBuildReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelUpgradeBuildReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelUpgradeBuildReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelUpgradeBuildReq(CancelUpgradeBuildReq other) : this() {
      cityId_ = other.cityId_;
      buildId_ = other.buildId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelUpgradeBuildReq Clone() {
      return new CancelUpgradeBuildReq(this);
    }

    /// <summary>Field number for the "city_id" field.</summary>
    public const int CityIdFieldNumber = 1;
    private long cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "build_id" field.</summary>
    public const int BuildIdFieldNumber = 2;
    private int buildId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildId {
      get { return buildId_; }
      set {
        buildId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelUpgradeBuildReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelUpgradeBuildReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CityId != other.CityId) return false;
      if (BuildId != other.BuildId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CityId != 0L) hash ^= CityId.GetHashCode();
      if (BuildId != 0) hash ^= BuildId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CityId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CityId);
      }
      if (BuildId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuildId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CityId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CityId);
      }
      if (BuildId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelUpgradeBuildReq other) {
      if (other == null) {
        return;
      }
      if (other.CityId != 0L) {
        CityId = other.CityId;
      }
      if (other.BuildId != 0) {
        BuildId = other.BuildId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CityId = input.ReadInt64();
            break;
          }
          case 16: {
            BuildId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 心跳包
  /// </summary>
  public sealed partial class HeartBeatReq : pb::IMessage<HeartBeatReq> {
    private static readonly pb::MessageParser<HeartBeatReq> _parser = new pb::MessageParser<HeartBeatReq>(() => new HeartBeatReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeartBeatReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartBeatReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartBeatReq(HeartBeatReq other) : this() {
      clientTs_ = other.clientTs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartBeatReq Clone() {
      return new HeartBeatReq(this);
    }

    /// <summary>Field number for the "client_ts" field.</summary>
    public const int ClientTsFieldNumber = 1;
    private long clientTs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ClientTs {
      get { return clientTs_; }
      set {
        clientTs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeartBeatReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeartBeatReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientTs != other.ClientTs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientTs != 0L) hash ^= ClientTs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientTs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ClientTs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientTs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientTs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeartBeatReq other) {
      if (other == null) {
        return;
      }
      if (other.ClientTs != 0L) {
        ClientTs = other.ClientTs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientTs = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 更新新手引导步骤
  /// </summary>
  public sealed partial class UpdateNbGuideStepReq : pb::IMessage<UpdateNbGuideStepReq> {
    private static readonly pb::MessageParser<UpdateNbGuideStepReq> _parser = new pb::MessageParser<UpdateNbGuideStepReq>(() => new UpdateNbGuideStepReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateNbGuideStepReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNbGuideStepReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNbGuideStepReq(UpdateNbGuideStepReq other) : this() {
      step_ = other.step_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNbGuideStepReq Clone() {
      return new UpdateNbGuideStepReq(this);
    }

    /// <summary>Field number for the "step" field.</summary>
    public const int StepFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_step_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> step_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Step {
      get { return step_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateNbGuideStepReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateNbGuideStepReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!step_.Equals(other.step_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= step_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      step_.WriteTo(output, _repeated_step_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += step_.CalculateSize(_repeated_step_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateNbGuideStepReq other) {
      if (other == null) {
        return;
      }
      step_.Add(other.step_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            step_.AddEntriesFrom(input, _repeated_step_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 结束新手引导
  /// </summary>
  public sealed partial class FinishNbGuideReq : pb::IMessage<FinishNbGuideReq> {
    private static readonly pb::MessageParser<FinishNbGuideReq> _parser = new pb::MessageParser<FinishNbGuideReq>(() => new FinishNbGuideReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FinishNbGuideReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinishNbGuideReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinishNbGuideReq(FinishNbGuideReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinishNbGuideReq Clone() {
      return new FinishNbGuideReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FinishNbGuideReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FinishNbGuideReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FinishNbGuideReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 更新弱引导步骤
  /// </summary>
  public sealed partial class UpdateUnfroceGuideReq : pb::IMessage<UpdateUnfroceGuideReq> {
    private static readonly pb::MessageParser<UpdateUnfroceGuideReq> _parser = new pb::MessageParser<UpdateUnfroceGuideReq>(() => new UpdateUnfroceGuideReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateUnfroceGuideReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUnfroceGuideReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUnfroceGuideReq(UpdateUnfroceGuideReq other) : this() {
      flags_ = other.flags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUnfroceGuideReq Clone() {
      return new UpdateUnfroceGuideReq(this);
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 1;
    private long flags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateUnfroceGuideReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateUnfroceGuideReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Flags != other.Flags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Flags != 0L) hash ^= Flags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Flags != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Flags != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Flags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateUnfroceGuideReq other) {
      if (other == null) {
        return;
      }
      if (other.Flags != 0L) {
        Flags = other.Flags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Flags = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gm
  /// </summary>
  public sealed partial class GmReq : pb::IMessage<GmReq> {
    private static readonly pb::MessageParser<GmReq> _parser = new pb::MessageParser<GmReq>(() => new GmReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GmReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GmReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GmReq(GmReq other) : this() {
      args_ = other.args_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GmReq Clone() {
      return new GmReq(this);
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_args_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> args_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Args {
      get { return args_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GmReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GmReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!args_.Equals(other.args_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= args_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      args_.WriteTo(output, _repeated_args_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += args_.CalculateSize(_repeated_args_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GmReq other) {
      if (other == null) {
        return;
      }
      args_.Add(other.args_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 收藏战报，上限30
  /// </summary>
  public sealed partial class CollectBReportReq : pb::IMessage<CollectBReportReq> {
    private static readonly pb::MessageParser<CollectBReportReq> _parser = new pb::MessageParser<CollectBReportReq>(() => new CollectBReportReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CollectBReportReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectBReportReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectBReportReq(CollectBReportReq other) : this() {
      targetPlayerId_ = other.targetPlayerId_;
      breportId_ = other.breportId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectBReportReq Clone() {
      return new CollectBReportReq(this);
    }

    /// <summary>Field number for the "target_player_id" field.</summary>
    public const int TargetPlayerIdFieldNumber = 1;
    private long targetPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TargetPlayerId {
      get { return targetPlayerId_; }
      set {
        targetPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "breport_id" field.</summary>
    public const int BreportIdFieldNumber = 2;
    private long breportId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BreportId {
      get { return breportId_; }
      set {
        breportId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CollectBReportReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CollectBReportReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetPlayerId != other.TargetPlayerId) return false;
      if (BreportId != other.BreportId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetPlayerId != 0L) hash ^= TargetPlayerId.GetHashCode();
      if (BreportId != 0L) hash ^= BreportId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TargetPlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TargetPlayerId);
      }
      if (BreportId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BreportId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetPlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetPlayerId);
      }
      if (BreportId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BreportId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CollectBReportReq other) {
      if (other == null) {
        return;
      }
      if (other.TargetPlayerId != 0L) {
        TargetPlayerId = other.TargetPlayerId;
      }
      if (other.BreportId != 0L) {
        BreportId = other.BreportId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetPlayerId = input.ReadInt64();
            break;
          }
          case 16: {
            BreportId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UndoCollectBReportReq : pb::IMessage<UndoCollectBReportReq> {
    private static readonly pb::MessageParser<UndoCollectBReportReq> _parser = new pb::MessageParser<UndoCollectBReportReq>(() => new UndoCollectBReportReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UndoCollectBReportReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UndoCollectBReportReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UndoCollectBReportReq(UndoCollectBReportReq other) : this() {
      breportId_ = other.breportId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UndoCollectBReportReq Clone() {
      return new UndoCollectBReportReq(this);
    }

    /// <summary>Field number for the "breport_id" field.</summary>
    public const int BreportIdFieldNumber = 1;
    private long breportId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BreportId {
      get { return breportId_; }
      set {
        breportId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UndoCollectBReportReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UndoCollectBReportReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BreportId != other.BreportId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BreportId != 0L) hash ^= BreportId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BreportId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BreportId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BreportId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BreportId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UndoCollectBReportReq other) {
      if (other == null) {
        return;
      }
      if (other.BreportId != 0L) {
        BreportId = other.BreportId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BreportId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 部队撤退
  /// </summary>
  public sealed partial class ReturnTroopReq : pb::IMessage<ReturnTroopReq> {
    private static readonly pb::MessageParser<ReturnTroopReq> _parser = new pb::MessageParser<ReturnTroopReq>(() => new ReturnTroopReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReturnTroopReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReturnTroopReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReturnTroopReq(ReturnTroopReq other) : this() {
      troopId_ = other.troopId_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReturnTroopReq Clone() {
      return new ReturnTroopReq(this);
    }

    /// <summary>Field number for the "troop_id" field.</summary>
    public const int TroopIdFieldNumber = 1;
    private long troopId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TroopId {
      get { return troopId_; }
      set {
        troopId_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Cspb.TROOP_STATE state_ = 0;
    /// <summary>
    /// 避免网络延迟撤回错误的状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cspb.TROOP_STATE State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReturnTroopReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReturnTroopReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TroopId != other.TroopId) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TroopId != 0L) hash ^= TroopId.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TroopId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TroopId);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TroopId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TroopId);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReturnTroopReq other) {
      if (other == null) {
        return;
      }
      if (other.TroopId != 0L) {
        TroopId = other.TroopId;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TroopId = input.ReadInt64();
            break;
          }
          case 16: {
            state_ = (global::Cspb.TROOP_STATE) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///英雄升阶
  /// </summary>
  public sealed partial class HeroPromoteReq : pb::IMessage<HeroPromoteReq> {
    private static readonly pb::MessageParser<HeroPromoteReq> _parser = new pb::MessageParser<HeroPromoteReq>(() => new HeroPromoteReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroPromoteReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroPromoteReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroPromoteReq(HeroPromoteReq other) : this() {
      promoteHeroRid_ = other.promoteHeroRid_;
      consumeHeroRids_ = other.consumeHeroRids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroPromoteReq Clone() {
      return new HeroPromoteReq(this);
    }

    /// <summary>Field number for the "promote_hero_rid" field.</summary>
    public const int PromoteHeroRidFieldNumber = 1;
    private long promoteHeroRid_;
    /// <summary>
    /// 进阶的英雄
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PromoteHeroRid {
      get { return promoteHeroRid_; }
      set {
        promoteHeroRid_ = value;
      }
    }

    /// <summary>Field number for the "consume_hero_rids" field.</summary>
    public const int ConsumeHeroRidsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_consumeHeroRids_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> consumeHeroRids_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 消耗的英雄
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> ConsumeHeroRids {
      get { return consumeHeroRids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroPromoteReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroPromoteReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PromoteHeroRid != other.PromoteHeroRid) return false;
      if(!consumeHeroRids_.Equals(other.consumeHeroRids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PromoteHeroRid != 0L) hash ^= PromoteHeroRid.GetHashCode();
      hash ^= consumeHeroRids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PromoteHeroRid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PromoteHeroRid);
      }
      consumeHeroRids_.WriteTo(output, _repeated_consumeHeroRids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PromoteHeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PromoteHeroRid);
      }
      size += consumeHeroRids_.CalculateSize(_repeated_consumeHeroRids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroPromoteReq other) {
      if (other == null) {
        return;
      }
      if (other.PromoteHeroRid != 0L) {
        PromoteHeroRid = other.PromoteHeroRid;
      }
      consumeHeroRids_.Add(other.consumeHeroRids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PromoteHeroRid = input.ReadInt64();
            break;
          }
          case 18:
          case 16: {
            consumeHeroRids_.AddEntriesFrom(input, _repeated_consumeHeroRids_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///英雄觉醒
  /// </summary>
  public sealed partial class HeroAwakeReq : pb::IMessage<HeroAwakeReq> {
    private static readonly pb::MessageParser<HeroAwakeReq> _parser = new pb::MessageParser<HeroAwakeReq>(() => new HeroAwakeReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroAwakeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroAwakeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroAwakeReq(HeroAwakeReq other) : this() {
      awakeHeroRid_ = other.awakeHeroRid_;
      consumeHeroRids_ = other.consumeHeroRids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroAwakeReq Clone() {
      return new HeroAwakeReq(this);
    }

    /// <summary>Field number for the "awake_hero_rid" field.</summary>
    public const int AwakeHeroRidFieldNumber = 1;
    private long awakeHeroRid_;
    /// <summary>
    /// 觉醒的英雄
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AwakeHeroRid {
      get { return awakeHeroRid_; }
      set {
        awakeHeroRid_ = value;
      }
    }

    /// <summary>Field number for the "consume_hero_rids" field.</summary>
    public const int ConsumeHeroRidsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_consumeHeroRids_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> consumeHeroRids_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 消耗的英雄
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> ConsumeHeroRids {
      get { return consumeHeroRids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroAwakeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroAwakeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AwakeHeroRid != other.AwakeHeroRid) return false;
      if(!consumeHeroRids_.Equals(other.consumeHeroRids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AwakeHeroRid != 0L) hash ^= AwakeHeroRid.GetHashCode();
      hash ^= consumeHeroRids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AwakeHeroRid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AwakeHeroRid);
      }
      consumeHeroRids_.WriteTo(output, _repeated_consumeHeroRids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AwakeHeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AwakeHeroRid);
      }
      size += consumeHeroRids_.CalculateSize(_repeated_consumeHeroRids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroAwakeReq other) {
      if (other == null) {
        return;
      }
      if (other.AwakeHeroRid != 0L) {
        AwakeHeroRid = other.AwakeHeroRid;
      }
      consumeHeroRids_.Add(other.consumeHeroRids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AwakeHeroRid = input.ReadInt64();
            break;
          }
          case 18:
          case 16: {
            consumeHeroRids_.AddEntriesFrom(input, _repeated_consumeHeroRids_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 英雄加点
  /// </summary>
  public sealed partial class AllotAsgnReq : pb::IMessage<AllotAsgnReq> {
    private static readonly pb::MessageParser<AllotAsgnReq> _parser = new pb::MessageParser<AllotAsgnReq>(() => new AllotAsgnReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllotAsgnReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllotAsgnReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllotAsgnReq(AllotAsgnReq other) : this() {
      heroRid_ = other.heroRid_;
      atk_ = other.atk_;
      pdef_ = other.pdef_;
      inte_ = other.inte_;
      speed_ = other.speed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllotAsgnReq Clone() {
      return new AllotAsgnReq(this);
    }

    /// <summary>Field number for the "hero_rid" field.</summary>
    public const int HeroRidFieldNumber = 1;
    private long heroRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroRid {
      get { return heroRid_; }
      set {
        heroRid_ = value;
      }
    }

    /// <summary>Field number for the "atk" field.</summary>
    public const int AtkFieldNumber = 2;
    private int atk_;
    /// <summary>
    /// 分配在下列属性的点数（未分配为0）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Atk {
      get { return atk_; }
      set {
        atk_ = value;
      }
    }

    /// <summary>Field number for the "pdef" field.</summary>
    public const int PdefFieldNumber = 3;
    private int pdef_;
    /// <summary>
    /// 物理防御
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pdef {
      get { return pdef_; }
      set {
        pdef_ = value;
      }
    }

    /// <summary>Field number for the "inte" field.</summary>
    public const int InteFieldNumber = 4;
    private int inte_;
    /// <summary>
    /// 法术防御
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Inte {
      get { return inte_; }
      set {
        inte_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 5;
    private int speed_;
    /// <summary>
    /// 速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllotAsgnReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllotAsgnReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroRid != other.HeroRid) return false;
      if (Atk != other.Atk) return false;
      if (Pdef != other.Pdef) return false;
      if (Inte != other.Inte) return false;
      if (Speed != other.Speed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroRid != 0L) hash ^= HeroRid.GetHashCode();
      if (Atk != 0) hash ^= Atk.GetHashCode();
      if (Pdef != 0) hash ^= Pdef.GetHashCode();
      if (Inte != 0) hash ^= Inte.GetHashCode();
      if (Speed != 0) hash ^= Speed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeroRid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(HeroRid);
      }
      if (Atk != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Atk);
      }
      if (Pdef != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Pdef);
      }
      if (Inte != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Inte);
      }
      if (Speed != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Speed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroRid);
      }
      if (Atk != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Atk);
      }
      if (Pdef != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pdef);
      }
      if (Inte != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Inte);
      }
      if (Speed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Speed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllotAsgnReq other) {
      if (other == null) {
        return;
      }
      if (other.HeroRid != 0L) {
        HeroRid = other.HeroRid;
      }
      if (other.Atk != 0) {
        Atk = other.Atk;
      }
      if (other.Pdef != 0) {
        Pdef = other.Pdef;
      }
      if (other.Inte != 0) {
        Inte = other.Inte;
      }
      if (other.Speed != 0) {
        Speed = other.Speed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HeroRid = input.ReadInt64();
            break;
          }
          case 16: {
            Atk = input.ReadInt32();
            break;
          }
          case 24: {
            Pdef = input.ReadInt32();
            break;
          }
          case 32: {
            Inte = input.ReadInt32();
            break;
          }
          case 40: {
            Speed = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 重置英雄加点
  /// </summary>
  public sealed partial class ResetAsgnReq : pb::IMessage<ResetAsgnReq> {
    private static readonly pb::MessageParser<ResetAsgnReq> _parser = new pb::MessageParser<ResetAsgnReq>(() => new ResetAsgnReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResetAsgnReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetAsgnReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetAsgnReq(ResetAsgnReq other) : this() {
      heroRid_ = other.heroRid_;
      isFree_ = other.isFree_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetAsgnReq Clone() {
      return new ResetAsgnReq(this);
    }

    /// <summary>Field number for the "hero_rid" field.</summary>
    public const int HeroRidFieldNumber = 1;
    private long heroRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroRid {
      get { return heroRid_; }
      set {
        heroRid_ = value;
      }
    }

    /// <summary>Field number for the "is_free" field.</summary>
    public const int IsFreeFieldNumber = 2;
    private bool isFree_;
    /// <summary>
    /// 客户端判断是否是免费, 用于与服务器验证
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFree {
      get { return isFree_; }
      set {
        isFree_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResetAsgnReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResetAsgnReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroRid != other.HeroRid) return false;
      if (IsFree != other.IsFree) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroRid != 0L) hash ^= HeroRid.GetHashCode();
      if (IsFree != false) hash ^= IsFree.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeroRid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(HeroRid);
      }
      if (IsFree != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsFree);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroRid);
      }
      if (IsFree != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResetAsgnReq other) {
      if (other == null) {
        return;
      }
      if (other.HeroRid != 0L) {
        HeroRid = other.HeroRid;
      }
      if (other.IsFree != false) {
        IsFree = other.IsFree;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HeroRid = input.ReadInt64();
            break;
          }
          case 16: {
            IsFree = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 英雄转化为战法经验
  /// </summary>
  public sealed partial class Heros2SkillExpReq : pb::IMessage<Heros2SkillExpReq> {
    private static readonly pb::MessageParser<Heros2SkillExpReq> _parser = new pb::MessageParser<Heros2SkillExpReq>(() => new Heros2SkillExpReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Heros2SkillExpReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Heros2SkillExpReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Heros2SkillExpReq(Heros2SkillExpReq other) : this() {
      heroRids_ = other.heroRids_.Clone();
      isDiamond_ = other.isDiamond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Heros2SkillExpReq Clone() {
      return new Heros2SkillExpReq(this);
    }

    /// <summary>Field number for the "hero_rids" field.</summary>
    public const int HeroRidsFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_heroRids_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> heroRids_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 消耗的英雄
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> HeroRids {
      get { return heroRids_; }
    }

    /// <summary>Field number for the "is_diamond" field.</summary>
    public const int IsDiamondFieldNumber = 2;
    private bool isDiamond_;
    /// <summary>
    /// 消耗钻石
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDiamond {
      get { return isDiamond_; }
      set {
        isDiamond_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Heros2SkillExpReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Heros2SkillExpReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!heroRids_.Equals(other.heroRids_)) return false;
      if (IsDiamond != other.IsDiamond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= heroRids_.GetHashCode();
      if (IsDiamond != false) hash ^= IsDiamond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      heroRids_.WriteTo(output, _repeated_heroRids_codec);
      if (IsDiamond != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsDiamond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += heroRids_.CalculateSize(_repeated_heroRids_codec);
      if (IsDiamond != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Heros2SkillExpReq other) {
      if (other == null) {
        return;
      }
      heroRids_.Add(other.heroRids_);
      if (other.IsDiamond != false) {
        IsDiamond = other.IsDiamond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            heroRids_.AddEntriesFrom(input, _repeated_heroRids_codec);
            break;
          }
          case 16: {
            IsDiamond = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 技能升级
  /// </summary>
  public sealed partial class HeroSkillUpgradeReq : pb::IMessage<HeroSkillUpgradeReq> {
    private static readonly pb::MessageParser<HeroSkillUpgradeReq> _parser = new pb::MessageParser<HeroSkillUpgradeReq>(() => new HeroSkillUpgradeReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroSkillUpgradeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSkillUpgradeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSkillUpgradeReq(HeroSkillUpgradeReq other) : this() {
      heroRid_ = other.heroRid_;
      skillId_ = other.skillId_;
      curLv_ = other.curLv_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSkillUpgradeReq Clone() {
      return new HeroSkillUpgradeReq(this);
    }

    /// <summary>Field number for the "hero_rid" field.</summary>
    public const int HeroRidFieldNumber = 1;
    private long heroRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroRid {
      get { return heroRid_; }
      set {
        heroRid_ = value;
      }
    }

    /// <summary>Field number for the "skill_id" field.</summary>
    public const int SkillIdFieldNumber = 2;
    private int skillId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillId {
      get { return skillId_; }
      set {
        skillId_ = value;
      }
    }

    /// <summary>Field number for the "cur_lv" field.</summary>
    public const int CurLvFieldNumber = 3;
    private int curLv_;
    /// <summary>
    /// 技能当前等级, 避免网络延迟导致的数据不一致
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurLv {
      get { return curLv_; }
      set {
        curLv_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroSkillUpgradeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroSkillUpgradeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroRid != other.HeroRid) return false;
      if (SkillId != other.SkillId) return false;
      if (CurLv != other.CurLv) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroRid != 0L) hash ^= HeroRid.GetHashCode();
      if (SkillId != 0) hash ^= SkillId.GetHashCode();
      if (CurLv != 0) hash ^= CurLv.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeroRid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(HeroRid);
      }
      if (SkillId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SkillId);
      }
      if (CurLv != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurLv);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroRid);
      }
      if (SkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
      }
      if (CurLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurLv);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroSkillUpgradeReq other) {
      if (other == null) {
        return;
      }
      if (other.HeroRid != 0L) {
        HeroRid = other.HeroRid;
      }
      if (other.SkillId != 0) {
        SkillId = other.SkillId;
      }
      if (other.CurLv != 0) {
        CurLv = other.CurLv;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HeroRid = input.ReadInt64();
            break;
          }
          case 16: {
            SkillId = input.ReadInt32();
            break;
          }
          case 24: {
            CurLv = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 英雄锁定
  /// </summary>
  public sealed partial class LockHeroReq : pb::IMessage<LockHeroReq> {
    private static readonly pb::MessageParser<LockHeroReq> _parser = new pb::MessageParser<LockHeroReq>(() => new LockHeroReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LockHeroReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LockHeroReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LockHeroReq(LockHeroReq other) : this() {
      heroRid_ = other.heroRid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LockHeroReq Clone() {
      return new LockHeroReq(this);
    }

    /// <summary>Field number for the "hero_rid" field.</summary>
    public const int HeroRidFieldNumber = 1;
    private long heroRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroRid {
      get { return heroRid_; }
      set {
        heroRid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LockHeroReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LockHeroReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroRid != other.HeroRid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroRid != 0L) hash ^= HeroRid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeroRid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(HeroRid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroRid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LockHeroReq other) {
      if (other == null) {
        return;
      }
      if (other.HeroRid != 0L) {
        HeroRid = other.HeroRid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HeroRid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 英雄锁定
  /// </summary>
  public sealed partial class UnLockHeroReq : pb::IMessage<UnLockHeroReq> {
    private static readonly pb::MessageParser<UnLockHeroReq> _parser = new pb::MessageParser<UnLockHeroReq>(() => new UnLockHeroReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnLockHeroReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnLockHeroReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnLockHeroReq(UnLockHeroReq other) : this() {
      heroRid_ = other.heroRid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnLockHeroReq Clone() {
      return new UnLockHeroReq(this);
    }

    /// <summary>Field number for the "hero_rid" field.</summary>
    public const int HeroRidFieldNumber = 1;
    private long heroRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroRid {
      get { return heroRid_; }
      set {
        heroRid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnLockHeroReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnLockHeroReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroRid != other.HeroRid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroRid != 0L) hash ^= HeroRid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeroRid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(HeroRid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroRid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnLockHeroReq other) {
      if (other == null) {
        return;
      }
      if (other.HeroRid != 0L) {
        HeroRid = other.HeroRid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HeroRid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 收税
  /// </summary>
  public sealed partial class CollectTaxesReq : pb::IMessage<CollectTaxesReq> {
    private static readonly pb::MessageParser<CollectTaxesReq> _parser = new pb::MessageParser<CollectTaxesReq>(() => new CollectTaxesReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CollectTaxesReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectTaxesReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectTaxesReq(CollectTaxesReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectTaxesReq Clone() {
      return new CollectTaxesReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CollectTaxesReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CollectTaxesReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CollectTaxesReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 交易资源请求
  /// </summary>
  public sealed partial class TransResReq : pb::IMessage<TransResReq> {
    private static readonly pb::MessageParser<TransResReq> _parser = new pb::MessageParser<TransResReq>(() => new TransResReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransResReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransResReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransResReq(TransResReq other) : this() {
      src_ = other.src_;
      dest_ = other.dest_;
      cnt_ = other.cnt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransResReq Clone() {
      return new TransResReq(this);
    }

    /// <summary>Field number for the "src" field.</summary>
    public const int SrcFieldNumber = 1;
    private int src_;
    /// <summary>
    /// 用资源id表示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Src {
      get { return src_; }
      set {
        src_ = value;
      }
    }

    /// <summary>Field number for the "dest" field.</summary>
    public const int DestFieldNumber = 2;
    private int dest_;
    /// <summary>
    /// 用资源id表示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Dest {
      get { return dest_; }
      set {
        dest_ = value;
      }
    }

    /// <summary>Field number for the "cnt" field.</summary>
    public const int CntFieldNumber = 3;
    private int cnt_;
    /// <summary>
    /// src的数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cnt {
      get { return cnt_; }
      set {
        cnt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransResReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransResReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Src != other.Src) return false;
      if (Dest != other.Dest) return false;
      if (Cnt != other.Cnt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Src != 0) hash ^= Src.GetHashCode();
      if (Dest != 0) hash ^= Dest.GetHashCode();
      if (Cnt != 0) hash ^= Cnt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Src != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Src);
      }
      if (Dest != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Dest);
      }
      if (Cnt != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cnt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Src != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Src);
      }
      if (Dest != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dest);
      }
      if (Cnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cnt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransResReq other) {
      if (other == null) {
        return;
      }
      if (other.Src != 0) {
        Src = other.Src;
      }
      if (other.Dest != 0) {
        Dest = other.Dest;
      }
      if (other.Cnt != 0) {
        Cnt = other.Cnt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Src = input.ReadInt32();
            break;
          }
          case 16: {
            Dest = input.ReadInt32();
            break;
          }
          case 24: {
            Cnt = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 发送邮件
  /// </summary>
  public sealed partial class SendMailReq : pb::IMessage<SendMailReq> {
    private static readonly pb::MessageParser<SendMailReq> _parser = new pb::MessageParser<SendMailReq>(() => new SendMailReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendMailReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMailReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMailReq(SendMailReq other) : this() {
      receivers_ = other.receivers_.Clone();
      title_ = other.title_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMailReq Clone() {
      return new SendMailReq(this);
    }

    /// <summary>Field number for the "receivers" field.</summary>
    public const int ReceiversFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Cspb.MailAddr> _repeated_receivers_codec
        = pb::FieldCodec.ForMessage(10, global::Cspb.MailAddr.Parser);
    private readonly pbc::RepeatedField<global::Cspb.MailAddr> receivers_ = new pbc::RepeatedField<global::Cspb.MailAddr>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Cspb.MailAddr> Receivers {
      get { return receivers_; }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 3;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendMailReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendMailReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!receivers_.Equals(other.receivers_)) return false;
      if (Title != other.Title) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= receivers_.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      receivers_.WriteTo(output, _repeated_receivers_codec);
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += receivers_.CalculateSize(_repeated_receivers_codec);
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendMailReq other) {
      if (other == null) {
        return;
      }
      receivers_.Add(other.receivers_);
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            receivers_.AddEntriesFrom(input, _repeated_receivers_codec);
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 拉取邮件列表
  /// </summary>
  public sealed partial class GetMailListReq : pb::IMessage<GetMailListReq> {
    private static readonly pb::MessageParser<GetMailListReq> _parser = new pb::MessageParser<GetMailListReq>(() => new GetMailListReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMailListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMailListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMailListReq(GetMailListReq other) : this() {
      boxId_ = other.boxId_;
      startId_ = other.startId_;
      asc_ = other.asc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMailListReq Clone() {
      return new GetMailListReq(this);
    }

    /// <summary>Field number for the "box_id" field.</summary>
    public const int BoxIdFieldNumber = 1;
    private int boxId_;
    /// <summary>
    /// 邮箱id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoxId {
      get { return boxId_; }
      set {
        boxId_ = value;
      }
    }

    /// <summary>Field number for the "start_id" field.</summary>
    public const int StartIdFieldNumber = 2;
    private long startId_;
    /// <summary>
    /// 邮件起始id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartId {
      get { return startId_; }
      set {
        startId_ = value;
      }
    }

    /// <summary>Field number for the "asc" field.</summary>
    public const int AscFieldNumber = 3;
    private bool asc_;
    /// <summary>
    /// true为升序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Asc {
      get { return asc_; }
      set {
        asc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMailListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMailListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BoxId != other.BoxId) return false;
      if (StartId != other.StartId) return false;
      if (Asc != other.Asc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BoxId != 0) hash ^= BoxId.GetHashCode();
      if (StartId != 0L) hash ^= StartId.GetHashCode();
      if (Asc != false) hash ^= Asc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BoxId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BoxId);
      }
      if (StartId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartId);
      }
      if (Asc != false) {
        output.WriteRawTag(24);
        output.WriteBool(Asc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BoxId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoxId);
      }
      if (StartId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartId);
      }
      if (Asc != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMailListReq other) {
      if (other == null) {
        return;
      }
      if (other.BoxId != 0) {
        BoxId = other.BoxId;
      }
      if (other.StartId != 0L) {
        StartId = other.StartId;
      }
      if (other.Asc != false) {
        Asc = other.Asc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BoxId = input.ReadInt32();
            break;
          }
          case 16: {
            StartId = input.ReadInt64();
            break;
          }
          case 24: {
            Asc = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 阅读邮件
  /// </summary>
  public sealed partial class ReadMailReq : pb::IMessage<ReadMailReq> {
    private static readonly pb::MessageParser<ReadMailReq> _parser = new pb::MessageParser<ReadMailReq>(() => new ReadMailReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadMailReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadMailReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadMailReq(ReadMailReq other) : this() {
      mailIds_ = other.mailIds_.Clone();
      getAttachment_ = other.getAttachment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadMailReq Clone() {
      return new ReadMailReq(this);
    }

    /// <summary>Field number for the "mail_ids" field.</summary>
    public const int MailIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_mailIds_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> mailIds_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> MailIds {
      get { return mailIds_; }
    }

    /// <summary>Field number for the "get_attachment" field.</summary>
    public const int GetAttachmentFieldNumber = 2;
    private bool getAttachment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool GetAttachment {
      get { return getAttachment_; }
      set {
        getAttachment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadMailReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadMailReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mailIds_.Equals(other.mailIds_)) return false;
      if (GetAttachment != other.GetAttachment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mailIds_.GetHashCode();
      if (GetAttachment != false) hash ^= GetAttachment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mailIds_.WriteTo(output, _repeated_mailIds_codec);
      if (GetAttachment != false) {
        output.WriteRawTag(16);
        output.WriteBool(GetAttachment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mailIds_.CalculateSize(_repeated_mailIds_codec);
      if (GetAttachment != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadMailReq other) {
      if (other == null) {
        return;
      }
      mailIds_.Add(other.mailIds_);
      if (other.GetAttachment != false) {
        GetAttachment = other.GetAttachment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            mailIds_.AddEntriesFrom(input, _repeated_mailIds_codec);
            break;
          }
          case 16: {
            GetAttachment = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 领取附件奖励
  /// </summary>
  public sealed partial class GetAttachmentReq : pb::IMessage<GetAttachmentReq> {
    private static readonly pb::MessageParser<GetAttachmentReq> _parser = new pb::MessageParser<GetAttachmentReq>(() => new GetAttachmentReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAttachmentReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAttachmentReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAttachmentReq(GetAttachmentReq other) : this() {
      mailIds_ = other.mailIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAttachmentReq Clone() {
      return new GetAttachmentReq(this);
    }

    /// <summary>Field number for the "mail_ids" field.</summary>
    public const int MailIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_mailIds_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> mailIds_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> MailIds {
      get { return mailIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAttachmentReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAttachmentReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mailIds_.Equals(other.mailIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mailIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mailIds_.WriteTo(output, _repeated_mailIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mailIds_.CalculateSize(_repeated_mailIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAttachmentReq other) {
      if (other == null) {
        return;
      }
      mailIds_.Add(other.mailIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            mailIds_.AddEntriesFrom(input, _repeated_mailIds_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 收藏邮件
  /// </summary>
  public sealed partial class StarMailReq : pb::IMessage<StarMailReq> {
    private static readonly pb::MessageParser<StarMailReq> _parser = new pb::MessageParser<StarMailReq>(() => new StarMailReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StarMailReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StarMailReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StarMailReq(StarMailReq other) : this() {
      mailId_ = other.mailId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StarMailReq Clone() {
      return new StarMailReq(this);
    }

    /// <summary>Field number for the "mail_id" field.</summary>
    public const int MailIdFieldNumber = 1;
    private long mailId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MailId {
      get { return mailId_; }
      set {
        mailId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StarMailReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StarMailReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MailId != other.MailId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MailId != 0L) hash ^= MailId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MailId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MailId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MailId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MailId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StarMailReq other) {
      if (other == null) {
        return;
      }
      if (other.MailId != 0L) {
        MailId = other.MailId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MailId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 取消收藏
  /// </summary>
  public sealed partial class UnstarMailReq : pb::IMessage<UnstarMailReq> {
    private static readonly pb::MessageParser<UnstarMailReq> _parser = new pb::MessageParser<UnstarMailReq>(() => new UnstarMailReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnstarMailReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnstarMailReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnstarMailReq(UnstarMailReq other) : this() {
      mailIds_ = other.mailIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnstarMailReq Clone() {
      return new UnstarMailReq(this);
    }

    /// <summary>Field number for the "mail_ids" field.</summary>
    public const int MailIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_mailIds_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> mailIds_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> MailIds {
      get { return mailIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnstarMailReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnstarMailReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mailIds_.Equals(other.mailIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mailIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mailIds_.WriteTo(output, _repeated_mailIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mailIds_.CalculateSize(_repeated_mailIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnstarMailReq other) {
      if (other == null) {
        return;
      }
      mailIds_.Add(other.mailIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            mailIds_.AddEntriesFrom(input, _repeated_mailIds_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 批量删除邮件 -- 废弃
  /// </summary>
  public sealed partial class DeleteMailReq : pb::IMessage<DeleteMailReq> {
    private static readonly pb::MessageParser<DeleteMailReq> _parser = new pb::MessageParser<DeleteMailReq>(() => new DeleteMailReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteMailReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMailReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMailReq(DeleteMailReq other) : this() {
      mailIds_ = other.mailIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMailReq Clone() {
      return new DeleteMailReq(this);
    }

    /// <summary>Field number for the "mail_ids" field.</summary>
    public const int MailIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_mailIds_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> mailIds_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> MailIds {
      get { return mailIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteMailReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteMailReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mailIds_.Equals(other.mailIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mailIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mailIds_.WriteTo(output, _repeated_mailIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mailIds_.CalculateSize(_repeated_mailIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteMailReq other) {
      if (other == null) {
        return;
      }
      mailIds_.Add(other.mailIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            mailIds_.AddEntriesFrom(input, _repeated_mailIds_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 发送聊天消息
  /// </summary>
  public sealed partial class ChatReq : pb::IMessage<ChatReq> {
    private static readonly pb::MessageParser<ChatReq> _parser = new pb::MessageParser<ChatReq>(() => new ChatReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatReq(ChatReq other) : this() {
      channel_ = other.channel_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatReq Clone() {
      return new ChatReq(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private int channel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel != 0) hash ^= Channel.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Channel);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatReq other) {
      if (other == null) {
        return;
      }
      if (other.Channel != 0) {
        Channel = other.Channel;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Channel = input.ReadInt32();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 拉取消息记录
  /// </summary>
  public sealed partial class ChatListReq : pb::IMessage<ChatListReq> {
    private static readonly pb::MessageParser<ChatListReq> _parser = new pb::MessageParser<ChatListReq>(() => new ChatListReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatListReq(ChatListReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatListReq Clone() {
      return new ChatListReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatListReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 收藏土地, 上限10
  /// </summary>
  public sealed partial class CollectLandReq : pb::IMessage<CollectLandReq> {
    private static readonly pb::MessageParser<CollectLandReq> _parser = new pb::MessageParser<CollectLandReq>(() => new CollectLandReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CollectLandReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectLandReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectLandReq(CollectLandReq other) : this() {
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectLandReq Clone() {
      return new CollectLandReq(this);
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 1;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CollectLandReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CollectLandReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CollectLandReq other) {
      if (other == null) {
        return;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UndoCollectLandReq : pb::IMessage<UndoCollectLandReq> {
    private static readonly pb::MessageParser<UndoCollectLandReq> _parser = new pb::MessageParser<UndoCollectLandReq>(() => new UndoCollectLandReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UndoCollectLandReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UndoCollectLandReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UndoCollectLandReq(UndoCollectLandReq other) : this() {
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UndoCollectLandReq Clone() {
      return new UndoCollectLandReq(this);
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 1;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UndoCollectLandReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UndoCollectLandReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UndoCollectLandReq other) {
      if (other == null) {
        return;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// gacha
  /// </summary>
  public sealed partial class GachaReq : pb::IMessage<GachaReq> {
    private static readonly pb::MessageParser<GachaReq> _parser = new pb::MessageParser<GachaReq>(() => new GachaReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GachaReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GachaReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GachaReq(GachaReq other) : this() {
      packageId_ = other.packageId_;
      priceId_ = other.priceId_;
      cnt_ = other.cnt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GachaReq Clone() {
      return new GachaReq(this);
    }

    /// <summary>Field number for the "package_id" field.</summary>
    public const int PackageIdFieldNumber = 1;
    private long packageId_;
    /// <summary>
    /// 抽奖池
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PackageId {
      get { return packageId_; }
      set {
        packageId_ = value;
      }
    }

    /// <summary>Field number for the "price_id" field.</summary>
    public const int PriceIdFieldNumber = 2;
    private int priceId_;
    /// <summary>
    /// 价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PriceId {
      get { return priceId_; }
      set {
        priceId_ = value;
      }
    }

    /// <summary>Field number for the "cnt" field.</summary>
    public const int CntFieldNumber = 3;
    private int cnt_;
    /// <summary>
    /// 次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cnt {
      get { return cnt_; }
      set {
        cnt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GachaReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GachaReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageId != other.PackageId) return false;
      if (PriceId != other.PriceId) return false;
      if (Cnt != other.Cnt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PackageId != 0L) hash ^= PackageId.GetHashCode();
      if (PriceId != 0) hash ^= PriceId.GetHashCode();
      if (Cnt != 0) hash ^= Cnt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PackageId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PackageId);
      }
      if (PriceId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PriceId);
      }
      if (Cnt != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cnt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PackageId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PackageId);
      }
      if (PriceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PriceId);
      }
      if (Cnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cnt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GachaReq other) {
      if (other == null) {
        return;
      }
      if (other.PackageId != 0L) {
        PackageId = other.PackageId;
      }
      if (other.PriceId != 0) {
        PriceId = other.PriceId;
      }
      if (other.Cnt != 0) {
        Cnt = other.Cnt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PackageId = input.ReadInt64();
            break;
          }
          case 16: {
            PriceId = input.ReadInt32();
            break;
          }
          case 24: {
            Cnt = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GachaListReq : pb::IMessage<GachaListReq> {
    private static readonly pb::MessageParser<GachaListReq> _parser = new pb::MessageParser<GachaListReq>(() => new GachaListReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GachaListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GachaListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GachaListReq(GachaListReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GachaListReq Clone() {
      return new GachaListReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GachaListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GachaListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GachaListReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 返回中的部队立刻到达
  /// </summary>
  public sealed partial class TroopArrivedAtOnceReq : pb::IMessage<TroopArrivedAtOnceReq> {
    private static readonly pb::MessageParser<TroopArrivedAtOnceReq> _parser = new pb::MessageParser<TroopArrivedAtOnceReq>(() => new TroopArrivedAtOnceReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TroopArrivedAtOnceReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TroopArrivedAtOnceReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TroopArrivedAtOnceReq(TroopArrivedAtOnceReq other) : this() {
      troopId_ = other.troopId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TroopArrivedAtOnceReq Clone() {
      return new TroopArrivedAtOnceReq(this);
    }

    /// <summary>Field number for the "troop_id" field.</summary>
    public const int TroopIdFieldNumber = 1;
    private long troopId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TroopId {
      get { return troopId_; }
      set {
        troopId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TroopArrivedAtOnceReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TroopArrivedAtOnceReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TroopId != other.TroopId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TroopId != 0L) hash ^= TroopId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TroopId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TroopId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TroopId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TroopId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TroopArrivedAtOnceReq other) {
      if (other == null) {
        return;
      }
      if (other.TroopId != 0L) {
        TroopId = other.TroopId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TroopId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTaskAwardReq : pb::IMessage<GetTaskAwardReq> {
    private static readonly pb::MessageParser<GetTaskAwardReq> _parser = new pb::MessageParser<GetTaskAwardReq>(() => new GetTaskAwardReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTaskAwardReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskAwardReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskAwardReq(GetTaskAwardReq other) : this() {
      taskId_ = other.taskId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskAwardReq Clone() {
      return new GetTaskAwardReq(this);
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 1;
    private int taskId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskId {
      get { return taskId_; }
      set {
        taskId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTaskAwardReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTaskAwardReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskId != other.TaskId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskId != 0) hash ^= TaskId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaskId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTaskAwardReq other) {
      if (other == null) {
        return;
      }
      if (other.TaskId != 0) {
        TaskId = other.TaskId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TaskListReq : pb::IMessage<TaskListReq> {
    private static readonly pb::MessageParser<TaskListReq> _parser = new pb::MessageParser<TaskListReq>(() => new TaskListReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskListReq(TaskListReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskListReq Clone() {
      return new TaskListReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskListReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 税收
  /// </summary>
  public sealed partial class TaxReq : pb::IMessage<TaxReq> {
    private static readonly pb::MessageParser<TaxReq> _parser = new pb::MessageParser<TaxReq>(() => new TaxReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaxReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxReq(TaxReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxReq Clone() {
      return new TaxReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaxReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaxReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaxReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 市井 获取市井
  /// </summary>
  public sealed partial class MarketsReq : pb::IMessage<MarketsReq> {
    private static readonly pb::MessageParser<MarketsReq> _parser = new pb::MessageParser<MarketsReq>(() => new MarketsReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketsReq(MarketsReq other) : this() {
      id_ = other.id_;
      refreshTime_ = other.refreshTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketsReq Clone() {
      return new MarketsReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 商店id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "refresh_time" field.</summary>
    public const int RefreshTimeFieldNumber = 2;
    private long refreshTime_;
    /// <summary>
    /// 上次商品更新时间(毫秒级时间戳)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RefreshTime {
      get { return refreshTime_; }
      set {
        refreshTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RefreshTime != other.RefreshTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RefreshTime != 0L) hash ^= RefreshTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RefreshTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RefreshTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RefreshTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefreshTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketsReq other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RefreshTime != 0L) {
        RefreshTime = other.RefreshTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RefreshTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 市井 刷新市井
  /// </summary>
  public sealed partial class MarketBuyTimesReq : pb::IMessage<MarketBuyTimesReq> {
    private static readonly pb::MessageParser<MarketBuyTimesReq> _parser = new pb::MessageParser<MarketBuyTimesReq>(() => new MarketBuyTimesReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketBuyTimesReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketBuyTimesReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketBuyTimesReq(MarketBuyTimesReq other) : this() {
      id_ = other.id_;
      refreshTime_ = other.refreshTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketBuyTimesReq Clone() {
      return new MarketBuyTimesReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 商店id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "refresh_time" field.</summary>
    public const int RefreshTimeFieldNumber = 2;
    private long refreshTime_;
    /// <summary>
    /// 上次商品更新时间(毫秒级时间戳)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RefreshTime {
      get { return refreshTime_; }
      set {
        refreshTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketBuyTimesReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketBuyTimesReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RefreshTime != other.RefreshTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RefreshTime != 0L) hash ^= RefreshTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RefreshTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RefreshTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RefreshTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefreshTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketBuyTimesReq other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RefreshTime != 0L) {
        RefreshTime = other.RefreshTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RefreshTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 市井 购买商品
  /// </summary>
  public sealed partial class MarketBuyItemReq : pb::IMessage<MarketBuyItemReq> {
    private static readonly pb::MessageParser<MarketBuyItemReq> _parser = new pb::MessageParser<MarketBuyItemReq>(() => new MarketBuyItemReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketBuyItemReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketBuyItemReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketBuyItemReq(MarketBuyItemReq other) : this() {
      id_ = other.id_;
      idx_ = other.idx_;
      refreshTime_ = other.refreshTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketBuyItemReq Clone() {
      return new MarketBuyItemReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 商店id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "idx" field.</summary>
    public const int IdxFieldNumber = 2;
    private int idx_;
    /// <summary>
    /// 物品index
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Idx {
      get { return idx_; }
      set {
        idx_ = value;
      }
    }

    /// <summary>Field number for the "refresh_time" field.</summary>
    public const int RefreshTimeFieldNumber = 3;
    private long refreshTime_;
    /// <summary>
    /// 上次商品更新时间(毫秒级时间戳)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RefreshTime {
      get { return refreshTime_; }
      set {
        refreshTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketBuyItemReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketBuyItemReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Idx != other.Idx) return false;
      if (RefreshTime != other.RefreshTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Idx != 0) hash ^= Idx.GetHashCode();
      if (RefreshTime != 0L) hash ^= RefreshTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Idx != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Idx);
      }
      if (RefreshTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RefreshTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Idx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Idx);
      }
      if (RefreshTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefreshTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketBuyItemReq other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Idx != 0) {
        Idx = other.Idx;
      }
      if (other.RefreshTime != 0L) {
        RefreshTime = other.RefreshTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Idx = input.ReadInt32();
            break;
          }
          case 24: {
            RefreshTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpGuardianHeroReq : pb::IMessage<UpGuardianHeroReq> {
    private static readonly pb::MessageParser<UpGuardianHeroReq> _parser = new pb::MessageParser<UpGuardianHeroReq>(() => new UpGuardianHeroReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpGuardianHeroReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpGuardianHeroReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpGuardianHeroReq(UpGuardianHeroReq other) : this() {
      cityId_ = other.cityId_;
      heroRid_ = other.heroRid_;
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpGuardianHeroReq Clone() {
      return new UpGuardianHeroReq(this);
    }

    /// <summary>Field number for the "city_id" field.</summary>
    public const int CityIdFieldNumber = 1;
    private long cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "hero_rid" field.</summary>
    public const int HeroRidFieldNumber = 2;
    private long heroRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroRid {
      get { return heroRid_; }
      set {
        heroRid_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 3;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpGuardianHeroReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpGuardianHeroReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CityId != other.CityId) return false;
      if (HeroRid != other.HeroRid) return false;
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CityId != 0L) hash ^= CityId.GetHashCode();
      if (HeroRid != 0L) hash ^= HeroRid.GetHashCode();
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CityId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CityId);
      }
      if (HeroRid != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HeroRid);
      }
      if (Pos != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CityId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CityId);
      }
      if (HeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroRid);
      }
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpGuardianHeroReq other) {
      if (other == null) {
        return;
      }
      if (other.CityId != 0L) {
        CityId = other.CityId;
      }
      if (other.HeroRid != 0L) {
        HeroRid = other.HeroRid;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CityId = input.ReadInt64();
            break;
          }
          case 16: {
            HeroRid = input.ReadInt64();
            break;
          }
          case 24: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DownGuardianHeroReq : pb::IMessage<DownGuardianHeroReq> {
    private static readonly pb::MessageParser<DownGuardianHeroReq> _parser = new pb::MessageParser<DownGuardianHeroReq>(() => new DownGuardianHeroReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownGuardianHeroReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownGuardianHeroReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownGuardianHeroReq(DownGuardianHeroReq other) : this() {
      cityId_ = other.cityId_;
      heroRid_ = other.heroRid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownGuardianHeroReq Clone() {
      return new DownGuardianHeroReq(this);
    }

    /// <summary>Field number for the "city_id" field.</summary>
    public const int CityIdFieldNumber = 1;
    private long cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "hero_rid" field.</summary>
    public const int HeroRidFieldNumber = 2;
    private long heroRid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroRid {
      get { return heroRid_; }
      set {
        heroRid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownGuardianHeroReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownGuardianHeroReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CityId != other.CityId) return false;
      if (HeroRid != other.HeroRid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CityId != 0L) hash ^= CityId.GetHashCode();
      if (HeroRid != 0L) hash ^= HeroRid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CityId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CityId);
      }
      if (HeroRid != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HeroRid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CityId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CityId);
      }
      if (HeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroRid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownGuardianHeroReq other) {
      if (other == null) {
        return;
      }
      if (other.CityId != 0L) {
        CityId = other.CityId;
      }
      if (other.HeroRid != 0L) {
        HeroRid = other.HeroRid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CityId = input.ReadInt64();
            break;
          }
          case 16: {
            HeroRid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SwapGuardianHeroReq : pb::IMessage<SwapGuardianHeroReq> {
    private static readonly pb::MessageParser<SwapGuardianHeroReq> _parser = new pb::MessageParser<SwapGuardianHeroReq>(() => new SwapGuardianHeroReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SwapGuardianHeroReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SwapGuardianHeroReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SwapGuardianHeroReq(SwapGuardianHeroReq other) : this() {
      cityId_ = other.cityId_;
      srcPos_ = other.srcPos_;
      dstPos_ = other.dstPos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SwapGuardianHeroReq Clone() {
      return new SwapGuardianHeroReq(this);
    }

    /// <summary>Field number for the "city_id" field.</summary>
    public const int CityIdFieldNumber = 1;
    private long cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "src_pos" field.</summary>
    public const int SrcPosFieldNumber = 2;
    private int srcPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SrcPos {
      get { return srcPos_; }
      set {
        srcPos_ = value;
      }
    }

    /// <summary>Field number for the "dst_pos" field.</summary>
    public const int DstPosFieldNumber = 3;
    private int dstPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DstPos {
      get { return dstPos_; }
      set {
        dstPos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SwapGuardianHeroReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SwapGuardianHeroReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CityId != other.CityId) return false;
      if (SrcPos != other.SrcPos) return false;
      if (DstPos != other.DstPos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CityId != 0L) hash ^= CityId.GetHashCode();
      if (SrcPos != 0) hash ^= SrcPos.GetHashCode();
      if (DstPos != 0) hash ^= DstPos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CityId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CityId);
      }
      if (SrcPos != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SrcPos);
      }
      if (DstPos != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DstPos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CityId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CityId);
      }
      if (SrcPos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SrcPos);
      }
      if (DstPos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DstPos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SwapGuardianHeroReq other) {
      if (other == null) {
        return;
      }
      if (other.CityId != 0L) {
        CityId = other.CityId;
      }
      if (other.SrcPos != 0) {
        SrcPos = other.SrcPos;
      }
      if (other.DstPos != 0) {
        DstPos = other.DstPos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CityId = input.ReadInt64();
            break;
          }
          case 16: {
            SrcPos = input.ReadInt32();
            break;
          }
          case 24: {
            DstPos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 修建新的建筑物
  /// </summary>
  public sealed partial class BuildCityReq : pb::IMessage<BuildCityReq> {
    private static readonly pb::MessageParser<BuildCityReq> _parser = new pb::MessageParser<BuildCityReq>(() => new BuildCityReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildCityReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildCityReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildCityReq(BuildCityReq other) : this() {
      cityType_ = other.cityType_;
      cityName_ = other.cityName_;
      cityPos_ = other.cityPos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildCityReq Clone() {
      return new BuildCityReq(this);
    }

    /// <summary>Field number for the "city_type" field.</summary>
    public const int CityTypeFieldNumber = 1;
    private global::Cspb.CITY_TYPE cityType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cspb.CITY_TYPE CityType {
      get { return cityType_; }
      set {
        cityType_ = value;
      }
    }

    /// <summary>Field number for the "city_name" field.</summary>
    public const int CityNameFieldNumber = 2;
    private string cityName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CityName {
      get { return cityName_; }
      set {
        cityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "city_pos" field.</summary>
    public const int CityPosFieldNumber = 3;
    private int cityPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CityPos {
      get { return cityPos_; }
      set {
        cityPos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildCityReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildCityReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CityType != other.CityType) return false;
      if (CityName != other.CityName) return false;
      if (CityPos != other.CityPos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CityType != 0) hash ^= CityType.GetHashCode();
      if (CityName.Length != 0) hash ^= CityName.GetHashCode();
      if (CityPos != 0) hash ^= CityPos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CityType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CityType);
      }
      if (CityName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CityName);
      }
      if (CityPos != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CityPos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CityType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CityType);
      }
      if (CityName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CityName);
      }
      if (CityPos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CityPos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildCityReq other) {
      if (other == null) {
        return;
      }
      if (other.CityType != 0) {
        CityType = other.CityType;
      }
      if (other.CityName.Length != 0) {
        CityName = other.CityName;
      }
      if (other.CityPos != 0) {
        CityPos = other.CityPos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            cityType_ = (global::Cspb.CITY_TYPE) input.ReadEnum();
            break;
          }
          case 18: {
            CityName = input.ReadString();
            break;
          }
          case 24: {
            CityPos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 拆除建筑
  /// </summary>
  public sealed partial class DismantleCityReq : pb::IMessage<DismantleCityReq> {
    private static readonly pb::MessageParser<DismantleCityReq> _parser = new pb::MessageParser<DismantleCityReq>(() => new DismantleCityReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DismantleCityReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DismantleCityReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DismantleCityReq(DismantleCityReq other) : this() {
      cityType_ = other.cityType_;
      cityId_ = other.cityId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DismantleCityReq Clone() {
      return new DismantleCityReq(this);
    }

    /// <summary>Field number for the "city_type" field.</summary>
    public const int CityTypeFieldNumber = 1;
    private global::Cspb.CITY_TYPE cityType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cspb.CITY_TYPE CityType {
      get { return cityType_; }
      set {
        cityType_ = value;
      }
    }

    /// <summary>Field number for the "city_id" field.</summary>
    public const int CityIdFieldNumber = 2;
    private long cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DismantleCityReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DismantleCityReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CityType != other.CityType) return false;
      if (CityId != other.CityId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CityType != 0) hash ^= CityType.GetHashCode();
      if (CityId != 0L) hash ^= CityId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CityType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CityType);
      }
      if (CityId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CityId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CityType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CityType);
      }
      if (CityId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CityId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DismantleCityReq other) {
      if (other == null) {
        return;
      }
      if (other.CityType != 0) {
        CityType = other.CityType;
      }
      if (other.CityId != 0L) {
        CityId = other.CityId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            cityType_ = (global::Cspb.CITY_TYPE) input.ReadEnum();
            break;
          }
          case 16: {
            CityId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 对话任务（分支选择）任务
  /// </summary>
  public sealed partial class TaskActiveReq : pb::IMessage<TaskActiveReq> {
    private static readonly pb::MessageParser<TaskActiveReq> _parser = new pb::MessageParser<TaskActiveReq>(() => new TaskActiveReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskActiveReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskActiveReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskActiveReq(TaskActiveReq other) : this() {
      taskId_ = other.taskId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskActiveReq Clone() {
      return new TaskActiveReq(this);
    }

    /// <summary>Field number for the "taskId" field.</summary>
    public const int TaskIdFieldNumber = 1;
    private int taskId_;
    /// <summary>
    /// 要激活的任务数组 中的首个event id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskId {
      get { return taskId_; }
      set {
        taskId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskActiveReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskActiveReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskId != other.TaskId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskId != 0) hash ^= TaskId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaskId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskActiveReq other) {
      if (other == null) {
        return;
      }
      if (other.TaskId != 0) {
        TaskId = other.TaskId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 以一个土地为中心筛选一块土地
  /// </summary>
  public sealed partial class FilterPosReq : pb::IMessage<FilterPosReq> {
    private static readonly pb::MessageParser<FilterPosReq> _parser = new pb::MessageParser<FilterPosReq>(() => new FilterPosReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FilterPosReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterPosReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterPosReq(FilterPosReq other) : this() {
      center_ = other.center_;
      radius_ = other.radius_;
      occupyState_ = other.occupyState_;
      landLv_ = other.landLv_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterPosReq Clone() {
      return new FilterPosReq(this);
    }

    /// <summary>Field number for the "center" field.</summary>
    public const int CenterFieldNumber = 1;
    private int center_;
    /// <summary>
    /// 中心
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Center {
      get { return center_; }
      set {
        center_ = value;
      }
    }

    /// <summary>Field number for the "radius" field.</summary>
    public const int RadiusFieldNumber = 2;
    private int radius_;
    /// <summary>
    /// 半径, 不超过10
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Radius {
      get { return radius_; }
      set {
        radius_ = value;
      }
    }

    /// <summary>Field number for the "occupy_state" field.</summary>
    public const int OccupyStateFieldNumber = 3;
    private int occupyState_;
    /// <summary>
    /// 占领情况, 0: 无主, 1:自己的, 2:别人的
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OccupyState {
      get { return occupyState_; }
      set {
        occupyState_ = value;
      }
    }

    /// <summary>Field number for the "land_lv" field.</summary>
    public const int LandLvFieldNumber = 4;
    private int landLv_;
    /// <summary>
    /// 土地等级, 0: 不关心等级, 1-99: 指定等级, 100: 最高等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LandLv {
      get { return landLv_; }
      set {
        landLv_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FilterPosReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FilterPosReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Center != other.Center) return false;
      if (Radius != other.Radius) return false;
      if (OccupyState != other.OccupyState) return false;
      if (LandLv != other.LandLv) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Center != 0) hash ^= Center.GetHashCode();
      if (Radius != 0) hash ^= Radius.GetHashCode();
      if (OccupyState != 0) hash ^= OccupyState.GetHashCode();
      if (LandLv != 0) hash ^= LandLv.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Center != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Center);
      }
      if (Radius != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Radius);
      }
      if (OccupyState != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OccupyState);
      }
      if (LandLv != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LandLv);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Center != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Center);
      }
      if (Radius != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Radius);
      }
      if (OccupyState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OccupyState);
      }
      if (LandLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LandLv);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FilterPosReq other) {
      if (other == null) {
        return;
      }
      if (other.Center != 0) {
        Center = other.Center;
      }
      if (other.Radius != 0) {
        Radius = other.Radius;
      }
      if (other.OccupyState != 0) {
        OccupyState = other.OccupyState;
      }
      if (other.LandLv != 0) {
        LandLv = other.LandLv;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Center = input.ReadInt32();
            break;
          }
          case 16: {
            Radius = input.ReadInt32();
            break;
          }
          case 24: {
            OccupyState = input.ReadInt32();
            break;
          }
          case 32: {
            LandLv = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 判断是否有自己相邻的地
  /// </summary>
  public sealed partial class IsNearbyReq : pb::IMessage<IsNearbyReq> {
    private static readonly pb::MessageParser<IsNearbyReq> _parser = new pb::MessageParser<IsNearbyReq>(() => new IsNearbyReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IsNearbyReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsNearbyReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsNearbyReq(IsNearbyReq other) : this() {
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsNearbyReq Clone() {
      return new IsNearbyReq(this);
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 1;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IsNearbyReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IsNearbyReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IsNearbyReq other) {
      if (other == null) {
        return;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VisionViewReq : pb::IMessage<VisionViewReq> {
    private static readonly pb::MessageParser<VisionViewReq> _parser = new pb::MessageParser<VisionViewReq>(() => new VisionViewReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VisionViewReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VisionViewReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VisionViewReq(VisionViewReq other) : this() {
      fetchGrids_ = other.fetchGrids_.Clone();
      obGrids_ = other.obGrids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VisionViewReq Clone() {
      return new VisionViewReq(this);
    }

    /// <summary>Field number for the "fetch_grids" field.</summary>
    public const int FetchGridsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_fetchGrids_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> fetchGrids_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 需要获取视野的grid pos
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FetchGrids {
      get { return fetchGrids_; }
    }

    /// <summary>Field number for the "ob_grids" field.</summary>
    public const int ObGridsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_obGrids_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> obGrids_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 需要挂载视野的grid pos
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ObGrids {
      get { return obGrids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VisionViewReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VisionViewReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fetchGrids_.Equals(other.fetchGrids_)) return false;
      if(!obGrids_.Equals(other.obGrids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fetchGrids_.GetHashCode();
      hash ^= obGrids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fetchGrids_.WriteTo(output, _repeated_fetchGrids_codec);
      obGrids_.WriteTo(output, _repeated_obGrids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fetchGrids_.CalculateSize(_repeated_fetchGrids_codec);
      size += obGrids_.CalculateSize(_repeated_obGrids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VisionViewReq other) {
      if (other == null) {
        return;
      }
      fetchGrids_.Add(other.fetchGrids_);
      obGrids_.Add(other.obGrids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            fetchGrids_.AddEntriesFrom(input, _repeated_fetchGrids_codec);
            break;
          }
          case 18:
          case 16: {
            obGrids_.AddEntriesFrom(input, _repeated_obGrids_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 强制收税
  /// </summary>
  public sealed partial class ForceCollectTaxesReq : pb::IMessage<ForceCollectTaxesReq> {
    private static readonly pb::MessageParser<ForceCollectTaxesReq> _parser = new pb::MessageParser<ForceCollectTaxesReq>(() => new ForceCollectTaxesReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ForceCollectTaxesReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForceCollectTaxesReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForceCollectTaxesReq(ForceCollectTaxesReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForceCollectTaxesReq Clone() {
      return new ForceCollectTaxesReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ForceCollectTaxesReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ForceCollectTaxesReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ForceCollectTaxesReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 获取所有税收记录
  /// </summary>
  public sealed partial class GetAllTaxReq : pb::IMessage<GetAllTaxReq> {
    private static readonly pb::MessageParser<GetAllTaxReq> _parser = new pb::MessageParser<GetAllTaxReq>(() => new GetAllTaxReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllTaxReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllTaxReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllTaxReq(GetAllTaxReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllTaxReq Clone() {
      return new GetAllTaxReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllTaxReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllTaxReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllTaxReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 获取交易信息
  /// </summary>
  public sealed partial class GetDealInfoReq : pb::IMessage<GetDealInfoReq> {
    private static readonly pb::MessageParser<GetDealInfoReq> _parser = new pb::MessageParser<GetDealInfoReq>(() => new GetDealInfoReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDealInfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDealInfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDealInfoReq(GetDealInfoReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDealInfoReq Clone() {
      return new GetDealInfoReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDealInfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDealInfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDealInfoReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 修改头像
  /// </summary>
  public sealed partial class ChangeAvatarReq : pb::IMessage<ChangeAvatarReq> {
    private static readonly pb::MessageParser<ChangeAvatarReq> _parser = new pb::MessageParser<ChangeAvatarReq>(() => new ChangeAvatarReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeAvatarReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeAvatarReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeAvatarReq(ChangeAvatarReq other) : this() {
      avatarId_ = other.avatarId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeAvatarReq Clone() {
      return new ChangeAvatarReq(this);
    }

    /// <summary>Field number for the "avatar_id" field.</summary>
    public const int AvatarIdFieldNumber = 1;
    private int avatarId_;
    /// <summary>
    /// 头像id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AvatarId {
      get { return avatarId_; }
      set {
        avatarId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeAvatarReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeAvatarReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AvatarId != other.AvatarId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AvatarId != 0) hash ^= AvatarId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AvatarId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AvatarId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AvatarId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeAvatarReq other) {
      if (other == null) {
        return;
      }
      if (other.AvatarId != 0) {
        AvatarId = other.AvatarId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AvatarId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 修改简介
  /// </summary>
  public sealed partial class ChangeIntroReq : pb::IMessage<ChangeIntroReq> {
    private static readonly pb::MessageParser<ChangeIntroReq> _parser = new pb::MessageParser<ChangeIntroReq>(() => new ChangeIntroReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeIntroReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeIntroReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeIntroReq(ChangeIntroReq other) : this() {
      intro_ = other.intro_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeIntroReq Clone() {
      return new ChangeIntroReq(this);
    }

    /// <summary>Field number for the "intro" field.</summary>
    public const int IntroFieldNumber = 1;
    private string intro_ = "";
    /// <summary>
    /// 简介
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Intro {
      get { return intro_; }
      set {
        intro_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeIntroReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeIntroReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Intro != other.Intro) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Intro.Length != 0) hash ^= Intro.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Intro.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Intro);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Intro.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Intro);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeIntroReq other) {
      if (other == null) {
        return;
      }
      if (other.Intro.Length != 0) {
        Intro = other.Intro;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Intro = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 土地
  /// </summary>
  public sealed partial class LandsBasicReq : pb::IMessage<LandsBasicReq> {
    private static readonly pb::MessageParser<LandsBasicReq> _parser = new pb::MessageParser<LandsBasicReq>(() => new LandsBasicReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LandsBasicReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandsBasicReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandsBasicReq(LandsBasicReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandsBasicReq Clone() {
      return new LandsBasicReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LandsBasicReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LandsBasicReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LandsBasicReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 查找联盟
  /// </summary>
  public sealed partial class FindUnionReq : pb::IMessage<FindUnionReq> {
    private static readonly pb::MessageParser<FindUnionReq> _parser = new pb::MessageParser<FindUnionReq>(() => new FindUnionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FindUnionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindUnionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindUnionReq(FindUnionReq other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindUnionReq Clone() {
      return new FindUnionReq(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// 联盟名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FindUnionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FindUnionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FindUnionReq other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 获得联盟信息列表
  /// </summary>
  public sealed partial class GetUnionInfoListReq : pb::IMessage<GetUnionInfoListReq> {
    private static readonly pb::MessageParser<GetUnionInfoListReq> _parser = new pb::MessageParser<GetUnionInfoListReq>(() => new GetUnionInfoListReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUnionInfoListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnionInfoListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnionInfoListReq(GetUnionInfoListReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnionInfoListReq Clone() {
      return new GetUnionInfoListReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUnionInfoListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUnionInfoListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUnionInfoListReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 创建联盟
  /// </summary>
  public sealed partial class CreateUnionReq : pb::IMessage<CreateUnionReq> {
    private static readonly pb::MessageParser<CreateUnionReq> _parser = new pb::MessageParser<CreateUnionReq>(() => new CreateUnionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateUnionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUnionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUnionReq(CreateUnionReq other) : this() {
      name_ = other.name_;
      nickName_ = other.nickName_;
      desc_ = other.desc_;
      Flag = other.flag_ != null ? other.Flag.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUnionReq Clone() {
      return new CreateUnionReq(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// 联盟名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nick_name" field.</summary>
    public const int NickNameFieldNumber = 2;
    private string nickName_ = "";
    /// <summary>
    /// 联盟简称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 3;
    private string desc_ = "";
    /// <summary>
    /// 联盟公告
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 4;
    private global::Cspb.UnionFlag flag_;
    /// <summary>
    /// 联盟旗帜
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cspb.UnionFlag Flag {
      get { return flag_; }
      set {
        flag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateUnionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateUnionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (NickName != other.NickName) return false;
      if (Desc != other.Desc) return false;
      if (!object.Equals(Flag, other.Flag)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (flag_ != null) hash ^= Flag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NickName);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (flag_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (flag_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Flag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateUnionReq other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.flag_ != null) {
        if (flag_ == null) {
          flag_ = new global::Cspb.UnionFlag();
        }
        Flag.MergeFrom(other.Flag);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            NickName = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 34: {
            if (flag_ == null) {
              flag_ = new global::Cspb.UnionFlag();
            }
            input.ReadMessage(flag_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 申请加入联盟
  /// </summary>
  public sealed partial class ApplyUnionReq : pb::IMessage<ApplyUnionReq> {
    private static readonly pb::MessageParser<ApplyUnionReq> _parser = new pb::MessageParser<ApplyUnionReq>(() => new ApplyUnionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplyUnionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyUnionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyUnionReq(ApplyUnionReq other) : this() {
      unionId_ = other.unionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyUnionReq Clone() {
      return new ApplyUnionReq(this);
    }

    /// <summary>Field number for the "union_id" field.</summary>
    public const int UnionIdFieldNumber = 1;
    private long unionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnionId {
      get { return unionId_; }
      set {
        unionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplyUnionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplyUnionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnionId != other.UnionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnionId != 0L) hash ^= UnionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnionId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UnionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnionId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplyUnionReq other) {
      if (other == null) {
        return;
      }
      if (other.UnionId != 0L) {
        UnionId = other.UnionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnionId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApplyUnionByNameReq : pb::IMessage<ApplyUnionByNameReq> {
    private static readonly pb::MessageParser<ApplyUnionByNameReq> _parser = new pb::MessageParser<ApplyUnionByNameReq>(() => new ApplyUnionByNameReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplyUnionByNameReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyUnionByNameReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyUnionByNameReq(ApplyUnionByNameReq other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyUnionByNameReq Clone() {
      return new ApplyUnionByNameReq(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplyUnionByNameReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplyUnionByNameReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplyUnionByNameReq other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 直接加入联盟
  /// </summary>
  public sealed partial class JoinUnionReq : pb::IMessage<JoinUnionReq> {
    private static readonly pb::MessageParser<JoinUnionReq> _parser = new pb::MessageParser<JoinUnionReq>(() => new JoinUnionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinUnionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinUnionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinUnionReq(JoinUnionReq other) : this() {
      unionId_ = other.unionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinUnionReq Clone() {
      return new JoinUnionReq(this);
    }

    /// <summary>Field number for the "union_id" field.</summary>
    public const int UnionIdFieldNumber = 1;
    private long unionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnionId {
      get { return unionId_; }
      set {
        unionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinUnionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinUnionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnionId != other.UnionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnionId != 0L) hash ^= UnionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnionId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UnionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnionId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinUnionReq other) {
      if (other == null) {
        return;
      }
      if (other.UnionId != 0L) {
        UnionId = other.UnionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnionId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinUnionByNameReq : pb::IMessage<JoinUnionByNameReq> {
    private static readonly pb::MessageParser<JoinUnionByNameReq> _parser = new pb::MessageParser<JoinUnionByNameReq>(() => new JoinUnionByNameReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinUnionByNameReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinUnionByNameReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinUnionByNameReq(JoinUnionByNameReq other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinUnionByNameReq Clone() {
      return new JoinUnionByNameReq(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinUnionByNameReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinUnionByNameReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinUnionByNameReq other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 取消申请
  /// </summary>
  public sealed partial class CancelApplyUnionReq : pb::IMessage<CancelApplyUnionReq> {
    private static readonly pb::MessageParser<CancelApplyUnionReq> _parser = new pb::MessageParser<CancelApplyUnionReq>(() => new CancelApplyUnionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelApplyUnionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelApplyUnionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelApplyUnionReq(CancelApplyUnionReq other) : this() {
      unionId_ = other.unionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelApplyUnionReq Clone() {
      return new CancelApplyUnionReq(this);
    }

    /// <summary>Field number for the "union_id" field.</summary>
    public const int UnionIdFieldNumber = 1;
    private long unionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnionId {
      get { return unionId_; }
      set {
        unionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelApplyUnionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelApplyUnionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnionId != other.UnionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnionId != 0L) hash ^= UnionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnionId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UnionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnionId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelApplyUnionReq other) {
      if (other == null) {
        return;
      }
      if (other.UnionId != 0L) {
        UnionId = other.UnionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnionId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 联盟主界面信息
  /// </summary>
  public sealed partial class GetUnionInfoReq : pb::IMessage<GetUnionInfoReq> {
    private static readonly pb::MessageParser<GetUnionInfoReq> _parser = new pb::MessageParser<GetUnionInfoReq>(() => new GetUnionInfoReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUnionInfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnionInfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnionInfoReq(GetUnionInfoReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnionInfoReq Clone() {
      return new GetUnionInfoReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUnionInfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUnionInfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUnionInfoReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 解散联盟
  /// </summary>
  public sealed partial class DissolveUnionReq : pb::IMessage<DissolveUnionReq> {
    private static readonly pb::MessageParser<DissolveUnionReq> _parser = new pb::MessageParser<DissolveUnionReq>(() => new DissolveUnionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DissolveUnionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DissolveUnionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DissolveUnionReq(DissolveUnionReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DissolveUnionReq Clone() {
      return new DissolveUnionReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DissolveUnionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DissolveUnionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DissolveUnionReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 禅让盟主
  /// </summary>
  public sealed partial class DemiseUnionLeaderReq : pb::IMessage<DemiseUnionLeaderReq> {
    private static readonly pb::MessageParser<DemiseUnionLeaderReq> _parser = new pb::MessageParser<DemiseUnionLeaderReq>(() => new DemiseUnionLeaderReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DemiseUnionLeaderReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemiseUnionLeaderReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemiseUnionLeaderReq(DemiseUnionLeaderReq other) : this() {
      targetPlayerId_ = other.targetPlayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DemiseUnionLeaderReq Clone() {
      return new DemiseUnionLeaderReq(this);
    }

    /// <summary>Field number for the "target_player_id" field.</summary>
    public const int TargetPlayerIdFieldNumber = 1;
    private long targetPlayerId_;
    /// <summary>
    /// 禅让给的成员的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TargetPlayerId {
      get { return targetPlayerId_; }
      set {
        targetPlayerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DemiseUnionLeaderReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DemiseUnionLeaderReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetPlayerId != other.TargetPlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetPlayerId != 0L) hash ^= TargetPlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TargetPlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TargetPlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetPlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetPlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DemiseUnionLeaderReq other) {
      if (other == null) {
        return;
      }
      if (other.TargetPlayerId != 0L) {
        TargetPlayerId = other.TargetPlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetPlayerId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 取消禅让
  /// </summary>
  public sealed partial class CancelDemiseReq : pb::IMessage<CancelDemiseReq> {
    private static readonly pb::MessageParser<CancelDemiseReq> _parser = new pb::MessageParser<CancelDemiseReq>(() => new CancelDemiseReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelDemiseReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelDemiseReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelDemiseReq(CancelDemiseReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelDemiseReq Clone() {
      return new CancelDemiseReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelDemiseReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelDemiseReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelDemiseReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 审批是否同意申请加入联盟
  /// </summary>
  public sealed partial class ApproveApplyUnionReq : pb::IMessage<ApproveApplyUnionReq> {
    private static readonly pb::MessageParser<ApproveApplyUnionReq> _parser = new pb::MessageParser<ApproveApplyUnionReq>(() => new ApproveApplyUnionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApproveApplyUnionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApproveApplyUnionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApproveApplyUnionReq(ApproveApplyUnionReq other) : this() {
      applyPlayerId_ = other.applyPlayerId_;
      isAgree_ = other.isAgree_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApproveApplyUnionReq Clone() {
      return new ApproveApplyUnionReq(this);
    }

    /// <summary>Field number for the "apply_player_id" field.</summary>
    public const int ApplyPlayerIdFieldNumber = 1;
    private long applyPlayerId_;
    /// <summary>
    /// 申请玩家的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ApplyPlayerId {
      get { return applyPlayerId_; }
      set {
        applyPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "is_agree" field.</summary>
    public const int IsAgreeFieldNumber = 2;
    private bool isAgree_;
    /// <summary>
    /// 是否同意申请
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAgree {
      get { return isAgree_; }
      set {
        isAgree_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApproveApplyUnionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApproveApplyUnionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplyPlayerId != other.ApplyPlayerId) return false;
      if (IsAgree != other.IsAgree) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplyPlayerId != 0L) hash ^= ApplyPlayerId.GetHashCode();
      if (IsAgree != false) hash ^= IsAgree.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApplyPlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ApplyPlayerId);
      }
      if (IsAgree != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAgree);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApplyPlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ApplyPlayerId);
      }
      if (IsAgree != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApproveApplyUnionReq other) {
      if (other == null) {
        return;
      }
      if (other.ApplyPlayerId != 0L) {
        ApplyPlayerId = other.ApplyPlayerId;
      }
      if (other.IsAgree != false) {
        IsAgree = other.IsAgree;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApplyPlayerId = input.ReadInt64();
            break;
          }
          case 16: {
            IsAgree = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 移除联盟成员
  /// </summary>
  public sealed partial class RemoveUnionMemberReq : pb::IMessage<RemoveUnionMemberReq> {
    private static readonly pb::MessageParser<RemoveUnionMemberReq> _parser = new pb::MessageParser<RemoveUnionMemberReq>(() => new RemoveUnionMemberReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveUnionMemberReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUnionMemberReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUnionMemberReq(RemoveUnionMemberReq other) : this() {
      targetPlayerId_ = other.targetPlayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUnionMemberReq Clone() {
      return new RemoveUnionMemberReq(this);
    }

    /// <summary>Field number for the "target_player_id" field.</summary>
    public const int TargetPlayerIdFieldNumber = 1;
    private long targetPlayerId_;
    /// <summary>
    /// 移除成员的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TargetPlayerId {
      get { return targetPlayerId_; }
      set {
        targetPlayerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveUnionMemberReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveUnionMemberReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetPlayerId != other.TargetPlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetPlayerId != 0L) hash ^= TargetPlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TargetPlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TargetPlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetPlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetPlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveUnionMemberReq other) {
      if (other == null) {
        return;
      }
      if (other.TargetPlayerId != 0L) {
        TargetPlayerId = other.TargetPlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetPlayerId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 任命联盟成员职位
  /// </summary>
  public sealed partial class AppointUnionMemberTitleReq : pb::IMessage<AppointUnionMemberTitleReq> {
    private static readonly pb::MessageParser<AppointUnionMemberTitleReq> _parser = new pb::MessageParser<AppointUnionMemberTitleReq>(() => new AppointUnionMemberTitleReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppointUnionMemberTitleReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppointUnionMemberTitleReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppointUnionMemberTitleReq(AppointUnionMemberTitleReq other) : this() {
      targetPlayerId_ = other.targetPlayerId_;
      titleId_ = other.titleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppointUnionMemberTitleReq Clone() {
      return new AppointUnionMemberTitleReq(this);
    }

    /// <summary>Field number for the "target_player_id" field.</summary>
    public const int TargetPlayerIdFieldNumber = 1;
    private long targetPlayerId_;
    /// <summary>
    /// 被任命成员的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TargetPlayerId {
      get { return targetPlayerId_; }
      set {
        targetPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "title_id" field.</summary>
    public const int TitleIdFieldNumber = 2;
    private int titleId_;
    /// <summary>
    /// 职位id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TitleId {
      get { return titleId_; }
      set {
        titleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppointUnionMemberTitleReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppointUnionMemberTitleReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetPlayerId != other.TargetPlayerId) return false;
      if (TitleId != other.TitleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetPlayerId != 0L) hash ^= TargetPlayerId.GetHashCode();
      if (TitleId != 0) hash ^= TitleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TargetPlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TargetPlayerId);
      }
      if (TitleId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TitleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetPlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetPlayerId);
      }
      if (TitleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TitleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppointUnionMemberTitleReq other) {
      if (other == null) {
        return;
      }
      if (other.TargetPlayerId != 0L) {
        TargetPlayerId = other.TargetPlayerId;
      }
      if (other.TitleId != 0) {
        TitleId = other.TitleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetPlayerId = input.ReadInt64();
            break;
          }
          case 16: {
            TitleId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 放弃联盟职位
  /// </summary>
  public sealed partial class GiveupUnionTitleReq : pb::IMessage<GiveupUnionTitleReq> {
    private static readonly pb::MessageParser<GiveupUnionTitleReq> _parser = new pb::MessageParser<GiveupUnionTitleReq>(() => new GiveupUnionTitleReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GiveupUnionTitleReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiveupUnionTitleReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiveupUnionTitleReq(GiveupUnionTitleReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiveupUnionTitleReq Clone() {
      return new GiveupUnionTitleReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GiveupUnionTitleReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GiveupUnionTitleReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GiveupUnionTitleReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 退出联盟
  /// </summary>
  public sealed partial class QuitUnionReq : pb::IMessage<QuitUnionReq> {
    private static readonly pb::MessageParser<QuitUnionReq> _parser = new pb::MessageParser<QuitUnionReq>(() => new QuitUnionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuitUnionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuitUnionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuitUnionReq(QuitUnionReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuitUnionReq Clone() {
      return new QuitUnionReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuitUnionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuitUnionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuitUnionReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 邀请加入联盟
  /// </summary>
  public sealed partial class InviteJoinUnionReq : pb::IMessage<InviteJoinUnionReq> {
    private static readonly pb::MessageParser<InviteJoinUnionReq> _parser = new pb::MessageParser<InviteJoinUnionReq>(() => new InviteJoinUnionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteJoinUnionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteJoinUnionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteJoinUnionReq(InviteJoinUnionReq other) : this() {
      invitePlayerId_ = other.invitePlayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteJoinUnionReq Clone() {
      return new InviteJoinUnionReq(this);
    }

    /// <summary>Field number for the "Invite_player_id" field.</summary>
    public const int InvitePlayerIdFieldNumber = 1;
    private long invitePlayerId_;
    /// <summary>
    /// 被邀请玩家的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InvitePlayerId {
      get { return invitePlayerId_; }
      set {
        invitePlayerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteJoinUnionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteJoinUnionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InvitePlayerId != other.InvitePlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InvitePlayerId != 0L) hash ^= InvitePlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InvitePlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(InvitePlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InvitePlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InvitePlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteJoinUnionReq other) {
      if (other == null) {
        return;
      }
      if (other.InvitePlayerId != 0L) {
        InvitePlayerId = other.InvitePlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InvitePlayerId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteJoinUnionByNameReq : pb::IMessage<InviteJoinUnionByNameReq> {
    private static readonly pb::MessageParser<InviteJoinUnionByNameReq> _parser = new pb::MessageParser<InviteJoinUnionByNameReq>(() => new InviteJoinUnionByNameReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteJoinUnionByNameReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteJoinUnionByNameReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteJoinUnionByNameReq(InviteJoinUnionByNameReq other) : this() {
      playerName_ = other.playerName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteJoinUnionByNameReq Clone() {
      return new InviteJoinUnionByNameReq(this);
    }

    /// <summary>Field number for the "player_name" field.</summary>
    public const int PlayerNameFieldNumber = 1;
    private string playerName_ = "";
    /// <summary>
    /// 被邀请玩家的name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteJoinUnionByNameReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteJoinUnionByNameReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerName != other.PlayerName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteJoinUnionByNameReq other) {
      if (other == null) {
        return;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 处理联盟邀请
  /// </summary>
  public sealed partial class DealUnionInviteReq : pb::IMessage<DealUnionInviteReq> {
    private static readonly pb::MessageParser<DealUnionInviteReq> _parser = new pb::MessageParser<DealUnionInviteReq>(() => new DealUnionInviteReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DealUnionInviteReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealUnionInviteReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealUnionInviteReq(DealUnionInviteReq other) : this() {
      unionId_ = other.unionId_;
      isAgree_ = other.isAgree_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealUnionInviteReq Clone() {
      return new DealUnionInviteReq(this);
    }

    /// <summary>Field number for the "union_id" field.</summary>
    public const int UnionIdFieldNumber = 1;
    private long unionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnionId {
      get { return unionId_; }
      set {
        unionId_ = value;
      }
    }

    /// <summary>Field number for the "is_agree" field.</summary>
    public const int IsAgreeFieldNumber = 2;
    private bool isAgree_;
    /// <summary>
    /// 是否接受邀请
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAgree {
      get { return isAgree_; }
      set {
        isAgree_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DealUnionInviteReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DealUnionInviteReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnionId != other.UnionId) return false;
      if (IsAgree != other.IsAgree) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnionId != 0L) hash ^= UnionId.GetHashCode();
      if (IsAgree != false) hash ^= IsAgree.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnionId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UnionId);
      }
      if (IsAgree != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAgree);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnionId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnionId);
      }
      if (IsAgree != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DealUnionInviteReq other) {
      if (other == null) {
        return;
      }
      if (other.UnionId != 0L) {
        UnionId = other.UnionId;
      }
      if (other.IsAgree != false) {
        IsAgree = other.IsAgree;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnionId = input.ReadInt64();
            break;
          }
          case 16: {
            IsAgree = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 设置联盟加入条件
  /// </summary>
  public sealed partial class SetUnionJoinLimitReq : pb::IMessage<SetUnionJoinLimitReq> {
    private static readonly pb::MessageParser<SetUnionJoinLimitReq> _parser = new pb::MessageParser<SetUnionJoinLimitReq>(() => new SetUnionJoinLimitReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetUnionJoinLimitReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUnionJoinLimitReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUnionJoinLimitReq(SetUnionJoinLimitReq other) : this() {
      limitType_ = other.limitType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUnionJoinLimitReq Clone() {
      return new SetUnionJoinLimitReq(this);
    }

    /// <summary>Field number for the "limit_type" field.</summary>
    public const int LimitTypeFieldNumber = 1;
    private int limitType_;
    /// <summary>
    /// 条件类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LimitType {
      get { return limitType_; }
      set {
        limitType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetUnionJoinLimitReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetUnionJoinLimitReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LimitType != other.LimitType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LimitType != 0) hash ^= LimitType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LimitType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LimitType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LimitType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LimitType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetUnionJoinLimitReq other) {
      if (other == null) {
        return;
      }
      if (other.LimitType != 0) {
        LimitType = other.LimitType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LimitType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 设置联盟公告
  /// </summary>
  public sealed partial class SetUnionDescReq : pb::IMessage<SetUnionDescReq> {
    private static readonly pb::MessageParser<SetUnionDescReq> _parser = new pb::MessageParser<SetUnionDescReq>(() => new SetUnionDescReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetUnionDescReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUnionDescReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUnionDescReq(SetUnionDescReq other) : this() {
      desc_ = other.desc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUnionDescReq Clone() {
      return new SetUnionDescReq(this);
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 1;
    private string desc_ = "";
    /// <summary>
    /// 联盟公告
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetUnionDescReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetUnionDescReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Desc != other.Desc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Desc.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Desc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetUnionDescReq other) {
      if (other == null) {
        return;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Desc = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 联盟捐赠
  /// </summary>
  public sealed partial class DonateToUnionReq : pb::IMessage<DonateToUnionReq> {
    private static readonly pb::MessageParser<DonateToUnionReq> _parser = new pb::MessageParser<DonateToUnionReq>(() => new DonateToUnionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DonateToUnionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DonateToUnionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DonateToUnionReq(DonateToUnionReq other) : this() {
      resources_ = other.resources_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DonateToUnionReq Clone() {
      return new DonateToUnionReq(this);
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Cspb.Item> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(10, global::Cspb.Item.Parser);
    private readonly pbc::RepeatedField<global::Cspb.Item> resources_ = new pbc::RepeatedField<global::Cspb.Item>();
    /// <summary>
    /// 贡献的资源
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Cspb.Item> Resources {
      get { return resources_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DonateToUnionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DonateToUnionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!resources_.Equals(other.resources_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= resources_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      resources_.WriteTo(output, _repeated_resources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DonateToUnionReq other) {
      if (other == null) {
        return;
      }
      resources_.Add(other.resources_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 设置联盟外交关系
  /// </summary>
  public sealed partial class SetUnionRelationReq : pb::IMessage<SetUnionRelationReq> {
    private static readonly pb::MessageParser<SetUnionRelationReq> _parser = new pb::MessageParser<SetUnionRelationReq>(() => new SetUnionRelationReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetUnionRelationReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUnionRelationReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUnionRelationReq(SetUnionRelationReq other) : this() {
      unionId_ = other.unionId_;
      relation_ = other.relation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUnionRelationReq Clone() {
      return new SetUnionRelationReq(this);
    }

    /// <summary>Field number for the "union_id" field.</summary>
    public const int UnionIdFieldNumber = 1;
    private long unionId_;
    /// <summary>
    /// 目标联盟id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnionId {
      get { return unionId_; }
      set {
        unionId_ = value;
      }
    }

    /// <summary>Field number for the "relation" field.</summary>
    public const int RelationFieldNumber = 2;
    private int relation_;
    /// <summary>
    /// 关系，对应UNION_RELATION_TYPE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Relation {
      get { return relation_; }
      set {
        relation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetUnionRelationReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetUnionRelationReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnionId != other.UnionId) return false;
      if (Relation != other.Relation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnionId != 0L) hash ^= UnionId.GetHashCode();
      if (Relation != 0) hash ^= Relation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnionId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UnionId);
      }
      if (Relation != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Relation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnionId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnionId);
      }
      if (Relation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Relation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetUnionRelationReq other) {
      if (other == null) {
        return;
      }
      if (other.UnionId != 0L) {
        UnionId = other.UnionId;
      }
      if (other.Relation != 0) {
        Relation = other.Relation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnionId = input.ReadInt64();
            break;
          }
          case 16: {
            Relation = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 设置联盟标记
  /// </summary>
  public sealed partial class AddUnionMarkReq : pb::IMessage<AddUnionMarkReq> {
    private static readonly pb::MessageParser<AddUnionMarkReq> _parser = new pb::MessageParser<AddUnionMarkReq>(() => new AddUnionMarkReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddUnionMarkReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUnionMarkReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUnionMarkReq(AddUnionMarkReq other) : this() {
      pos_ = other.pos_;
      name_ = other.name_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUnionMarkReq Clone() {
      return new AddUnionMarkReq(this);
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 1;
    private int pos_;
    /// <summary>
    /// 标记位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 标记名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 3;
    private string content_ = "";
    /// <summary>
    /// 标记内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddUnionMarkReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddUnionMarkReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      if (Name != other.Name) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddUnionMarkReq other) {
      if (other == null) {
        return;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 取消联盟标记
  /// </summary>
  public sealed partial class DelUnionMarkReq : pb::IMessage<DelUnionMarkReq> {
    private static readonly pb::MessageParser<DelUnionMarkReq> _parser = new pb::MessageParser<DelUnionMarkReq>(() => new DelUnionMarkReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelUnionMarkReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelUnionMarkReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelUnionMarkReq(DelUnionMarkReq other) : this() {
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelUnionMarkReq Clone() {
      return new DelUnionMarkReq(this);
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 1;
    private int pos_;
    /// <summary>
    /// 标记位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelUnionMarkReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelUnionMarkReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pos != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelUnionMarkReq other) {
      if (other == null) {
        return;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 交换两个联盟官员的职位
  /// </summary>
  public sealed partial class SwapUnionTitleReq : pb::IMessage<SwapUnionTitleReq> {
    private static readonly pb::MessageParser<SwapUnionTitleReq> _parser = new pb::MessageParser<SwapUnionTitleReq>(() => new SwapUnionTitleReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SwapUnionTitleReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[112]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SwapUnionTitleReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SwapUnionTitleReq(SwapUnionTitleReq other) : this() {
      srcPlayerId_ = other.srcPlayerId_;
      targetPlayerId_ = other.targetPlayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SwapUnionTitleReq Clone() {
      return new SwapUnionTitleReq(this);
    }

    /// <summary>Field number for the "src_player_id" field.</summary>
    public const int SrcPlayerIdFieldNumber = 1;
    private long srcPlayerId_;
    /// <summary>
    /// 成员A的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SrcPlayerId {
      get { return srcPlayerId_; }
      set {
        srcPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "target_player_id" field.</summary>
    public const int TargetPlayerIdFieldNumber = 2;
    private long targetPlayerId_;
    /// <summary>
    /// 成员B的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TargetPlayerId {
      get { return targetPlayerId_; }
      set {
        targetPlayerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SwapUnionTitleReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SwapUnionTitleReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SrcPlayerId != other.SrcPlayerId) return false;
      if (TargetPlayerId != other.TargetPlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SrcPlayerId != 0L) hash ^= SrcPlayerId.GetHashCode();
      if (TargetPlayerId != 0L) hash ^= TargetPlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SrcPlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(SrcPlayerId);
      }
      if (TargetPlayerId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TargetPlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SrcPlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SrcPlayerId);
      }
      if (TargetPlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetPlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SwapUnionTitleReq other) {
      if (other == null) {
        return;
      }
      if (other.SrcPlayerId != 0L) {
        SrcPlayerId = other.SrcPlayerId;
      }
      if (other.TargetPlayerId != 0L) {
        TargetPlayerId = other.TargetPlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SrcPlayerId = input.ReadInt64();
            break;
          }
          case 16: {
            TargetPlayerId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求玩家所有城池的部队信息, 包括要塞
  /// </summary>
  public sealed partial class MCityListReq : pb::IMessage<MCityListReq> {
    private static readonly pb::MessageParser<MCityListReq> _parser = new pb::MessageParser<MCityListReq>(() => new MCityListReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MCityListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[113]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MCityListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MCityListReq(MCityListReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MCityListReq Clone() {
      return new MCityListReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MCityListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MCityListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MCityListReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 请求城池的城建信息
  /// </summary>
  public sealed partial class PCityReq : pb::IMessage<PCityReq> {
    private static readonly pb::MessageParser<PCityReq> _parser = new pb::MessageParser<PCityReq>(() => new PCityReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PCityReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[114]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PCityReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PCityReq(PCityReq other) : this() {
      cityId_ = other.cityId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PCityReq Clone() {
      return new PCityReq(this);
    }

    /// <summary>Field number for the "city_id" field.</summary>
    public const int CityIdFieldNumber = 1;
    private long cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PCityReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PCityReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CityId != other.CityId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CityId != 0L) hash ^= CityId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CityId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CityId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CityId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CityId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PCityReq other) {
      if (other == null) {
        return;
      }
      if (other.CityId != 0L) {
        CityId = other.CityId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CityId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 沦陷玩家向上级同盟上缴反叛资源
  /// </summary>
  public sealed partial class FallenPayRevoltResReq : pb::IMessage<FallenPayRevoltResReq> {
    private static readonly pb::MessageParser<FallenPayRevoltResReq> _parser = new pb::MessageParser<FallenPayRevoltResReq>(() => new FallenPayRevoltResReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FallenPayRevoltResReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[115]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FallenPayRevoltResReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FallenPayRevoltResReq(FallenPayRevoltResReq other) : this() {
      resources_ = other.resources_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FallenPayRevoltResReq Clone() {
      return new FallenPayRevoltResReq(this);
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Cspb.Item> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(10, global::Cspb.Item.Parser);
    private readonly pbc::RepeatedField<global::Cspb.Item> resources_ = new pbc::RepeatedField<global::Cspb.Item>();
    /// <summary>
    /// 上缴的资源
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Cspb.Item> Resources {
      get { return resources_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FallenPayRevoltResReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FallenPayRevoltResReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!resources_.Equals(other.resources_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= resources_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      resources_.WriteTo(output, _repeated_resources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FallenPayRevoltResReq other) {
      if (other == null) {
        return;
      }
      resources_.Add(other.resources_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestUnionReq : pb::IMessage<TestUnionReq> {
    private static readonly pb::MessageParser<TestUnionReq> _parser = new pb::MessageParser<TestUnionReq>(() => new TestUnionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestUnionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[116]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestUnionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestUnionReq(TestUnionReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestUnionReq Clone() {
      return new TestUnionReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestUnionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestUnionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestUnionReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 拉取战役列表
  /// </summary>
  public sealed partial class ConflictListReq : pb::IMessage<ConflictListReq> {
    private static readonly pb::MessageParser<ConflictListReq> _parser = new pb::MessageParser<ConflictListReq>(() => new ConflictListReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConflictListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[117]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConflictListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConflictListReq(ConflictListReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConflictListReq Clone() {
      return new ConflictListReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConflictListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConflictListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConflictListReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 拉取所有npc城池的简要信息
  /// </summary>
  public sealed partial class NCityListReq : pb::IMessage<NCityListReq> {
    private static readonly pb::MessageParser<NCityListReq> _parser = new pb::MessageParser<NCityListReq>(() => new NCityListReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NCityListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[118]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NCityListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NCityListReq(NCityListReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NCityListReq Clone() {
      return new NCityListReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NCityListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NCityListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NCityListReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 拉取已经设置的推送事件类型
  /// </summary>
  public sealed partial class PushEventListReq : pb::IMessage<PushEventListReq> {
    private static readonly pb::MessageParser<PushEventListReq> _parser = new pb::MessageParser<PushEventListReq>(() => new PushEventListReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PushEventListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[119]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushEventListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushEventListReq(PushEventListReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushEventListReq Clone() {
      return new PushEventListReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PushEventListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PushEventListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PushEventListReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 更新推送事件类型
  /// </summary>
  public sealed partial class UpdatePushEventsReq : pb::IMessage<UpdatePushEventsReq> {
    private static readonly pb::MessageParser<UpdatePushEventsReq> _parser = new pb::MessageParser<UpdatePushEventsReq>(() => new UpdatePushEventsReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdatePushEventsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[120]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePushEventsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePushEventsReq(UpdatePushEventsReq other) : this() {
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePushEventsReq Clone() {
      return new UpdatePushEventsReq(this);
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_events_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> events_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdatePushEventsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdatePushEventsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdatePushEventsReq other) {
      if (other == null) {
        return;
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 查看玩家信息
  /// </summary>
  public sealed partial class PlayerInfoReq : pb::IMessage<PlayerInfoReq> {
    private static readonly pb::MessageParser<PlayerInfoReq> _parser = new pb::MessageParser<PlayerInfoReq>(() => new PlayerInfoReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerInfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[121]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfoReq(PlayerInfoReq other) : this() {
      targetPlayerId_ = other.targetPlayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfoReq Clone() {
      return new PlayerInfoReq(this);
    }

    /// <summary>Field number for the "target_player_id" field.</summary>
    public const int TargetPlayerIdFieldNumber = 1;
    private long targetPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TargetPlayerId {
      get { return targetPlayerId_; }
      set {
        targetPlayerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerInfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetPlayerId != other.TargetPlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetPlayerId != 0L) hash ^= TargetPlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TargetPlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TargetPlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetPlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetPlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerInfoReq other) {
      if (other == null) {
        return;
      }
      if (other.TargetPlayerId != 0L) {
        TargetPlayerId = other.TargetPlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetPlayerId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求指定玩家的聊天账号
  /// </summary>
  public sealed partial class PlayerChatAccountReq : pb::IMessage<PlayerChatAccountReq> {
    private static readonly pb::MessageParser<PlayerChatAccountReq> _parser = new pb::MessageParser<PlayerChatAccountReq>(() => new PlayerChatAccountReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerChatAccountReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[122]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerChatAccountReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerChatAccountReq(PlayerChatAccountReq other) : this() {
      targetPlayerId_ = other.targetPlayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerChatAccountReq Clone() {
      return new PlayerChatAccountReq(this);
    }

    /// <summary>Field number for the "target_player_id" field.</summary>
    public const int TargetPlayerIdFieldNumber = 1;
    private long targetPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TargetPlayerId {
      get { return targetPlayerId_; }
      set {
        targetPlayerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerChatAccountReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerChatAccountReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetPlayerId != other.TargetPlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetPlayerId != 0L) hash ^= TargetPlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TargetPlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TargetPlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetPlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetPlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerChatAccountReq other) {
      if (other == null) {
        return;
      }
      if (other.TargetPlayerId != 0L) {
        TargetPlayerId = other.TargetPlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetPlayerId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求当前演武进度
  /// </summary>
  public sealed partial class DrillReq : pb::IMessage<DrillReq> {
    private static readonly pb::MessageParser<DrillReq> _parser = new pb::MessageParser<DrillReq>(() => new DrillReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DrillReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[123]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillReq(DrillReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillReq Clone() {
      return new DrillReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DrillReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DrillReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DrillReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 请求演武关卡数据
  /// 如果关卡没有开启，尝试开启关卡；开启成功，发送关卡数据; 不成功，发送错误信息
  /// </summary>
  public sealed partial class DrillIDReq : pb::IMessage<DrillIDReq> {
    private static readonly pb::MessageParser<DrillIDReq> _parser = new pb::MessageParser<DrillIDReq>(() => new DrillIDReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DrillIDReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[124]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillIDReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillIDReq(DrillIDReq other) : this() {
      drillId_ = other.drillId_;
      isReset_ = other.isReset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillIDReq Clone() {
      return new DrillIDReq(this);
    }

    /// <summary>Field number for the "drill_id" field.</summary>
    public const int DrillIdFieldNumber = 1;
    private int drillId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DrillId {
      get { return drillId_; }
      set {
        drillId_ = value;
      }
    }

    /// <summary>Field number for the "is_reset" field.</summary>
    public const int IsResetFieldNumber = 2;
    private bool isReset_;
    /// <summary>
    /// 仅对日常关卡有效，true 表示放弃当前关卡，重新打开新关卡；false 不操作
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsReset {
      get { return isReset_; }
      set {
        isReset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DrillIDReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DrillIDReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DrillId != other.DrillId) return false;
      if (IsReset != other.IsReset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DrillId != 0) hash ^= DrillId.GetHashCode();
      if (IsReset != false) hash ^= IsReset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DrillId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DrillId);
      }
      if (IsReset != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsReset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DrillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DrillId);
      }
      if (IsReset != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DrillIDReq other) {
      if (other == null) {
        return;
      }
      if (other.DrillId != 0) {
        DrillId = other.DrillId;
      }
      if (other.IsReset != false) {
        IsReset = other.IsReset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DrillId = input.ReadInt32();
            break;
          }
          case 16: {
            IsReset = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 攻击关卡土地
  /// </summary>
  public sealed partial class DrillAttackTileReq : pb::IMessage<DrillAttackTileReq> {
    private static readonly pb::MessageParser<DrillAttackTileReq> _parser = new pb::MessageParser<DrillAttackTileReq>(() => new DrillAttackTileReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DrillAttackTileReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[125]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillAttackTileReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillAttackTileReq(DrillAttackTileReq other) : this() {
      drillId_ = other.drillId_;
      tilePos_ = other.tilePos_;
      heros_ = other.heros_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillAttackTileReq Clone() {
      return new DrillAttackTileReq(this);
    }

    /// <summary>Field number for the "drill_id" field.</summary>
    public const int DrillIdFieldNumber = 1;
    private int drillId_;
    /// <summary>
    /// 关卡ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DrillId {
      get { return drillId_; }
      set {
        drillId_ = value;
      }
    }

    /// <summary>Field number for the "tile_pos" field.</summary>
    public const int TilePosFieldNumber = 2;
    private int tilePos_;
    /// <summary>
    /// 攻击的土地坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TilePos {
      get { return tilePos_; }
      set {
        tilePos_ = value;
      }
    }

    /// <summary>Field number for the "heros" field.</summary>
    public const int HerosFieldNumber = 3;
    private static readonly pb::FieldCodec<long> _repeated_heros_codec
        = pb::FieldCodec.ForInt64(26);
    private readonly pbc::RepeatedField<long> heros_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 英雄排序[大营, 中军, 前锋]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Heros {
      get { return heros_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DrillAttackTileReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DrillAttackTileReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DrillId != other.DrillId) return false;
      if (TilePos != other.TilePos) return false;
      if(!heros_.Equals(other.heros_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DrillId != 0) hash ^= DrillId.GetHashCode();
      if (TilePos != 0) hash ^= TilePos.GetHashCode();
      hash ^= heros_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DrillId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DrillId);
      }
      if (TilePos != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TilePos);
      }
      heros_.WriteTo(output, _repeated_heros_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DrillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DrillId);
      }
      if (TilePos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TilePos);
      }
      size += heros_.CalculateSize(_repeated_heros_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DrillAttackTileReq other) {
      if (other == null) {
        return;
      }
      if (other.DrillId != 0) {
        DrillId = other.DrillId;
      }
      if (other.TilePos != 0) {
        TilePos = other.TilePos;
      }
      heros_.Add(other.heros_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DrillId = input.ReadInt32();
            break;
          }
          case 16: {
            TilePos = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            heros_.AddEntriesFrom(input, _repeated_heros_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 跳过（或取消跳过）演武动画操作
  /// </summary>
  public sealed partial class DrillSkipAnimationReq : pb::IMessage<DrillSkipAnimationReq> {
    private static readonly pb::MessageParser<DrillSkipAnimationReq> _parser = new pb::MessageParser<DrillSkipAnimationReq>(() => new DrillSkipAnimationReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DrillSkipAnimationReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[126]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillSkipAnimationReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillSkipAnimationReq(DrillSkipAnimationReq other) : this() {
      isSkip_ = other.isSkip_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillSkipAnimationReq Clone() {
      return new DrillSkipAnimationReq(this);
    }

    /// <summary>Field number for the "is_skip" field.</summary>
    public const int IsSkipFieldNumber = 1;
    private bool isSkip_;
    /// <summary>
    /// 是否跳过演武动画
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSkip {
      get { return isSkip_; }
      set {
        isSkip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DrillSkipAnimationReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DrillSkipAnimationReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSkip != other.IsSkip) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSkip != false) hash ^= IsSkip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSkip != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsSkip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSkip != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DrillSkipAnimationReq other) {
      if (other == null) {
        return;
      }
      if (other.IsSkip != false) {
        IsSkip = other.IsSkip;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSkip = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 日常演武统计数据
  /// </summary>
  public sealed partial class DrillStatisticReq : pb::IMessage<DrillStatisticReq> {
    private static readonly pb::MessageParser<DrillStatisticReq> _parser = new pb::MessageParser<DrillStatisticReq>(() => new DrillStatisticReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DrillStatisticReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[127]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillStatisticReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillStatisticReq(DrillStatisticReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillStatisticReq Clone() {
      return new DrillStatisticReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DrillStatisticReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DrillStatisticReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DrillStatisticReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class MoveMainCityReq : pb::IMessage<MoveMainCityReq> {
    private static readonly pb::MessageParser<MoveMainCityReq> _parser = new pb::MessageParser<MoveMainCityReq>(() => new MoveMainCityReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveMainCityReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[128]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveMainCityReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveMainCityReq(MoveMainCityReq other) : this() {
      cityId_ = other.cityId_;
      destPos_ = other.destPos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveMainCityReq Clone() {
      return new MoveMainCityReq(this);
    }

    /// <summary>Field number for the "city_id" field.</summary>
    public const int CityIdFieldNumber = 1;
    private long cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "dest_pos" field.</summary>
    public const int DestPosFieldNumber = 2;
    private int destPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DestPos {
      get { return destPos_; }
      set {
        destPos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveMainCityReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveMainCityReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CityId != other.CityId) return false;
      if (DestPos != other.DestPos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CityId != 0L) hash ^= CityId.GetHashCode();
      if (DestPos != 0) hash ^= DestPos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CityId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CityId);
      }
      if (DestPos != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DestPos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CityId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CityId);
      }
      if (DestPos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DestPos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveMainCityReq other) {
      if (other == null) {
        return;
      }
      if (other.CityId != 0L) {
        CityId = other.CityId;
      }
      if (other.DestPos != 0) {
        DestPos = other.DestPos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CityId = input.ReadInt64();
            break;
          }
          case 16: {
            DestPos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CityInvincibleReq : pb::IMessage<CityInvincibleReq> {
    private static readonly pb::MessageParser<CityInvincibleReq> _parser = new pb::MessageParser<CityInvincibleReq>(() => new CityInvincibleReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CityInvincibleReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[129]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CityInvincibleReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CityInvincibleReq(CityInvincibleReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CityInvincibleReq Clone() {
      return new CityInvincibleReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CityInvincibleReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CityInvincibleReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CityInvincibleReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 英雄拆技能
  /// </summary>
  public sealed partial class Hero2SkillReq : pb::IMessage<Hero2SkillReq> {
    private static readonly pb::MessageParser<Hero2SkillReq> _parser = new pb::MessageParser<Hero2SkillReq>(() => new Hero2SkillReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hero2SkillReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[130]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hero2SkillReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hero2SkillReq(Hero2SkillReq other) : this() {
      heroRid_ = other.heroRid_;
      skillId_ = other.skillId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hero2SkillReq Clone() {
      return new Hero2SkillReq(this);
    }

    /// <summary>Field number for the "hero_rid" field.</summary>
    public const int HeroRidFieldNumber = 1;
    private long heroRid_;
    /// <summary>
    /// 消耗的英雄
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroRid {
      get { return heroRid_; }
      set {
        heroRid_ = value;
      }
    }

    /// <summary>Field number for the "skill_id" field.</summary>
    public const int SkillIdFieldNumber = 2;
    private int skillId_;
    /// <summary>
    /// 要拆的技能id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillId {
      get { return skillId_; }
      set {
        skillId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hero2SkillReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hero2SkillReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroRid != other.HeroRid) return false;
      if (SkillId != other.SkillId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroRid != 0L) hash ^= HeroRid.GetHashCode();
      if (SkillId != 0) hash ^= SkillId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeroRid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(HeroRid);
      }
      if (SkillId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SkillId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroRid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroRid);
      }
      if (SkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hero2SkillReq other) {
      if (other == null) {
        return;
      }
      if (other.HeroRid != 0L) {
        HeroRid = other.HeroRid;
      }
      if (other.SkillId != 0) {
        SkillId = other.SkillId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HeroRid = input.ReadInt64();
            break;
          }
          case 16: {
            SkillId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// robot task
  /// </summary>
  public sealed partial class RobotTaskReq : pb::IMessage<RobotTaskReq> {
    private static readonly pb::MessageParser<RobotTaskReq> _parser = new pb::MessageParser<RobotTaskReq>(() => new RobotTaskReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RobotTaskReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[131]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotTaskReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotTaskReq(RobotTaskReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotTaskReq Clone() {
      return new RobotTaskReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RobotTaskReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RobotTaskReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RobotTaskReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// robot task
  /// </summary>
  public sealed partial class RobotTaskFinshReq : pb::IMessage<RobotTaskFinshReq> {
    private static readonly pb::MessageParser<RobotTaskFinshReq> _parser = new pb::MessageParser<RobotTaskFinshReq>(() => new RobotTaskFinshReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RobotTaskFinshReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[132]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotTaskFinshReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotTaskFinshReq(RobotTaskFinshReq other) : this() {
      taskId_ = other.taskId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotTaskFinshReq Clone() {
      return new RobotTaskFinshReq(this);
    }

    /// <summary>Field number for the "taskId" field.</summary>
    public const int TaskIdFieldNumber = 1;
    private long taskId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TaskId {
      get { return taskId_; }
      set {
        taskId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RobotTaskFinshReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RobotTaskFinshReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskId != other.TaskId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskId != 0L) hash ^= TaskId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaskId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TaskId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RobotTaskFinshReq other) {
      if (other == null) {
        return;
      }
      if (other.TaskId != 0L) {
        TaskId = other.TaskId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求排行榜
  /// </summary>
  public sealed partial class LeaderBoardReq : pb::IMessage<LeaderBoardReq> {
    private static readonly pb::MessageParser<LeaderBoardReq> _parser = new pb::MessageParser<LeaderBoardReq>(() => new LeaderBoardReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaderBoardReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[133]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaderBoardReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaderBoardReq(LeaderBoardReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaderBoardReq Clone() {
      return new LeaderBoardReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaderBoardReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaderBoardReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaderBoardReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///天下大势
  /// </summary>
  public sealed partial class EpicAwardReq : pb::IMessage<EpicAwardReq> {
    private static readonly pb::MessageParser<EpicAwardReq> _parser = new pb::MessageParser<EpicAwardReq>(() => new EpicAwardReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EpicAwardReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[134]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EpicAwardReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EpicAwardReq(EpicAwardReq other) : this() {
      epicId_ = other.epicId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EpicAwardReq Clone() {
      return new EpicAwardReq(this);
    }

    /// <summary>Field number for the "epic_id" field.</summary>
    public const int EpicIdFieldNumber = 1;
    private int epicId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EpicId {
      get { return epicId_; }
      set {
        epicId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EpicAwardReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EpicAwardReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EpicId != other.EpicId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EpicId != 0) hash ^= EpicId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EpicId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EpicId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EpicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EpicId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EpicAwardReq other) {
      if (other == null) {
        return;
      }
      if (other.EpicId != 0) {
        EpicId = other.EpicId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EpicId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetEpicInfoReq : pb::IMessage<GetEpicInfoReq> {
    private static readonly pb::MessageParser<GetEpicInfoReq> _parser = new pb::MessageParser<GetEpicInfoReq>(() => new GetEpicInfoReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetEpicInfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[135]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEpicInfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEpicInfoReq(GetEpicInfoReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEpicInfoReq Clone() {
      return new GetEpicInfoReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetEpicInfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetEpicInfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetEpicInfoReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 登录任务
  /// </summary>
  public sealed partial class TaskEventAwardReq : pb::IMessage<TaskEventAwardReq> {
    private static readonly pb::MessageParser<TaskEventAwardReq> _parser = new pb::MessageParser<TaskEventAwardReq>(() => new TaskEventAwardReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskEventAwardReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[136]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskEventAwardReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskEventAwardReq(TaskEventAwardReq other) : this() {
      taskId_ = other.taskId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskEventAwardReq Clone() {
      return new TaskEventAwardReq(this);
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 1;
    private int taskId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskId {
      get { return taskId_; }
      set {
        taskId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskEventAwardReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskEventAwardReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskId != other.TaskId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskId != 0) hash ^= TaskId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaskId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskEventAwardReq other) {
      if (other == null) {
        return;
      }
      if (other.TaskId != 0) {
        TaskId = other.TaskId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PNRegisterReq : pb::IMessage<PNRegisterReq> {
    private static readonly pb::MessageParser<PNRegisterReq> _parser = new pb::MessageParser<PNRegisterReq>(() => new PNRegisterReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PNRegisterReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[137]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PNRegisterReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PNRegisterReq(PNRegisterReq other) : this() {
      pushType_ = other.pushType_;
      pushToken_ = other.pushToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PNRegisterReq Clone() {
      return new PNRegisterReq(this);
    }

    /// <summary>Field number for the "push_type" field.</summary>
    public const int PushTypeFieldNumber = 1;
    private string pushType_ = "";
    /// <summary>
    /// apns , gcm, fcm
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PushType {
      get { return pushType_; }
      set {
        pushType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "push_token" field.</summary>
    public const int PushTokenFieldNumber = 2;
    private string pushToken_ = "";
    /// <summary>
    /// Apple Device Token或Android GCM Registration ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PushToken {
      get { return pushToken_; }
      set {
        pushToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PNRegisterReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PNRegisterReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PushType != other.PushType) return false;
      if (PushToken != other.PushToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PushType.Length != 0) hash ^= PushType.GetHashCode();
      if (PushToken.Length != 0) hash ^= PushToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PushType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PushType);
      }
      if (PushToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PushToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PushType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PushType);
      }
      if (PushToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PushToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PNRegisterReq other) {
      if (other == null) {
        return;
      }
      if (other.PushType.Length != 0) {
        PushType = other.PushType;
      }
      if (other.PushToken.Length != 0) {
        PushToken = other.PushToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PushType = input.ReadString();
            break;
          }
          case 18: {
            PushToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 请求paytoken
  /// </summary>
  public sealed partial class PayTokenReq : pb::IMessage<PayTokenReq> {
    private static readonly pb::MessageParser<PayTokenReq> _parser = new pb::MessageParser<PayTokenReq>(() => new PayTokenReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PayTokenReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[138]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayTokenReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayTokenReq(PayTokenReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayTokenReq Clone() {
      return new PayTokenReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PayTokenReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PayTokenReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PayTokenReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 检查名字是否合法
  /// </summary>
  public sealed partial class ChangeNameCheckReq : pb::IMessage<ChangeNameCheckReq> {
    private static readonly pb::MessageParser<ChangeNameCheckReq> _parser = new pb::MessageParser<ChangeNameCheckReq>(() => new ChangeNameCheckReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeNameCheckReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[139]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeNameCheckReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeNameCheckReq(ChangeNameCheckReq other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeNameCheckReq Clone() {
      return new ChangeNameCheckReq(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// 名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeNameCheckReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeNameCheckReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeNameCheckReq other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeNameReq : pb::IMessage<ChangeNameReq> {
    private static readonly pb::MessageParser<ChangeNameReq> _parser = new pb::MessageParser<ChangeNameReq>(() => new ChangeNameReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeNameReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[140]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeNameReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeNameReq(ChangeNameReq other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeNameReq Clone() {
      return new ChangeNameReq(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// 新名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeNameReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeNameReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeNameReq other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// npc城占领情况
  /// </summary>
  public sealed partial class NpcCityOccupyReq : pb::IMessage<NpcCityOccupyReq> {
    private static readonly pb::MessageParser<NpcCityOccupyReq> _parser = new pb::MessageParser<NpcCityOccupyReq>(() => new NpcCityOccupyReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NpcCityOccupyReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[141]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NpcCityOccupyReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NpcCityOccupyReq(NpcCityOccupyReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NpcCityOccupyReq Clone() {
      return new NpcCityOccupyReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NpcCityOccupyReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NpcCityOccupyReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NpcCityOccupyReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 问卷调查奖励
  /// </summary>
  public sealed partial class QuestionNaireAwardReq : pb::IMessage<QuestionNaireAwardReq> {
    private static readonly pb::MessageParser<QuestionNaireAwardReq> _parser = new pb::MessageParser<QuestionNaireAwardReq>(() => new QuestionNaireAwardReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuestionNaireAwardReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[142]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestionNaireAwardReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestionNaireAwardReq(QuestionNaireAwardReq other) : this() {
      finType_ = other.finType_;
      taskId_ = other.taskId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestionNaireAwardReq Clone() {
      return new QuestionNaireAwardReq(this);
    }

    /// <summary>Field number for the "fin_type" field.</summary>
    public const int FinTypeFieldNumber = 1;
    private int finType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FinType {
      get { return finType_; }
      set {
        finType_ = value;
      }
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 2;
    private int taskId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskId {
      get { return taskId_; }
      set {
        taskId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuestionNaireAwardReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuestionNaireAwardReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FinType != other.FinType) return false;
      if (TaskId != other.TaskId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FinType != 0) hash ^= FinType.GetHashCode();
      if (TaskId != 0) hash ^= TaskId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FinType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FinType);
      }
      if (TaskId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FinType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FinType);
      }
      if (TaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuestionNaireAwardReq other) {
      if (other == null) {
        return;
      }
      if (other.FinType != 0) {
        FinType = other.FinType;
      }
      if (other.TaskId != 0) {
        TaskId = other.TaskId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FinType = input.ReadInt32();
            break;
          }
          case 16: {
            TaskId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// QueryPlayerByNameReq 玩家名字查询, 前缀匹配
  /// </summary>
  public sealed partial class QueryPlayersByNameReq : pb::IMessage<QueryPlayersByNameReq> {
    private static readonly pb::MessageParser<QueryPlayersByNameReq> _parser = new pb::MessageParser<QueryPlayersByNameReq>(() => new QueryPlayersByNameReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryPlayersByNameReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[143]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPlayersByNameReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPlayersByNameReq(QueryPlayersByNameReq other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPlayersByNameReq Clone() {
      return new QueryPlayersByNameReq(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryPlayersByNameReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryPlayersByNameReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryPlayersByNameReq other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// QueryPlayerReq 玩家名字查询, 唯一匹配
  /// </summary>
  public sealed partial class QueryPlayerReq : pb::IMessage<QueryPlayerReq> {
    private static readonly pb::MessageParser<QueryPlayerReq> _parser = new pb::MessageParser<QueryPlayerReq>(() => new QueryPlayerReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryPlayerReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[144]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPlayerReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPlayerReq(QueryPlayerReq other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPlayerReq Clone() {
      return new QueryPlayerReq(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryPlayerReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryPlayerReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryPlayerReq other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginEventAwardReq : pb::IMessage<LoginEventAwardReq> {
    private static readonly pb::MessageParser<LoginEventAwardReq> _parser = new pb::MessageParser<LoginEventAwardReq>(() => new LoginEventAwardReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginEventAwardReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cspb.ReqReflection.Descriptor.MessageTypes[145]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginEventAwardReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginEventAwardReq(LoginEventAwardReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginEventAwardReq Clone() {
      return new LoginEventAwardReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginEventAwardReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginEventAwardReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginEventAwardReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
